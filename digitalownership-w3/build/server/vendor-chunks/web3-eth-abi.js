"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-abi";
exports.ids = ["vendor-chunks/web3-eth-abi"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/errors_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeErrorSignature: () => (/* binding */ encodeErrorSignature)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n *\n *  @module ABI\n */ \n\n\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */ const encodeErrorSignature = (functionName)=>{\n    if (typeof functionName !== \"string\" && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiErrorFragment)(functionName)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(\"Invalid parameter value in encodeErrorSignature\");\n    }\n    let name;\n    if (functionName && (typeof functionName === \"function\" || typeof functionName === \"object\")) {\n        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);\n    } else {\n        name = functionName;\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(name);\n}; //# sourceMappingURL=errors_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2Vycm9yc19hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNBOzs7Q0FHQyxHQUNvQztBQUNFO0FBQ3VDO0FBQzlFOztDQUVDLEdBQ00sTUFBTUksdUJBQXVCLENBQUNDO0lBQ2pDLElBQUksT0FBT0EsaUJBQWlCLFlBQVksQ0FBQ0YsNkRBQWtCQSxDQUFDRSxlQUFlO1FBQ3ZFLE1BQU0sSUFBSUosaURBQVFBLENBQUM7SUFDdkI7SUFDQSxJQUFJSztJQUNKLElBQUlELGdCQUFpQixRQUFPQSxpQkFBaUIsY0FBYyxPQUFPQSxpQkFBaUIsUUFBTyxHQUFJO1FBQzFGQyxPQUFPSixzRUFBMkJBLENBQUNHO0lBQ3ZDLE9BQ0s7UUFDREMsT0FBT0Q7SUFDWDtJQUNBLE9BQU9MLG1EQUFPQSxDQUFDTTtBQUNuQixFQUFFLENBQ0Ysc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2FwaS9lcnJvcnNfYXBpLmpzP2IyMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqXG4gKiAgQG1vZHVsZSBBQklcbiAqL1xuaW1wb3J0IHsgc2hhM1JhdyB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmcsIGlzQWJpRXJyb3JGcmFnbWVudCB9IGZyb20gJy4uL3V0aWxzLmpzJztcbi8qKlxuICogRW5jb2RlcyB0aGUgZXJyb3IgbmFtZSB0byBpdHMgQUJJIHNpZ25hdHVyZSwgd2hpY2ggYXJlIHRoZSBzaGEzIGhhc2ggb2YgdGhlIGVycm9yIG5hbWUgaW5jbHVkaW5nIGlucHV0IHR5cGVzLlxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlRXJyb3JTaWduYXR1cmUgPSAoZnVuY3Rpb25OYW1lKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBmdW5jdGlvbk5hbWUgIT09ICdzdHJpbmcnICYmICFpc0FiaUVycm9yRnJhZ21lbnQoZnVuY3Rpb25OYW1lKSkge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ0ludmFsaWQgcGFyYW1ldGVyIHZhbHVlIGluIGVuY29kZUVycm9yU2lnbmF0dXJlJyk7XG4gICAgfVxuICAgIGxldCBuYW1lO1xuICAgIGlmIChmdW5jdGlvbk5hbWUgJiYgKHR5cGVvZiBmdW5jdGlvbk5hbWUgPT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGZ1bmN0aW9uTmFtZSA9PT0gJ29iamVjdCcpKSB7XG4gICAgICAgIG5hbWUgPSBqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmcoZnVuY3Rpb25OYW1lKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG5hbWUgPSBmdW5jdGlvbk5hbWU7XG4gICAgfVxuICAgIHJldHVybiBzaGEzUmF3KG5hbWUpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yc19hcGkuanMubWFwIl0sIm5hbWVzIjpbInNoYTNSYXciLCJBYmlFcnJvciIsImpzb25JbnRlcmZhY2VNZXRob2RUb1N0cmluZyIsImlzQWJpRXJyb3JGcmFnbWVudCIsImVuY29kZUVycm9yU2lnbmF0dXJlIiwiZnVuY3Rpb25OYW1lIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/events_api.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/events_api.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeEventSignature: () => (/* binding */ encodeEventSignature)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n *\n *  @module ABI\n */ \n\n\n/**\n * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.\n * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).\n * @returns - The ABI signature of the event.\n *\n * @example\n * ```ts\n * const event = web3.eth.abi.encodeEventSignature({\n *   name: \"myEvent\",\n *   type: \"event\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"bytes32\",\n *       name: \"myBytes\",\n *     },\n *   ],\n * });\n * console.log(event);\n * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97\n *\n *  const event = web3.eth.abi.encodeEventSignature({\n *   inputs: [\n *     {\n *       indexed: true,\n *       name: \"from\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: true,\n *       name: \"to\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: false,\n *       name: \"value\",\n *       type: \"uint256\",\n *     },\n *   ],\n *   name: \"Transfer\",\n *   type: \"event\",\n * });\n * console.log(event);\n * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n * ```\n */ const encodeEventSignature = (functionName)=>{\n    if (typeof functionName !== \"string\" && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiEventFragment)(functionName)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(\"Invalid parameter value in encodeEventSignature\");\n    }\n    let name;\n    if (functionName && (typeof functionName === \"function\" || typeof functionName === \"object\")) {\n        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);\n    } else {\n        name = functionName;\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.sha3Raw)(name);\n}; //# sourceMappingURL=events_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2V2ZW50c19hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUNBOzs7Q0FHQyxHQUNvQztBQUNFO0FBQ3VDO0FBQzlFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FnREMsR0FDTSxNQUFNSSx1QkFBdUIsQ0FBQ0M7SUFDakMsSUFBSSxPQUFPQSxpQkFBaUIsWUFBWSxDQUFDRiw2REFBa0JBLENBQUNFLGVBQWU7UUFDdkUsTUFBTSxJQUFJSixpREFBUUEsQ0FBQztJQUN2QjtJQUNBLElBQUlLO0lBQ0osSUFBSUQsZ0JBQWlCLFFBQU9BLGlCQUFpQixjQUFjLE9BQU9BLGlCQUFpQixRQUFPLEdBQUk7UUFDMUZDLE9BQU9KLHNFQUEyQkEsQ0FBQ0c7SUFDdkMsT0FDSztRQUNEQyxPQUFPRDtJQUNYO0lBQ0EsT0FBT0wsbURBQU9BLENBQUNNO0FBQ25CLEVBQUUsQ0FDRixzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vYXBpL2V2ZW50c19hcGkuanM/OGQ3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qKlxuICpcbiAqICBAbW9kdWxlIEFCSVxuICovXG5pbXBvcnQgeyBzaGEzUmF3IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBBYmlFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IGpzb25JbnRlcmZhY2VNZXRob2RUb1N0cmluZywgaXNBYmlFdmVudEZyYWdtZW50IH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuLyoqXG4gKiBFbmNvZGVzIHRoZSBldmVudCBuYW1lIHRvIGl0cyBBQkkgc2lnbmF0dXJlLCB3aGljaCBhcmUgdGhlIHNoYTMgaGFzaCBvZiB0aGUgZXZlbnQgbmFtZSBpbmNsdWRpbmcgaW5wdXQgdHlwZXMuXG4gKiBAcGFyYW0gZnVuY3Rpb25OYW1lIC0gVGhlIGV2ZW50IG5hbWUgdG8gZW5jb2RlLCBvciB0aGUge0BsaW5rIEFiaUV2ZW50RnJhZ21lbnR9IG9iamVjdCBvZiB0aGUgZXZlbnQuIElmIHN0cmluZywgaXQgaGFzIHRvIGJlIGluIHRoZSBmb3JtIG9mIGBldmVudE5hbWUocGFyYW0xVHlwZSxwYXJhbTJUeXBlLC4uLilgLiBlZzogbXlFdmVudCh1aW50MjU2LGJ5dGVzMzIpLlxuICogQHJldHVybnMgLSBUaGUgQUJJIHNpZ25hdHVyZSBvZiB0aGUgZXZlbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zdCBldmVudCA9IHdlYjMuZXRoLmFiaS5lbmNvZGVFdmVudFNpZ25hdHVyZSh7XG4gKiAgIG5hbWU6IFwibXlFdmVudFwiLFxuICogICB0eXBlOiBcImV2ZW50XCIsXG4gKiAgIGlucHV0czogW1xuICogICAgIHtcbiAqICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICogICAgICAgbmFtZTogXCJteU51bWJlclwiLFxuICogICAgIH0sXG4gKiAgICAge1xuICogICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gKiAgICAgICBuYW1lOiBcIm15Qnl0ZXNcIixcbiAqICAgICB9LFxuICogICBdLFxuICogfSk7XG4gKiBjb25zb2xlLmxvZyhldmVudCk7XG4gKiA+IDB4ZjJlZWI3MjllNjM2YThjYjc4M2JlMDQ0YWNmNmI3YjFlMmM1ODYzNzM1YjYwZDZkYWFlODRjMzY2ZWU4N2Q5N1xuICpcbiAqICBjb25zdCBldmVudCA9IHdlYjMuZXRoLmFiaS5lbmNvZGVFdmVudFNpZ25hdHVyZSh7XG4gKiAgIGlucHV0czogW1xuICogICAgIHtcbiAqICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gKiAgICAgICBuYW1lOiBcImZyb21cIixcbiAqICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICogICAgIH0sXG4gKiAgICAge1xuICogICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAqICAgICAgIG5hbWU6IFwidG9cIixcbiAqICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICogICAgIH0sXG4gKiAgICAge1xuICogICAgICAgaW5kZXhlZDogZmFsc2UsXG4gKiAgICAgICBuYW1lOiBcInZhbHVlXCIsXG4gKiAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAqICAgICB9LFxuICogICBdLFxuICogICBuYW1lOiBcIlRyYW5zZmVyXCIsXG4gKiAgIHR5cGU6IFwiZXZlbnRcIixcbiAqIH0pO1xuICogY29uc29sZS5sb2coZXZlbnQpO1xuICogPiAweGRkZjI1MmFkMWJlMmM4OWI2OWMyYjA2OGZjMzc4ZGFhOTUyYmE3ZjE2M2M0YTExNjI4ZjU1YTRkZjUyM2IzZWZcbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgZW5jb2RlRXZlbnRTaWduYXR1cmUgPSAoZnVuY3Rpb25OYW1lKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBmdW5jdGlvbk5hbWUgIT09ICdzdHJpbmcnICYmICFpc0FiaUV2ZW50RnJhZ21lbnQoZnVuY3Rpb25OYW1lKSkge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ0ludmFsaWQgcGFyYW1ldGVyIHZhbHVlIGluIGVuY29kZUV2ZW50U2lnbmF0dXJlJyk7XG4gICAgfVxuICAgIGxldCBuYW1lO1xuICAgIGlmIChmdW5jdGlvbk5hbWUgJiYgKHR5cGVvZiBmdW5jdGlvbk5hbWUgPT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGZ1bmN0aW9uTmFtZSA9PT0gJ29iamVjdCcpKSB7XG4gICAgICAgIG5hbWUgPSBqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmcoZnVuY3Rpb25OYW1lKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG5hbWUgPSBmdW5jdGlvbk5hbWU7XG4gICAgfVxuICAgIHJldHVybiBzaGEzUmF3KG5hbWUpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50c19hcGkuanMubWFwIl0sIm5hbWVzIjpbInNoYTNSYXciLCJBYmlFcnJvciIsImpzb25JbnRlcmZhY2VNZXRob2RUb1N0cmluZyIsImlzQWJpRXZlbnRGcmFnbWVudCIsImVuY29kZUV2ZW50U2lnbmF0dXJlIiwiZnVuY3Rpb25OYW1lIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/events_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/functions_api.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/functions_api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeFunctionCall: () => (/* binding */ encodeFunctionCall),\n/* harmony export */   encodeFunctionSignature: () => (/* binding */ encodeFunctionSignature)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/* harmony import */ var _parameters_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n *\n *  @module ABI\n */ \n\n\n\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */ const encodeFunctionSignature = (functionName)=>{\n    if (typeof functionName !== \"string\" && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiFunctionFragment)(functionName)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid parameter value in encodeFunctionSignature\");\n    }\n    let name;\n    if (functionName && (typeof functionName === \"function\" || typeof functionName === \"object\")) {\n        name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(functionName);\n    } else {\n        name = functionName;\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.sha3Raw)(name).slice(0, 10);\n};\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */ const encodeFunctionCall = (jsonInterface, params)=>{\n    var _a;\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAbiFunctionFragment)(jsonInterface)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid parameter value in encodeFunctionCall\");\n    }\n    return `${encodeFunctionSignature(jsonInterface)}${(0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_3__.encodeParameters)((_a = jsonInterface.inputs) !== null && _a !== void 0 ? _a : [], params !== null && params !== void 0 ? params : []).replace(\"0x\", \"\")}`;\n}; //# sourceMappingURL=functions_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/functions_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/logs_api.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/logs_api.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeLog: () => (/* binding */ decodeLog)\n/* harmony export */ });\n/* harmony import */ var _parameters_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \nconst STATIC_TYPES = [\n    \"bool\",\n    \"string\",\n    \"int\",\n    \"uint\",\n    \"address\",\n    \"fixed\",\n    \"ufixed\"\n];\nconst _decodeParameter = (inputType, clonedTopic)=>inputType === \"string\" ? clonedTopic : (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_0__.decodeParameter)(inputType, clonedTopic);\n/**\n * Decodes ABI-encoded log data and indexed topic data.\n * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param data - The ABI byte code in the `data` field of a log.\n * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]\n * @returns - The result object containing the decoded parameters.\n *\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeLog(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *        indexed: true,\n *      },\n *      {\n *        type: \"uint8\",\n *        name: \"mySmallNumber\",\n *        indexed: true,\n *      },\n *    ],\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000\",\n *    [\n *      \"0x000000000000000000000000000000000000000000000000000000000000f310\",\n *      \"0x0000000000000000000000000000000000000000000000000000000000000010\",\n *    ]\n *  );\n * > {\n *  '0': 'Hello%!',\n *  '1': 62224n,\n *  '2': 16n,\n *  __length__: 3,\n *  myString: 'Hello%!',\n *  myNumber: 62224n,\n *  mySmallNumber: 16n\n * }\n * ```\n */ const decodeLog = (inputs, data, topics)=>{\n    const clonedTopics = Array.isArray(topics) ? topics : [\n        topics\n    ];\n    const indexedInputs = {};\n    const nonIndexedInputs = {};\n    for (const [i, input] of inputs.entries()){\n        if (input.indexed) {\n            indexedInputs[i] = input;\n        } else {\n            nonIndexedInputs[i] = input;\n        }\n    }\n    const decodedNonIndexedInputs = data ? (0,_parameters_api_js__WEBPACK_IMPORTED_MODULE_0__.decodeParametersWith)(Object.values(nonIndexedInputs), data, true) : {\n        __length__: 0\n    };\n    // If topics are more than indexed inputs, that means first topic is the event signature\n    const offset = clonedTopics.length - Object.keys(indexedInputs).length;\n    const decodedIndexedInputs = Object.values(indexedInputs).map((input, index)=>STATIC_TYPES.some((s)=>input.type.startsWith(s)) ? _decodeParameter(input.type, clonedTopics[index + offset]) : clonedTopics[index + offset]);\n    const returnValues = {\n        __length__: 0\n    };\n    let indexedCounter = 0;\n    let nonIndexedCounter = 0;\n    for (const [i, res] of inputs.entries()){\n        returnValues[i] = res.type === \"string\" ? \"\" : undefined;\n        if (indexedInputs[i]) {\n            returnValues[i] = decodedIndexedInputs[indexedCounter];\n            indexedCounter += 1;\n        }\n        if (nonIndexedInputs[i]) {\n            returnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];\n            nonIndexedCounter += 1;\n        }\n        if (res.name) {\n            returnValues[res.name] = returnValues[i];\n        }\n        returnValues.__length__ += 1;\n    }\n    return returnValues;\n}; //# sourceMappingURL=logs_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/logs_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeParameter: () => (/* binding */ decodeParameter),\n/* harmony export */   decodeParameters: () => (/* binding */ decodeParameters),\n/* harmony export */   decodeParametersWith: () => (/* binding */ decodeParametersWith),\n/* harmony export */   encodeParameter: () => (/* binding */ encodeParameter),\n/* harmony export */   encodeParameters: () => (/* reexport safe */ _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters),\n/* harmony export */   inferTypesAndEncodeParameters: () => (/* reexport safe */ _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.inferTypesAndEncodeParameters)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _coders_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coders/decode.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/decode.js\");\n/* harmony import */ var _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coders/encode.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /**\n *\n *  @module ABI\n */ \n\n\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param param - The actual parameter to encode.\n * @returns -  The ABI encoded parameter\n * @example\n * ```ts\n *  const res = web3.eth.abi.encodeParameter(\"uint256\", \"2345675643\");\n *  console.log(res);\n *  0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *  const res = web3.eth.abi.encodeParameter(\"uint\", \"2345675643\");\n *\n *  console.log(res);\n *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *    const res = web3.eth.abi.encodeParameter(\"bytes32\", \"0xdf3234\");\n *\n *  console.log(res);\n *  >0xdf32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes\", \"0xdf3234\");\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes32[]\", [\"0xdf3234\", \"0xfdfd\"]);\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000\n *\n *  const res = web3.eth.abi.encodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    {\n *      propertyOne: 42,\n *      propertyTwo: 56,\n *      childStruct: {\n *        propertyOne: 45,\n *        propertyTwo: 78,\n *      },\n *    }\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\n * ```\n */ const encodeParameter = (abi, param)=>(0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)([\n        abi\n    ], [\n        param\n    ]);\n/**\n * Should be used to decode list of params\n */ const decodeParametersWith = (abis, bytes, loose)=>{\n    try {\n        if (abis.length > 0 && (!bytes || bytes === \"0x\" || bytes === \"0X\")) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Returned values aren't valid, did it run Out of Gas? \" + \"You might also see this error if you are not using the \" + \"correct ABI for the contract you are retrieving data from, \" + \"requesting data from a block number that does not exist, \" + \"or querying a node which is not fully synced.\");\n        }\n        return (0,_coders_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)(abis, `0x${bytes.replace(/0x/i, \"\")}`, loose);\n    } catch (err) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(`Parameter decoding error: ${err.message}`, {\n            internalErr: err\n        });\n    }\n};\n/**\n * Should be used to decode list of params\n */ /**\n * Decodes ABI encoded parameters to its JavaScript types.\n * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The result object containing the decoded parameters.\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeParameters(\n *    [\"string\", \"uint256\"],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *  console.log(res);\n *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }\n *\n * let res = web3.eth.abi.decodeParameters(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *      },\n *    ],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n * console.log(res);\n *  > {\n *  '0': 'Hello!%!',\n *  '1': 234n,\n *  __length__: 2,\n *  myString: 'Hello!%!',\n *  myNumber: 234n\n * }\n *\n * const res = web3.eth.abi.decodeParameters(\n *    [\n *      \"uint8[]\",\n *      {\n *        ParentStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *          childStruct: {\n *            propertyOne: \"uint256\",\n *            propertyTwo: \"uint256\",\n *          },\n *        },\n *      },\n *    ],\n *    \"0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018\"\n *  );\n *  console.log(res);\n *  >\n *  '0': [ 42n, 24n ],\n *  '1': {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  },\n *  __length__: 2,\n *  ParentStruct: {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  }\n *}\n * ```\n */ const decodeParameters = (abi, bytes)=>decodeParametersWith(abi, bytes, false);\n/**\n * Should be used to decode bytes to plain param\n */ /**\n * Decodes an ABI encoded parameter to its JavaScript type.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The decoded parameter\n * @example\n * ```ts\n *   const res = web3.eth.abi.decodeParameter(\n *    \"uint256\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000010\"\n *  );\n *  console.log(res);\n * > 16n\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    \"string\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *\n *  console.log(res);\n *  > Hello!%!\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    \"0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\"\n *  );\n *\n *  console.log(res);\n *   {\n *  '0': 42n,\n *  '1': 56n,\n *  '2': {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  },\n *  __length__: 3,\n *  propertyOne: 42n,\n *  propertyTwo: 56n,\n *  childStruct: {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  }\n *}\n * ```\n */ const decodeParameter = (abi, bytes)=>decodeParameters([\n        abi\n    ], bytes)[\"0\"]; //# sourceMappingURL=parameters_api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/address.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/address.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAddress: () => (/* binding */ decodeAddress),\n/* harmony export */   encodeAddress: () => (/* binding */ encodeAddress)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE - ADDRESS_BYTES_COUNT;\nfunction encodeAddress(param, input) {\n    if (typeof input !== \"string\") {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"address type expects string as input type\", {\n            value: input,\n            name: param.name,\n            type: param.type\n        });\n    }\n    let address = input.toLowerCase();\n    if (!address.startsWith(\"0x\")) {\n        address = `0x${address}`;\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not valid address\", {\n            value: input,\n            name: param.name,\n            type: param.type\n        });\n    }\n    // for better performance, we could convert hex to destination bytes directly (encoded var)\n    const addressBytes = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(address);\n    // expand address to WORD_SIZE\n    const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    encoded.set(addressBytes, ADDRESS_OFFSET);\n    return {\n        dynamic: false,\n        encoded\n    };\n}\nfunction decodeAddress(_param, bytes) {\n    const addressBytes = bytes.subarray(ADDRESS_OFFSET, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    if (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid decoding input, not enough bytes to decode address\", {\n            bytes\n        });\n    }\n    const result = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString(addressBytes);\n    // should we check is decoded value is valid address?\n    // if(!isAddress(result)) {\n    //     throw new AbiError(\"encoded data is not valid address\", {\n    //         address: result,\n    //     });\n    // }\n    return {\n        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toChecksumAddress)(result),\n        encoded: bytes.subarray(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),\n        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE\n    };\n} //# sourceMappingURL=address.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYWRkcmVzcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDdUM7QUFDUTtBQUNHO0FBQ0g7QUFDL0MsTUFBTU0sc0JBQXNCO0FBQzVCLE1BQU1DLGlCQUFpQkYsZ0RBQVNBLEdBQUdDO0FBQzVCLFNBQVNFLGNBQWNDLEtBQUssRUFBRUMsS0FBSztJQUN0QyxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUMzQixNQUFNLElBQUlWLGlEQUFRQSxDQUFDLDZDQUE2QztZQUM1RFcsT0FBT0Q7WUFDUEUsTUFBTUgsTUFBTUcsSUFBSTtZQUNoQkMsTUFBTUosTUFBTUksSUFBSTtRQUNwQjtJQUNKO0lBQ0EsSUFBSUMsVUFBVUosTUFBTUssV0FBVztJQUMvQixJQUFJLENBQUNELFFBQVFFLFVBQVUsQ0FBQyxPQUFPO1FBQzNCRixVQUFVLENBQUMsRUFBRSxFQUFFQSxRQUFRLENBQUM7SUFDNUI7SUFDQSxJQUFJLENBQUNaLHlEQUFTQSxDQUFDWSxVQUFVO1FBQ3JCLE1BQU0sSUFBSWQsaURBQVFBLENBQUMsdUNBQXVDO1lBQ3REVyxPQUFPRDtZQUNQRSxNQUFNSCxNQUFNRyxJQUFJO1lBQ2hCQyxNQUFNSixNQUFNSSxJQUFJO1FBQ3BCO0lBQ0o7SUFDQSwyRkFBMkY7SUFDM0YsTUFBTUksZUFBZWQsaUVBQXFCLENBQUNXO0lBQzNDLDhCQUE4QjtJQUM5QixNQUFNSyxVQUFVZixnREFBS0EsQ0FBQ0MsZ0RBQVNBO0lBQy9CYyxRQUFRQyxHQUFHLENBQUNILGNBQWNWO0lBQzFCLE9BQU87UUFDSGMsU0FBUztRQUNURjtJQUNKO0FBQ0o7QUFDTyxTQUFTRyxjQUFjQyxNQUFNLEVBQUVDLEtBQUs7SUFDdkMsTUFBTVAsZUFBZU8sTUFBTUMsUUFBUSxDQUFDbEIsZ0JBQWdCRixnREFBU0E7SUFDN0QsSUFBSVksYUFBYVMsTUFBTSxLQUFLcEIscUJBQXFCO1FBQzdDLE1BQU0sSUFBSU4saURBQVFBLENBQUMsOERBQThEO1lBQUV3QjtRQUFNO0lBQzdGO0lBQ0EsTUFBTUcsU0FBU3hCLHVFQUEyQixDQUFDYztJQUMzQyxxREFBcUQ7SUFDckQsMkJBQTJCO0lBQzNCLGdFQUFnRTtJQUNoRSwyQkFBMkI7SUFDM0IsVUFBVTtJQUNWLElBQUk7SUFDSixPQUFPO1FBQ0hVLFFBQVExQiw2REFBaUJBLENBQUMwQjtRQUMxQlIsU0FBU0ssTUFBTUMsUUFBUSxDQUFDcEIsZ0RBQVNBO1FBQ2pDd0IsVUFBVXhCLGdEQUFTQTtJQUN2QjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2NvZGVycy9iYXNlL2FkZHJlc3MuanM/MzlhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IEFiaUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgdG9DaGVja3N1bUFkZHJlc3MgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGlzQWRkcmVzcywgdXRpbHMgfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBhbGxvYywgV09SRF9TSVpFIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuY29uc3QgQUREUkVTU19CWVRFU19DT1VOVCA9IDIwO1xuY29uc3QgQUREUkVTU19PRkZTRVQgPSBXT1JEX1NJWkUgLSBBRERSRVNTX0JZVEVTX0NPVU5UO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUFkZHJlc3MocGFyYW0sIGlucHV0KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdhZGRyZXNzIHR5cGUgZXhwZWN0cyBzdHJpbmcgYXMgaW5wdXQgdHlwZScsIHtcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbGV0IGFkZHJlc3MgPSBpbnB1dC50b0xvd2VyQ2FzZSgpO1xuICAgIGlmICghYWRkcmVzcy5zdGFydHNXaXRoKCcweCcpKSB7XG4gICAgICAgIGFkZHJlc3MgPSBgMHgke2FkZHJlc3N9YDtcbiAgICB9XG4gICAgaWYgKCFpc0FkZHJlc3MoYWRkcmVzcykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdwcm92aWRlZCBpbnB1dCBpcyBub3QgdmFsaWQgYWRkcmVzcycsIHtcbiAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gZm9yIGJldHRlciBwZXJmb3JtYW5jZSwgd2UgY291bGQgY29udmVydCBoZXggdG8gZGVzdGluYXRpb24gYnl0ZXMgZGlyZWN0bHkgKGVuY29kZWQgdmFyKVxuICAgIGNvbnN0IGFkZHJlc3NCeXRlcyA9IHV0aWxzLmhleFRvVWludDhBcnJheShhZGRyZXNzKTtcbiAgICAvLyBleHBhbmQgYWRkcmVzcyB0byBXT1JEX1NJWkVcbiAgICBjb25zdCBlbmNvZGVkID0gYWxsb2MoV09SRF9TSVpFKTtcbiAgICBlbmNvZGVkLnNldChhZGRyZXNzQnl0ZXMsIEFERFJFU1NfT0ZGU0VUKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBkeW5hbWljOiBmYWxzZSxcbiAgICAgICAgZW5jb2RlZCxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFkZHJlc3MoX3BhcmFtLCBieXRlcykge1xuICAgIGNvbnN0IGFkZHJlc3NCeXRlcyA9IGJ5dGVzLnN1YmFycmF5KEFERFJFU1NfT0ZGU0VULCBXT1JEX1NJWkUpO1xuICAgIGlmIChhZGRyZXNzQnl0ZXMubGVuZ3RoICE9PSBBRERSRVNTX0JZVEVTX0NPVU5UKSB7XG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcignSW52YWxpZCBkZWNvZGluZyBpbnB1dCwgbm90IGVub3VnaCBieXRlcyB0byBkZWNvZGUgYWRkcmVzcycsIHsgYnl0ZXMgfSk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHV0aWxzLnVpbnQ4QXJyYXlUb0hleFN0cmluZyhhZGRyZXNzQnl0ZXMpO1xuICAgIC8vIHNob3VsZCB3ZSBjaGVjayBpcyBkZWNvZGVkIHZhbHVlIGlzIHZhbGlkIGFkZHJlc3M/XG4gICAgLy8gaWYoIWlzQWRkcmVzcyhyZXN1bHQpKSB7XG4gICAgLy8gICAgIHRocm93IG5ldyBBYmlFcnJvcihcImVuY29kZWQgZGF0YSBpcyBub3QgdmFsaWQgYWRkcmVzc1wiLCB7XG4gICAgLy8gICAgICAgICBhZGRyZXNzOiByZXN1bHQsXG4gICAgLy8gICAgIH0pO1xuICAgIC8vIH1cbiAgICByZXR1cm4ge1xuICAgICAgICByZXN1bHQ6IHRvQ2hlY2tzdW1BZGRyZXNzKHJlc3VsdCksXG4gICAgICAgIGVuY29kZWQ6IGJ5dGVzLnN1YmFycmF5KFdPUkRfU0laRSksXG4gICAgICAgIGNvbnN1bWVkOiBXT1JEX1NJWkUsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbIkFiaUVycm9yIiwidG9DaGVja3N1bUFkZHJlc3MiLCJpc0FkZHJlc3MiLCJ1dGlscyIsImFsbG9jIiwiV09SRF9TSVpFIiwiQUREUkVTU19CWVRFU19DT1VOVCIsIkFERFJFU1NfT0ZGU0VUIiwiZW5jb2RlQWRkcmVzcyIsInBhcmFtIiwiaW5wdXQiLCJ2YWx1ZSIsIm5hbWUiLCJ0eXBlIiwiYWRkcmVzcyIsInRvTG93ZXJDYXNlIiwic3RhcnRzV2l0aCIsImFkZHJlc3NCeXRlcyIsImhleFRvVWludDhBcnJheSIsImVuY29kZWQiLCJzZXQiLCJkeW5hbWljIiwiZGVjb2RlQWRkcmVzcyIsIl9wYXJhbSIsImJ5dGVzIiwic3ViYXJyYXkiLCJsZW5ndGgiLCJyZXN1bHQiLCJ1aW50OEFycmF5VG9IZXhTdHJpbmciLCJjb25zdW1lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/address.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/array.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray: () => (/* binding */ decodeArray),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n// eslint-disable-next-line import/no-cycle\n\n\n\n\nfunction encodeArray(param, values) {\n    if (!Array.isArray(values)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Expected value to be array\", {\n            abi: param,\n            values\n        });\n    }\n    const { size, param: arrayItemParam } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractArrayType)(param);\n    const encodedParams = values.map((v)=>(0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(arrayItemParam, v));\n    const dynamic = size === -1;\n    const dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n    if (!dynamic && values.length !== size) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Given arguments count doesn't match array length\", {\n            arrayLength: size,\n            argumentsLength: values.length\n        });\n    }\n    if (dynamic || dynamicItems) {\n        const encodingResult = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.encodeDynamicParams)(encodedParams);\n        if (dynamic) {\n            const encodedLength = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeNumber)({\n                type: \"uint256\",\n                name: \"\"\n            }, encodedParams.length).encoded;\n            return {\n                dynamic: true,\n                encoded: encodedParams.length > 0 ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(encodedLength, encodingResult) : encodedLength\n            };\n        }\n        return {\n            dynamic: true,\n            encoded: encodingResult\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(...encodedParams.map((p)=>p.encoded))\n    };\n}\nfunction decodeArray(param, bytes) {\n    // eslint-disable-next-line prefer-const\n    let { size, param: arrayItemParam } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractArrayType)(param);\n    const dynamic = size === -1;\n    let consumed = 0;\n    const result = [];\n    let remaining = bytes;\n    // dynamic array, we need to decode length\n    if (dynamic) {\n        const lengthResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({\n            type: \"uint32\",\n            name: \"\"\n        }, bytes);\n        size = Number(lengthResult.result);\n        consumed = lengthResult.consumed;\n        remaining = lengthResult.encoded;\n    }\n    const hasDynamicChild = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isDynamic)(arrayItemParam);\n    if (hasDynamicChild) {\n        // known length but dynamic child, each child is actually head element with encoded offset\n        for(let i = 0; i < size; i += 1){\n            const offsetResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({\n                type: \"uint32\",\n                name: \"\"\n            }, remaining.subarray(i * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE));\n            consumed += offsetResult.consumed;\n            const decodedChildResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(arrayItemParam, remaining.subarray(Number(offsetResult.result)));\n            consumed += decodedChildResult.consumed;\n            result.push(decodedChildResult.result);\n        }\n        return {\n            result,\n            encoded: remaining.subarray(consumed),\n            consumed\n        };\n    }\n    for(let i = 0; i < size; i += 1){\n        // decode static params\n        const decodedChildResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(arrayItemParam, bytes.subarray(consumed));\n        consumed += decodedChildResult.consumed;\n        result.push(decodedChildResult.result);\n    }\n    return {\n        result,\n        encoded: bytes.subarray(consumed),\n        consumed\n    };\n} //# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBool: () => (/* binding */ decodeBool),\n/* harmony export */   encodeBoolean: () => (/* binding */ encodeBoolean)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nfunction encodeBoolean(param, input) {\n    let value;\n    try {\n        value = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toBool)(input);\n    } catch (e) {\n        if (e instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBooleanError) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not valid boolean value\", {\n                type: param.type,\n                value: input,\n                name: param.name\n            });\n        }\n    }\n    return (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.encodeNumber)({\n        type: \"uint8\",\n        name: \"\"\n    }, Number(value));\n}\nfunction decodeBool(_param, bytes) {\n    const numberResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_3__.decodeNumber)({\n        type: \"uint8\",\n        name: \"\"\n    }, bytes);\n    if (numberResult.result > 1 || numberResult.result < 0) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid boolean value encoded\", {\n            boolBytes: bytes.subarray(0, _utils_js__WEBPACK_IMPORTED_MODULE_2__.WORD_SIZE),\n            numberResult\n        });\n    }\n    return {\n        result: numberResult.result === BigInt(1),\n        encoded: numberResult.encoded,\n        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_2__.WORD_SIZE\n    };\n} //# sourceMappingURL=bool.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYm9vbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDNEQ7QUFDeEI7QUFDSTtBQUNpQjtBQUNsRCxTQUFTTSxjQUFjQyxLQUFLLEVBQUVDLEtBQUs7SUFDdEMsSUFBSUM7SUFDSixJQUFJO1FBQ0FBLFFBQVFQLGtEQUFNQSxDQUFDTTtJQUNuQixFQUNBLE9BQU9FLEdBQUc7UUFDTixJQUFJQSxhQUFhVCw0REFBbUJBLEVBQUU7WUFDbEMsTUFBTSxJQUFJRCxpREFBUUEsQ0FBQyw2Q0FBNkM7Z0JBQzVEVyxNQUFNSixNQUFNSSxJQUFJO2dCQUNoQkYsT0FBT0Q7Z0JBQ1BJLE1BQU1MLE1BQU1LLElBQUk7WUFDcEI7UUFDSjtJQUNKO0lBQ0EsT0FBT1Asd0RBQVlBLENBQUM7UUFBRU0sTUFBTTtRQUFTQyxNQUFNO0lBQUcsR0FBR0MsT0FBT0o7QUFDNUQ7QUFDTyxTQUFTSyxXQUFXQyxNQUFNLEVBQUVDLEtBQUs7SUFDcEMsTUFBTUMsZUFBZWIsd0RBQVlBLENBQUM7UUFBRU8sTUFBTTtRQUFTQyxNQUFNO0lBQUcsR0FBR0k7SUFDL0QsSUFBSUMsYUFBYUMsTUFBTSxHQUFHLEtBQUtELGFBQWFDLE1BQU0sR0FBRyxHQUFHO1FBQ3BELE1BQU0sSUFBSWxCLGlEQUFRQSxDQUFDLGlDQUFpQztZQUNoRG1CLFdBQVdILE1BQU1JLFFBQVEsQ0FBQyxHQUFHakIsZ0RBQVNBO1lBQ3RDYztRQUNKO0lBQ0o7SUFDQSxPQUFPO1FBQ0hDLFFBQVFELGFBQWFDLE1BQU0sS0FBS0csT0FBTztRQUN2Q0MsU0FBU0wsYUFBYUssT0FBTztRQUM3QkMsVUFBVXBCLGdEQUFTQTtJQUN2QjtBQUNKLEVBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2NvZGVycy9iYXNlL2Jvb2wuanM/YmM5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IEFiaUVycm9yLCBJbnZhbGlkQm9vbGVhbkVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgdG9Cb29sIH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBXT1JEX1NJWkUgfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVOdW1iZXIsIGVuY29kZU51bWJlciB9IGZyb20gJy4vbnVtYmVyLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCb29sZWFuKHBhcmFtLCBpbnB1dCkge1xuICAgIGxldCB2YWx1ZTtcbiAgICB0cnkge1xuICAgICAgICB2YWx1ZSA9IHRvQm9vbChpbnB1dCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChlIGluc3RhbmNlb2YgSW52YWxpZEJvb2xlYW5FcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdwcm92aWRlZCBpbnB1dCBpcyBub3QgdmFsaWQgYm9vbGVhbiB2YWx1ZScsIHtcbiAgICAgICAgICAgICAgICB0eXBlOiBwYXJhbS50eXBlLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBpbnB1dCxcbiAgICAgICAgICAgICAgICBuYW1lOiBwYXJhbS5uYW1lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZU51bWJlcih7IHR5cGU6ICd1aW50OCcsIG5hbWU6ICcnIH0sIE51bWJlcih2YWx1ZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJvb2woX3BhcmFtLCBieXRlcykge1xuICAgIGNvbnN0IG51bWJlclJlc3VsdCA9IGRlY29kZU51bWJlcih7IHR5cGU6ICd1aW50OCcsIG5hbWU6ICcnIH0sIGJ5dGVzKTtcbiAgICBpZiAobnVtYmVyUmVzdWx0LnJlc3VsdCA+IDEgfHwgbnVtYmVyUmVzdWx0LnJlc3VsdCA8IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdJbnZhbGlkIGJvb2xlYW4gdmFsdWUgZW5jb2RlZCcsIHtcbiAgICAgICAgICAgIGJvb2xCeXRlczogYnl0ZXMuc3ViYXJyYXkoMCwgV09SRF9TSVpFKSxcbiAgICAgICAgICAgIG51bWJlclJlc3VsdCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogbnVtYmVyUmVzdWx0LnJlc3VsdCA9PT0gQmlnSW50KDEpLFxuICAgICAgICBlbmNvZGVkOiBudW1iZXJSZXN1bHQuZW5jb2RlZCxcbiAgICAgICAgY29uc3VtZWQ6IFdPUkRfU0laRSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ym9vbC5qcy5tYXAiXSwibmFtZXMiOlsiQWJpRXJyb3IiLCJJbnZhbGlkQm9vbGVhbkVycm9yIiwidG9Cb29sIiwiV09SRF9TSVpFIiwiZGVjb2RlTnVtYmVyIiwiZW5jb2RlTnVtYmVyIiwiZW5jb2RlQm9vbGVhbiIsInBhcmFtIiwiaW5wdXQiLCJ2YWx1ZSIsImUiLCJ0eXBlIiwibmFtZSIsIk51bWJlciIsImRlY29kZUJvb2wiLCJfcGFyYW0iLCJieXRlcyIsIm51bWJlclJlc3VsdCIsInJlc3VsdCIsImJvb2xCeXRlcyIsInN1YmFycmF5IiwiQmlnSW50IiwiZW5jb2RlZCIsImNvbnN1bWVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBytes: () => (/* binding */ decodeBytes),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\nconst MAX_STATIC_BYTES_COUNT = 32;\nfunction encodeBytes(param, input) {\n    // hack for odd length hex strings\n    if (typeof input === \"string\" && input.length % 2 !== 0) {\n        // eslint-disable-next-line no-param-reassign\n        input += \"0\";\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isBytes)(input)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not valid bytes value\", {\n            type: param.type,\n            value: input,\n            name: param.name\n        });\n    }\n    const bytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToUint8Array)(input);\n    const [, size] = param.type.split(\"bytes\");\n    // fixed size\n    if (size) {\n        if (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"invalid bytes type. Static byte type can have between 1 and 32 bytes\", {\n                type: param.type\n            });\n        }\n        if (Number(size) < bytes.length) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input size is different than type size\", {\n                type: param.type,\n                value: input,\n                name: param.name\n            });\n        }\n        const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n        encoded.set(bytes);\n        return {\n            dynamic: false,\n            encoded\n        };\n    }\n    const partsLength = Math.ceil(bytes.length / _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    // one word for length of data + WORD for each part of actual data\n    const encoded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.alloc)(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE + partsLength * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    encoded.set((0,_number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber)({\n        type: \"uint32\",\n        name: \"\"\n    }, bytes.length).encoded);\n    encoded.set(bytes, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    return {\n        dynamic: true,\n        encoded\n    };\n}\nfunction decodeBytes(param, bytes) {\n    const [, sizeString] = param.type.split(\"bytes\");\n    let size = Number(sizeString);\n    let remainingBytes = bytes;\n    let partsCount = 1;\n    let consumed = 0;\n    if (!size) {\n        // dynamic bytes\n        const result = (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)({\n            type: \"uint32\",\n            name: \"\"\n        }, remainingBytes);\n        size = Number(result.result);\n        consumed += result.consumed;\n        remainingBytes = result.encoded;\n        partsCount = Math.ceil(size / _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    }\n    if (size > bytes.length) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"there is not enough data to decode\", {\n            type: param.type,\n            encoded: bytes,\n            size\n        });\n    }\n    return {\n        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(remainingBytes.subarray(0, size)),\n        encoded: remainingBytes.subarray(partsCount * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),\n        consumed: consumed + partsCount * _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE\n    };\n} //# sourceMappingURL=bytes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUN1QztBQUNvQjtBQUNsQjtBQUNNO0FBQ1U7QUFDekQsTUFBTVEseUJBQXlCO0FBQ3hCLFNBQVNDLFlBQVlDLEtBQUssRUFBRUMsS0FBSztJQUNwQyxrQ0FBa0M7SUFDbEMsSUFBSSxPQUFPQSxVQUFVLFlBQVlBLE1BQU1DLE1BQU0sR0FBRyxNQUFNLEdBQUc7UUFDckQsNkNBQTZDO1FBQzdDRCxTQUFTO0lBQ2I7SUFDQSxJQUFJLENBQUNSLHVEQUFPQSxDQUFDUSxRQUFRO1FBQ2pCLE1BQU0sSUFBSVgsaURBQVFBLENBQUMsMkNBQTJDO1lBQzFEYSxNQUFNSCxNQUFNRyxJQUFJO1lBQ2hCQyxPQUFPSDtZQUNQSSxNQUFNTCxNQUFNSyxJQUFJO1FBQ3BCO0lBQ0o7SUFDQSxNQUFNQyxRQUFRZCw2REFBaUJBLENBQUNTO0lBQ2hDLE1BQU0sR0FBR00sS0FBSyxHQUFHUCxNQUFNRyxJQUFJLENBQUNLLEtBQUssQ0FBQztJQUNsQyxhQUFhO0lBQ2IsSUFBSUQsTUFBTTtRQUNOLElBQUlFLE9BQU9GLFFBQVFULDBCQUEwQlcsT0FBT0YsUUFBUSxHQUFHO1lBQzNELE1BQU0sSUFBSWpCLGlEQUFRQSxDQUFDLHdFQUF3RTtnQkFDdkZhLE1BQU1ILE1BQU1HLElBQUk7WUFDcEI7UUFDSjtRQUNBLElBQUlNLE9BQU9GLFFBQVFELE1BQU1KLE1BQU0sRUFBRTtZQUM3QixNQUFNLElBQUlaLGlEQUFRQSxDQUFDLG1EQUFtRDtnQkFDbEVhLE1BQU1ILE1BQU1HLElBQUk7Z0JBQ2hCQyxPQUFPSDtnQkFDUEksTUFBTUwsTUFBTUssSUFBSTtZQUNwQjtRQUNKO1FBQ0EsTUFBTUssVUFBVWhCLGdEQUFLQSxDQUFDQyxnREFBU0E7UUFDL0JlLFFBQVFDLEdBQUcsQ0FBQ0w7UUFDWixPQUFPO1lBQ0hNLFNBQVM7WUFDVEY7UUFDSjtJQUNKO0lBQ0EsTUFBTUcsY0FBY0MsS0FBS0MsSUFBSSxDQUFDVCxNQUFNSixNQUFNLEdBQUdQLGdEQUFTQTtJQUN0RCxrRUFBa0U7SUFDbEUsTUFBTWUsVUFBVWhCLGdEQUFLQSxDQUFDQyxnREFBU0EsR0FBR2tCLGNBQWNsQixnREFBU0E7SUFDekRlLFFBQVFDLEdBQUcsQ0FBQ2Qsd0RBQVlBLENBQUM7UUFBRU0sTUFBTTtRQUFVRSxNQUFNO0lBQUcsR0FBR0MsTUFBTUosTUFBTSxFQUFFUSxPQUFPO0lBQzVFQSxRQUFRQyxHQUFHLENBQUNMLE9BQU9YLGdEQUFTQTtJQUM1QixPQUFPO1FBQ0hpQixTQUFTO1FBQ1RGO0lBQ0o7QUFDSjtBQUNPLFNBQVNNLFlBQVloQixLQUFLLEVBQUVNLEtBQUs7SUFDcEMsTUFBTSxHQUFHVyxXQUFXLEdBQUdqQixNQUFNRyxJQUFJLENBQUNLLEtBQUssQ0FBQztJQUN4QyxJQUFJRCxPQUFPRSxPQUFPUTtJQUNsQixJQUFJQyxpQkFBaUJaO0lBQ3JCLElBQUlhLGFBQWE7SUFDakIsSUFBSUMsV0FBVztJQUNmLElBQUksQ0FBQ2IsTUFBTTtRQUNQLGdCQUFnQjtRQUNoQixNQUFNYyxTQUFTekIsd0RBQVlBLENBQUM7WUFBRU8sTUFBTTtZQUFVRSxNQUFNO1FBQUcsR0FBR2E7UUFDMURYLE9BQU9FLE9BQU9ZLE9BQU9BLE1BQU07UUFDM0JELFlBQVlDLE9BQU9ELFFBQVE7UUFDM0JGLGlCQUFpQkcsT0FBT1gsT0FBTztRQUMvQlMsYUFBYUwsS0FBS0MsSUFBSSxDQUFDUixPQUFPWixnREFBU0E7SUFDM0M7SUFDQSxJQUFJWSxPQUFPRCxNQUFNSixNQUFNLEVBQUU7UUFDckIsTUFBTSxJQUFJWixpREFBUUEsQ0FBQyxzQ0FBc0M7WUFDckRhLE1BQU1ILE1BQU1HLElBQUk7WUFDaEJPLFNBQVNKO1lBQ1RDO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFDSGMsUUFBUTlCLHNEQUFVQSxDQUFDMkIsZUFBZUksUUFBUSxDQUFDLEdBQUdmO1FBQzlDRyxTQUFTUSxlQUFlSSxRQUFRLENBQUNILGFBQWF4QixnREFBU0E7UUFDdkR5QixVQUFVQSxXQUFXRCxhQUFheEIsZ0RBQVNBO0lBQy9DO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvYnl0ZXMuanM/NWE5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IEFiaUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgYnl0ZXNUb0hleCwgYnl0ZXNUb1VpbnQ4QXJyYXkgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGlzQnl0ZXMgfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBhbGxvYywgV09SRF9TSVpFIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IHsgZGVjb2RlTnVtYmVyLCBlbmNvZGVOdW1iZXIgfSBmcm9tICcuL251bWJlci5qcyc7XG5jb25zdCBNQVhfU1RBVElDX0JZVEVTX0NPVU5UID0gMzI7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQnl0ZXMocGFyYW0sIGlucHV0KSB7XG4gICAgLy8gaGFjayBmb3Igb2RkIGxlbmd0aCBoZXggc3RyaW5nc1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnICYmIGlucHV0Lmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgIGlucHV0ICs9ICcwJztcbiAgICB9XG4gICAgaWYgKCFpc0J5dGVzKGlucHV0KSkge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IGlzIG5vdCB2YWxpZCBieXRlcyB2YWx1ZScsIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICB2YWx1ZTogaW5wdXQsXG4gICAgICAgICAgICBuYW1lOiBwYXJhbS5uYW1lLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgYnl0ZXMgPSBieXRlc1RvVWludDhBcnJheShpbnB1dCk7XG4gICAgY29uc3QgWywgc2l6ZV0gPSBwYXJhbS50eXBlLnNwbGl0KCdieXRlcycpO1xuICAgIC8vIGZpeGVkIHNpemVcbiAgICBpZiAoc2l6ZSkge1xuICAgICAgICBpZiAoTnVtYmVyKHNpemUpID4gTUFYX1NUQVRJQ19CWVRFU19DT1VOVCB8fCBOdW1iZXIoc2l6ZSkgPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ2ludmFsaWQgYnl0ZXMgdHlwZS4gU3RhdGljIGJ5dGUgdHlwZSBjYW4gaGF2ZSBiZXR3ZWVuIDEgYW5kIDMyIGJ5dGVzJywge1xuICAgICAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoTnVtYmVyKHNpemUpIDwgYnl0ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ3Byb3ZpZGVkIGlucHV0IHNpemUgaXMgZGlmZmVyZW50IHRoYW4gdHlwZSBzaXplJywge1xuICAgICAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGlucHV0LFxuICAgICAgICAgICAgICAgIG5hbWU6IHBhcmFtLm5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbmNvZGVkID0gYWxsb2MoV09SRF9TSVpFKTtcbiAgICAgICAgZW5jb2RlZC5zZXQoYnl0ZXMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZHluYW1pYzogZmFsc2UsXG4gICAgICAgICAgICBlbmNvZGVkLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBwYXJ0c0xlbmd0aCA9IE1hdGguY2VpbChieXRlcy5sZW5ndGggLyBXT1JEX1NJWkUpO1xuICAgIC8vIG9uZSB3b3JkIGZvciBsZW5ndGggb2YgZGF0YSArIFdPUkQgZm9yIGVhY2ggcGFydCBvZiBhY3R1YWwgZGF0YVxuICAgIGNvbnN0IGVuY29kZWQgPSBhbGxvYyhXT1JEX1NJWkUgKyBwYXJ0c0xlbmd0aCAqIFdPUkRfU0laRSk7XG4gICAgZW5jb2RlZC5zZXQoZW5jb2RlTnVtYmVyKHsgdHlwZTogJ3VpbnQzMicsIG5hbWU6ICcnIH0sIGJ5dGVzLmxlbmd0aCkuZW5jb2RlZCk7XG4gICAgZW5jb2RlZC5zZXQoYnl0ZXMsIFdPUkRfU0laRSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZHluYW1pYzogdHJ1ZSxcbiAgICAgICAgZW5jb2RlZCxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzKHBhcmFtLCBieXRlcykge1xuICAgIGNvbnN0IFssIHNpemVTdHJpbmddID0gcGFyYW0udHlwZS5zcGxpdCgnYnl0ZXMnKTtcbiAgICBsZXQgc2l6ZSA9IE51bWJlcihzaXplU3RyaW5nKTtcbiAgICBsZXQgcmVtYWluaW5nQnl0ZXMgPSBieXRlcztcbiAgICBsZXQgcGFydHNDb3VudCA9IDE7XG4gICAgbGV0IGNvbnN1bWVkID0gMDtcbiAgICBpZiAoIXNpemUpIHtcbiAgICAgICAgLy8gZHluYW1pYyBieXRlc1xuICAgICAgICBjb25zdCByZXN1bHQgPSBkZWNvZGVOdW1iZXIoeyB0eXBlOiAndWludDMyJywgbmFtZTogJycgfSwgcmVtYWluaW5nQnl0ZXMpO1xuICAgICAgICBzaXplID0gTnVtYmVyKHJlc3VsdC5yZXN1bHQpO1xuICAgICAgICBjb25zdW1lZCArPSByZXN1bHQuY29uc3VtZWQ7XG4gICAgICAgIHJlbWFpbmluZ0J5dGVzID0gcmVzdWx0LmVuY29kZWQ7XG4gICAgICAgIHBhcnRzQ291bnQgPSBNYXRoLmNlaWwoc2l6ZSAvIFdPUkRfU0laRSk7XG4gICAgfVxuICAgIGlmIChzaXplID4gYnl0ZXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcigndGhlcmUgaXMgbm90IGVub3VnaCBkYXRhIHRvIGRlY29kZScsIHtcbiAgICAgICAgICAgIHR5cGU6IHBhcmFtLnR5cGUsXG4gICAgICAgICAgICBlbmNvZGVkOiBieXRlcyxcbiAgICAgICAgICAgIHNpemUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICByZXN1bHQ6IGJ5dGVzVG9IZXgocmVtYWluaW5nQnl0ZXMuc3ViYXJyYXkoMCwgc2l6ZSkpLFxuICAgICAgICBlbmNvZGVkOiByZW1haW5pbmdCeXRlcy5zdWJhcnJheShwYXJ0c0NvdW50ICogV09SRF9TSVpFKSxcbiAgICAgICAgY29uc3VtZWQ6IGNvbnN1bWVkICsgcGFydHNDb3VudCAqIFdPUkRfU0laRSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl0ZXMuanMubWFwIl0sIm5hbWVzIjpbIkFiaUVycm9yIiwiYnl0ZXNUb0hleCIsImJ5dGVzVG9VaW50OEFycmF5IiwiaXNCeXRlcyIsImFsbG9jIiwiV09SRF9TSVpFIiwiZGVjb2RlTnVtYmVyIiwiZW5jb2RlTnVtYmVyIiwiTUFYX1NUQVRJQ19CWVRFU19DT1VOVCIsImVuY29kZUJ5dGVzIiwicGFyYW0iLCJpbnB1dCIsImxlbmd0aCIsInR5cGUiLCJ2YWx1ZSIsIm5hbWUiLCJieXRlcyIsInNpemUiLCJzcGxpdCIsIk51bWJlciIsImVuY29kZWQiLCJzZXQiLCJkeW5hbWljIiwicGFydHNMZW5ndGgiLCJNYXRoIiwiY2VpbCIsImRlY29kZUJ5dGVzIiwic2l6ZVN0cmluZyIsInJlbWFpbmluZ0J5dGVzIiwicGFydHNDb3VudCIsImNvbnN1bWVkIiwicmVzdWx0Iiwic3ViYXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress),\n/* harmony export */   decodeArray: () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_7__.decodeArray),\n/* harmony export */   decodeBool: () => (/* reexport safe */ _bool_js__WEBPACK_IMPORTED_MODULE_2__.decodeBool),\n/* harmony export */   decodeBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes),\n/* harmony export */   decodeNumber: () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber),\n/* harmony export */   decodeParamFromAbiParameter: () => (/* binding */ decodeParamFromAbiParameter),\n/* harmony export */   decodeString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_5__.decodeString),\n/* harmony export */   decodeTuple: () => (/* reexport safe */ _tuple_js__WEBPACK_IMPORTED_MODULE_6__.decodeTuple),\n/* harmony export */   encodeAddress: () => (/* reexport safe */ _address_js__WEBPACK_IMPORTED_MODULE_1__.encodeAddress),\n/* harmony export */   encodeArray: () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_7__.encodeArray),\n/* harmony export */   encodeBoolean: () => (/* reexport safe */ _bool_js__WEBPACK_IMPORTED_MODULE_2__.encodeBoolean),\n/* harmony export */   encodeBytes: () => (/* reexport safe */ _bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes),\n/* harmony export */   encodeNumber: () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber),\n/* harmony export */   encodeParamFromAbiParameter: () => (/* binding */ encodeParamFromAbiParameter),\n/* harmony export */   encodeString: () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_5__.encodeString),\n/* harmony export */   encodeTuple: () => (/* reexport safe */ _tuple_js__WEBPACK_IMPORTED_MODULE_6__.encodeTuple)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./address.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/address.js\");\n/* harmony import */ var _bool_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bool.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bool.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/string.js\");\n/* harmony import */ var _tuple_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tuple.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./array.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nfunction encodeParamFromAbiParameter(param, value) {\n    if (param.type === \"string\") {\n        return (0,_string_js__WEBPACK_IMPORTED_MODULE_5__.encodeString)(param, value);\n    }\n    if (param.type === \"bool\") {\n        return (0,_bool_js__WEBPACK_IMPORTED_MODULE_2__.encodeBoolean)(param, value);\n    }\n    if (param.type === \"address\") {\n        return (0,_address_js__WEBPACK_IMPORTED_MODULE_1__.encodeAddress)(param, value);\n    }\n    if (param.type === \"tuple\") {\n        return (0,_tuple_js__WEBPACK_IMPORTED_MODULE_6__.encodeTuple)(param, value);\n    }\n    if (param.type.endsWith(\"]\")) {\n        return (0,_array_js__WEBPACK_IMPORTED_MODULE_7__.encodeArray)(param, value);\n    }\n    if (param.type.startsWith(\"bytes\")) {\n        return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes)(param, value);\n    }\n    if (param.type.startsWith(\"uint\") || param.type.startsWith(\"int\")) {\n        return (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.encodeNumber)(param, value);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Unsupported\", {\n        param,\n        value\n    });\n}\nfunction decodeParamFromAbiParameter(param, bytes) {\n    if (param.type === \"string\") {\n        return (0,_string_js__WEBPACK_IMPORTED_MODULE_5__.decodeString)(param, bytes);\n    }\n    if (param.type === \"bool\") {\n        return (0,_bool_js__WEBPACK_IMPORTED_MODULE_2__.decodeBool)(param, bytes);\n    }\n    if (param.type === \"address\") {\n        return (0,_address_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(param, bytes);\n    }\n    if (param.type === \"tuple\") {\n        return (0,_tuple_js__WEBPACK_IMPORTED_MODULE_6__.decodeTuple)(param, bytes);\n    }\n    if (param.type.endsWith(\"]\")) {\n        return (0,_array_js__WEBPACK_IMPORTED_MODULE_7__.decodeArray)(param, bytes);\n    }\n    if (param.type.startsWith(\"bytes\")) {\n        return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes)(param, bytes);\n    }\n    if (param.type.startsWith(\"uint\") || param.type.startsWith(\"int\")) {\n        return (0,_number_js__WEBPACK_IMPORTED_MODULE_4__.decodeNumber)(param, bytes);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Unsupported\", {\n        param,\n        bytes\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ3FCO0FBQ047QUFDQTtBQUNHO0FBQ0E7QUFDekQsMkNBQTJDO0FBQ1c7QUFDdEQsMkNBQTJDO0FBQ1c7QUFDTTtBQUNOO0FBQ0E7QUFDRztBQUNBO0FBQ3pELDJDQUEyQztBQUNXO0FBQ3RELDJDQUEyQztBQUNXO0FBQy9DLFNBQVNlLDRCQUE0QkMsS0FBSyxFQUFFQyxLQUFLO0lBQ3BELElBQUlELE1BQU1FLElBQUksS0FBSyxVQUFVO1FBQ3pCLE9BQU9SLHdEQUFZQSxDQUFDTSxPQUFPQztJQUMvQjtJQUNBLElBQUlELE1BQU1FLElBQUksS0FBSyxRQUFRO1FBQ3ZCLE9BQU9kLHVEQUFhQSxDQUFDWSxPQUFPQztJQUNoQztJQUNBLElBQUlELE1BQU1FLElBQUksS0FBSyxXQUFXO1FBQzFCLE9BQU9oQiwwREFBYUEsQ0FBQ2MsT0FBT0M7SUFDaEM7SUFDQSxJQUFJRCxNQUFNRSxJQUFJLEtBQUssU0FBUztRQUN4QixPQUFPTixzREFBV0EsQ0FBQ0ksT0FBT0M7SUFDOUI7SUFDQSxJQUFJRCxNQUFNRSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxNQUFNO1FBQzFCLE9BQU9MLHNEQUFXQSxDQUFDRSxPQUFPQztJQUM5QjtJQUNBLElBQUlELE1BQU1FLElBQUksQ0FBQ0UsVUFBVSxDQUFDLFVBQVU7UUFDaEMsT0FBT2Qsc0RBQVdBLENBQUNVLE9BQU9DO0lBQzlCO0lBQ0EsSUFBSUQsTUFBTUUsSUFBSSxDQUFDRSxVQUFVLENBQUMsV0FBV0osTUFBTUUsSUFBSSxDQUFDRSxVQUFVLENBQUMsUUFBUTtRQUMvRCxPQUFPWix3REFBWUEsQ0FBQ1EsT0FBT0M7SUFDL0I7SUFDQSxNQUFNLElBQUlqQixpREFBUUEsQ0FBQyxlQUFlO1FBQzlCZ0I7UUFDQUM7SUFDSjtBQUNKO0FBQ08sU0FBU0ksNEJBQTRCTCxLQUFLLEVBQUVNLEtBQUs7SUFDcEQsSUFBSU4sTUFBTUUsSUFBSSxLQUFLLFVBQVU7UUFDekIsT0FBT1Qsd0RBQVlBLENBQUNPLE9BQU9NO0lBQy9CO0lBQ0EsSUFBSU4sTUFBTUUsSUFBSSxLQUFLLFFBQVE7UUFDdkIsT0FBT2Ysb0RBQVVBLENBQUNhLE9BQU9NO0lBQzdCO0lBQ0EsSUFBSU4sTUFBTUUsSUFBSSxLQUFLLFdBQVc7UUFDMUIsT0FBT2pCLDBEQUFhQSxDQUFDZSxPQUFPTTtJQUNoQztJQUNBLElBQUlOLE1BQU1FLElBQUksS0FBSyxTQUFTO1FBQ3hCLE9BQU9QLHNEQUFXQSxDQUFDSyxPQUFPTTtJQUM5QjtJQUNBLElBQUlOLE1BQU1FLElBQUksQ0FBQ0MsUUFBUSxDQUFDLE1BQU07UUFDMUIsT0FBT04sc0RBQVdBLENBQUNHLE9BQU9NO0lBQzlCO0lBQ0EsSUFBSU4sTUFBTUUsSUFBSSxDQUFDRSxVQUFVLENBQUMsVUFBVTtRQUNoQyxPQUFPZixzREFBV0EsQ0FBQ1csT0FBT007SUFDOUI7SUFDQSxJQUFJTixNQUFNRSxJQUFJLENBQUNFLFVBQVUsQ0FBQyxXQUFXSixNQUFNRSxJQUFJLENBQUNFLFVBQVUsQ0FBQyxRQUFRO1FBQy9ELE9BQU9iLHdEQUFZQSxDQUFDUyxPQUFPTTtJQUMvQjtJQUNBLE1BQU0sSUFBSXRCLGlEQUFRQSxDQUFDLGVBQWU7UUFDOUJnQjtRQUNBTTtJQUNKO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvaW5kZXguanM/ZGZhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IEFiaUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgZGVjb2RlQWRkcmVzcywgZW5jb2RlQWRkcmVzcyB9IGZyb20gJy4vYWRkcmVzcy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVCb29sLCBlbmNvZGVCb29sZWFuIH0gZnJvbSAnLi9ib29sLmpzJztcbmltcG9ydCB7IGRlY29kZUJ5dGVzLCBlbmNvZGVCeXRlcyB9IGZyb20gJy4vYnl0ZXMuanMnO1xuaW1wb3J0IHsgZGVjb2RlTnVtYmVyLCBlbmNvZGVOdW1iZXIgfSBmcm9tICcuL251bWJlci5qcyc7XG5pbXBvcnQgeyBkZWNvZGVTdHJpbmcsIGVuY29kZVN0cmluZyB9IGZyb20gJy4vc3RyaW5nLmpzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IGRlY29kZVR1cGxlLCBlbmNvZGVUdXBsZSB9IGZyb20gJy4vdHVwbGUuanMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHsgZGVjb2RlQXJyYXksIGVuY29kZUFycmF5IH0gZnJvbSAnLi9hcnJheS5qcyc7XG5leHBvcnQgeyBlbmNvZGVBZGRyZXNzLCBkZWNvZGVBZGRyZXNzIH0gZnJvbSAnLi9hZGRyZXNzLmpzJztcbmV4cG9ydCB7IGVuY29kZUJvb2xlYW4sIGRlY29kZUJvb2wgfSBmcm9tICcuL2Jvb2wuanMnO1xuZXhwb3J0IHsgZW5jb2RlQnl0ZXMsIGRlY29kZUJ5dGVzIH0gZnJvbSAnLi9ieXRlcy5qcyc7XG5leHBvcnQgeyBlbmNvZGVOdW1iZXIsIGRlY29kZU51bWJlciB9IGZyb20gJy4vbnVtYmVyLmpzJztcbmV4cG9ydCB7IGVuY29kZVN0cmluZywgZGVjb2RlU3RyaW5nIH0gZnJvbSAnLi9zdHJpbmcuanMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuZXhwb3J0IHsgZW5jb2RlVHVwbGUsIGRlY29kZVR1cGxlIH0gZnJvbSAnLi90dXBsZS5qcyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5leHBvcnQgeyBlbmNvZGVBcnJheSwgZGVjb2RlQXJyYXkgfSBmcm9tICcuL2FycmF5LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVQYXJhbUZyb21BYmlQYXJhbWV0ZXIocGFyYW0sIHZhbHVlKSB7XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVTdHJpbmcocGFyYW0sIHZhbHVlKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdib29sJykge1xuICAgICAgICByZXR1cm4gZW5jb2RlQm9vbGVhbihwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZSA9PT0gJ2FkZHJlc3MnKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVBZGRyZXNzKHBhcmFtLCB2YWx1ZSk7XG4gICAgfVxuICAgIGlmIChwYXJhbS50eXBlID09PSAndHVwbGUnKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVUdXBsZShwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVBcnJheShwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCdieXRlcycpKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVCeXRlcyhwYXJhbSwgdmFsdWUpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCd1aW50JykgfHwgcGFyYW0udHlwZS5zdGFydHNXaXRoKCdpbnQnKSkge1xuICAgICAgICByZXR1cm4gZW5jb2RlTnVtYmVyKHBhcmFtLCB2YWx1ZSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBBYmlFcnJvcignVW5zdXBwb3J0ZWQnLCB7XG4gICAgICAgIHBhcmFtLFxuICAgICAgICB2YWx1ZSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVQYXJhbUZyb21BYmlQYXJhbWV0ZXIocGFyYW0sIGJ5dGVzKSB7XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVTdHJpbmcocGFyYW0sIGJ5dGVzKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdib29sJykge1xuICAgICAgICByZXR1cm4gZGVjb2RlQm9vbChwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZSA9PT0gJ2FkZHJlc3MnKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVBZGRyZXNzKHBhcmFtLCBieXRlcyk7XG4gICAgfVxuICAgIGlmIChwYXJhbS50eXBlID09PSAndHVwbGUnKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVUdXBsZShwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVBcnJheShwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCdieXRlcycpKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVCeXRlcyhwYXJhbSwgYnl0ZXMpO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5zdGFydHNXaXRoKCd1aW50JykgfHwgcGFyYW0udHlwZS5zdGFydHNXaXRoKCdpbnQnKSkge1xuICAgICAgICByZXR1cm4gZGVjb2RlTnVtYmVyKHBhcmFtLCBieXRlcyk7XG4gICAgfVxuICAgIHRocm93IG5ldyBBYmlFcnJvcignVW5zdXBwb3J0ZWQnLCB7XG4gICAgICAgIHBhcmFtLFxuICAgICAgICBieXRlcyxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJBYmlFcnJvciIsImRlY29kZUFkZHJlc3MiLCJlbmNvZGVBZGRyZXNzIiwiZGVjb2RlQm9vbCIsImVuY29kZUJvb2xlYW4iLCJkZWNvZGVCeXRlcyIsImVuY29kZUJ5dGVzIiwiZGVjb2RlTnVtYmVyIiwiZW5jb2RlTnVtYmVyIiwiZGVjb2RlU3RyaW5nIiwiZW5jb2RlU3RyaW5nIiwiZGVjb2RlVHVwbGUiLCJlbmNvZGVUdXBsZSIsImRlY29kZUFycmF5IiwiZW5jb2RlQXJyYXkiLCJlbmNvZGVQYXJhbUZyb21BYmlQYXJhbWV0ZXIiLCJwYXJhbSIsInZhbHVlIiwidHlwZSIsImVuZHNXaXRoIiwic3RhcnRzV2l0aCIsImRlY29kZVBhcmFtRnJvbUFiaVBhcmFtZXRlciIsImJ5dGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/number.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNumber: () => (/* binding */ decodeNumber),\n/* harmony export */   encodeNumber: () => (/* binding */ encodeNumber)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./numbersLimits.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\nfunction bigIntToUint8Array(value, byteLength = _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE) {\n    let hexValue;\n    if (value < 0) {\n        hexValue = (mask + value).toString(16);\n    } else {\n        hexValue = value.toString(16);\n    }\n    hexValue = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.padLeft)(hexValue, byteLength * 2);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(hexValue);\n}\nfunction uint8ArrayToBigInt(value, max) {\n    const hexValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString(value);\n    const result = BigInt(hexValue);\n    if (result <= max) return result;\n    return result - mask;\n}\nfunction encodeNumber(param, input) {\n    let value;\n    try {\n        value = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toBigInt)(input);\n    } catch (e) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is not number value\", {\n            type: param.type,\n            value: input,\n            name: param.name\n        });\n    }\n    const limit = _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__.numberLimits.get(param.type);\n    if (!limit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided abi contains invalid number datatype\", {\n            type: param.type\n        });\n    }\n    if (value < limit.min) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is less then minimum for given type\", {\n            type: param.type,\n            value: input,\n            name: param.name,\n            minimum: limit.min.toString()\n        });\n    }\n    if (value > limit.max) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided input is greater then maximum for given type\", {\n            type: param.type,\n            value: input,\n            name: param.name,\n            maximum: limit.max.toString()\n        });\n    }\n    return {\n        dynamic: false,\n        encoded: bigIntToUint8Array(value)\n    };\n}\nfunction decodeNumber(param, bytes) {\n    if (bytes.length < _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Not enough bytes left to decode\", {\n            param,\n            bytesLeft: bytes.length\n        });\n    }\n    const boolBytes = bytes.subarray(0, _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE);\n    const limit = _numbersLimits_js__WEBPACK_IMPORTED_MODULE_4__.numberLimits.get(param.type);\n    if (!limit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"provided abi contains invalid number datatype\", {\n            type: param.type\n        });\n    }\n    const numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n    if (numberResult < limit.min) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"decoded value is less then minimum for given type\", {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            minimum: limit.min.toString()\n        });\n    }\n    if (numberResult > limit.max) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"decoded value is greater then maximum for given type\", {\n            type: param.type,\n            value: numberResult,\n            name: param.name,\n            maximum: limit.max.toString()\n        });\n    }\n    return {\n        result: numberResult,\n        encoded: bytes.subarray(_utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE),\n        consumed: _utils_js__WEBPACK_IMPORTED_MODULE_3__.WORD_SIZE\n    };\n} //# sourceMappingURL=number.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   numberLimits: () => (/* binding */ numberLimits)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ /*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/ const numberLimits = new Map();\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor(let i = 8; i <= 256; i += 8){\n    numberLimits.set(`uint${i}`, {\n        min: BigInt(0),\n        max: base - BigInt(1)\n    });\n    numberLimits.set(`int${i}`, {\n        min: -base / BigInt(2),\n        max: base / BigInt(2) - BigInt(1)\n    });\n    base *= BigInt(256);\n}\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get(\"int256\"));\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get(\"uint256\")); //# sourceMappingURL=numbersLimits.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvbnVtYmVyc0xpbWl0cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ0E7O0FBRUEsR0FDTyxNQUFNQSxlQUFlLElBQUlDLE1BQU07QUFDdEMsSUFBSUMsT0FBT0MsT0FBTyxNQUFNLGNBQWM7QUFDdEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUssS0FBS0EsS0FBSyxFQUFHO0lBQzlCSixhQUFhSyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUVELEVBQUUsQ0FBQyxFQUFFO1FBQ3pCRSxLQUFLSCxPQUFPO1FBQ1pJLEtBQUtMLE9BQU9DLE9BQU87SUFDdkI7SUFDQUgsYUFBYUssR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFRCxFQUFFLENBQUMsRUFBRTtRQUN4QkUsS0FBSyxDQUFDSixPQUFPQyxPQUFPO1FBQ3BCSSxLQUFLTCxPQUFPQyxPQUFPLEtBQUtBLE9BQU87SUFDbkM7SUFDQUQsUUFBUUMsT0FBTztBQUNuQjtBQUNBLG9FQUFvRTtBQUNwRUgsYUFBYUssR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUVMLGFBQWFRLEdBQUcsQ0FBQztBQUN6QyxvRUFBb0U7QUFDcEVSLGFBQWFLLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFTCxhQUFhUSxHQUFHLENBQUMsYUFDMUMseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2NvZGVycy9iYXNlL251bWJlcnNMaW1pdHMuanM/NjJjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qXG4gKiB0aGlzIHZhcmlhYmxlIGNvbnRhaW5zIHRoZSBwcmVjYWxjdWxhdGVkIGxpbWl0cyBmb3IgYWxsIHRoZSBudW1iZXJzIGZvciB1aW50IGFuZCBpbnQgdHlwZXNcbiovXG5leHBvcnQgY29uc3QgbnVtYmVyTGltaXRzID0gbmV3IE1hcCgpO1xubGV0IGJhc2UgPSBCaWdJbnQoMjU2KTsgLy8gMiBeIDggPSAyNTZcbmZvciAobGV0IGkgPSA4OyBpIDw9IDI1NjsgaSArPSA4KSB7XG4gICAgbnVtYmVyTGltaXRzLnNldChgdWludCR7aX1gLCB7XG4gICAgICAgIG1pbjogQmlnSW50KDApLFxuICAgICAgICBtYXg6IGJhc2UgLSBCaWdJbnQoMSksXG4gICAgfSk7XG4gICAgbnVtYmVyTGltaXRzLnNldChgaW50JHtpfWAsIHtcbiAgICAgICAgbWluOiAtYmFzZSAvIEJpZ0ludCgyKSxcbiAgICAgICAgbWF4OiBiYXNlIC8gQmlnSW50KDIpIC0gQmlnSW50KDEpLFxuICAgIH0pO1xuICAgIGJhc2UgKj0gQmlnSW50KDI1Nik7XG59XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxubnVtYmVyTGltaXRzLnNldChgaW50YCwgbnVtYmVyTGltaXRzLmdldCgnaW50MjU2JykpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbm51bWJlckxpbWl0cy5zZXQoYHVpbnRgLCBudW1iZXJMaW1pdHMuZ2V0KCd1aW50MjU2JykpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bnVtYmVyc0xpbWl0cy5qcy5tYXAiXSwibmFtZXMiOlsibnVtYmVyTGltaXRzIiwiTWFwIiwiYmFzZSIsIkJpZ0ludCIsImkiLCJzZXQiLCJtaW4iLCJtYXgiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/numbersLimits.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/string.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString: () => (/* binding */ decodeString),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/bytes.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nfunction encodeString(_param, input) {\n    if (typeof input !== \"string\") {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"invalid input, should be string\", {\n            input\n        });\n    }\n    const bytes = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(input);\n    return (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.encodeBytes)({\n        type: \"bytes\",\n        name: \"\"\n    }, bytes);\n}\nfunction decodeString(_param, bytes) {\n    const r = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.decodeBytes)({\n        type: \"bytes\",\n        name: \"\"\n    }, bytes);\n    return {\n        result: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.hexToUtf8)(r.result),\n        encoded: r.encoded,\n        consumed: r.consumed\n    };\n} //# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2Uvc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ2E7QUFDRTtBQUMvQyxTQUFTSyxhQUFhQyxNQUFNLEVBQUVDLEtBQUs7SUFDdEMsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJUCxpREFBUUEsQ0FBQyxtQ0FBbUM7WUFBRU87UUFBTTtJQUNsRTtJQUNBLE1BQU1DLFFBQVFOLHVEQUFXQSxDQUFDSztJQUMxQixPQUFPSCxzREFBV0EsQ0FBQztRQUFFSyxNQUFNO1FBQVNDLE1BQU07SUFBRyxHQUFHRjtBQUNwRDtBQUNPLFNBQVNHLGFBQWFMLE1BQU0sRUFBRUUsS0FBSztJQUN0QyxNQUFNSSxJQUFJVCxzREFBV0EsQ0FBQztRQUFFTSxNQUFNO1FBQVNDLE1BQU07SUFBRyxHQUFHRjtJQUNuRCxPQUFPO1FBQ0hLLFFBQVFaLHFEQUFTQSxDQUFDVyxFQUFFQyxNQUFNO1FBQzFCQyxTQUFTRixFQUFFRSxPQUFPO1FBQ2xCQyxVQUFVSCxFQUFFRyxRQUFRO0lBQ3hCO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2Uvc3RyaW5nLmpzPzU2NGIiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBBYmlFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IGhleFRvVXRmOCwgdXRmOFRvQnl0ZXMgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGRlY29kZUJ5dGVzLCBlbmNvZGVCeXRlcyB9IGZyb20gJy4vYnl0ZXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVN0cmluZyhfcGFyYW0sIGlucHV0KSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdpbnZhbGlkIGlucHV0LCBzaG91bGQgYmUgc3RyaW5nJywgeyBpbnB1dCB9KTtcbiAgICB9XG4gICAgY29uc3QgYnl0ZXMgPSB1dGY4VG9CeXRlcyhpbnB1dCk7XG4gICAgcmV0dXJuIGVuY29kZUJ5dGVzKHsgdHlwZTogJ2J5dGVzJywgbmFtZTogJycgfSwgYnl0ZXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZyhfcGFyYW0sIGJ5dGVzKSB7XG4gICAgY29uc3QgciA9IGRlY29kZUJ5dGVzKHsgdHlwZTogJ2J5dGVzJywgbmFtZTogJycgfSwgYnl0ZXMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3VsdDogaGV4VG9VdGY4KHIucmVzdWx0KSxcbiAgICAgICAgZW5jb2RlZDogci5lbmNvZGVkLFxuICAgICAgICBjb25zdW1lZDogci5jb25zdW1lZCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJBYmlFcnJvciIsImhleFRvVXRmOCIsInV0ZjhUb0J5dGVzIiwiZGVjb2RlQnl0ZXMiLCJlbmNvZGVCeXRlcyIsImVuY29kZVN0cmluZyIsIl9wYXJhbSIsImlucHV0IiwiYnl0ZXMiLCJ0eXBlIiwibmFtZSIsImRlY29kZVN0cmluZyIsInIiLCJyZXN1bHQiLCJlbmNvZGVkIiwiY29uc3VtZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTuple: () => (/* binding */ decodeTuple),\n/* harmony export */   encodeTuple: () => (/* binding */ encodeTuple)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n// eslint-disable-next-line import/no-cycle\n\n\n\n\nfunction encodeTuple(param, input) {\n    var _a, _b, _c;\n    let dynamic = false;\n    if (!Array.isArray(input) && typeof input !== \"object\") {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"param must be either Array or Object\", {\n            param,\n            input\n        });\n    }\n    const narrowedInput = input;\n    const encoded = [];\n    for(let i = 0; i < ((_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0); i += 1){\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const paramComponent = param.components[i];\n        let result;\n        if (Array.isArray(narrowedInput)) {\n            if (i >= narrowedInput.length) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"input param length missmatch\", {\n                    param,\n                    input\n                });\n            }\n            result = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(paramComponent, narrowedInput[i]);\n        } else {\n            const paramInput = narrowedInput[(_c = paramComponent.name) !== null && _c !== void 0 ? _c : \"\"];\n            // eslint-disable-next-line no-null/no-null\n            if (paramInput === undefined || paramInput === null) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"missing input defined in abi\", {\n                    param,\n                    input,\n                    paramName: paramComponent.name\n                });\n            }\n            result = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.encodeParamFromAbiParameter)(paramComponent, paramInput);\n        }\n        if (result.dynamic) {\n            dynamic = true;\n        }\n        encoded.push(result);\n    }\n    if (dynamic) {\n        return {\n            dynamic: true,\n            encoded: (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.encodeDynamicParams)(encoded)\n        };\n    }\n    return {\n        dynamic: false,\n        encoded: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.uint8ArrayConcat)(...encoded.map((e)=>e.encoded))\n    };\n}\nfunction decodeTuple(param, bytes) {\n    const result = {\n        __length__: 0\n    };\n    // tracks how much static params consumed bytes\n    let consumed = 0;\n    if (!param.components) {\n        return {\n            result,\n            encoded: bytes,\n            consumed\n        };\n    }\n    // track how much dynamic params consumed bytes\n    let dynamicConsumed = 0;\n    for (const [index, childParam] of param.components.entries()){\n        let decodedResult;\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isDynamic)(childParam)) {\n            // if dynamic, we will have offset encoded\n            const offsetResult = (0,_number_js__WEBPACK_IMPORTED_MODULE_5__.decodeNumber)({\n                type: \"uint32\",\n                name: \"\"\n            }, bytes.subarray(consumed));\n            // offset counts from start of original byte sequence\n            decodedResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(childParam, bytes.subarray(Number(offsetResult.result)));\n            consumed += offsetResult.consumed;\n            dynamicConsumed += decodedResult.consumed;\n        } else {\n            // static param, just decode\n            decodedResult = (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.decodeParamFromAbiParameter)(childParam, bytes.subarray(consumed));\n            consumed += decodedResult.consumed;\n        }\n        result.__length__ += 1;\n        result[index] = decodedResult.result;\n        if (childParam.name && childParam.name !== \"\") {\n            result[childParam.name] = decodedResult.result;\n        }\n    }\n    return {\n        encoded: bytes.subarray(consumed + dynamicConsumed),\n        result,\n        consumed: consumed + dynamicConsumed\n    };\n} //# sourceMappingURL=tuple.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvdHVwbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDdUM7QUFDTztBQUM5QywyQ0FBMkM7QUFDMkM7QUFDckM7QUFDVDtBQUNHO0FBQ3BDLFNBQVNPLFlBQVlDLEtBQUssRUFBRUMsS0FBSztJQUNwQyxJQUFJQyxJQUFJQyxJQUFJQztJQUNaLElBQUlDLFVBQVU7SUFDZCxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ04sVUFBVSxPQUFPQSxVQUFVLFVBQVU7UUFDcEQsTUFBTSxJQUFJVCxpREFBUUEsQ0FBQyx3Q0FBd0M7WUFDdkRRO1lBQ0FDO1FBQ0o7SUFDSjtJQUNBLE1BQU1PLGdCQUFnQlA7SUFDdEIsTUFBTVEsVUFBVSxFQUFFO0lBQ2xCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFLLEVBQUNQLEtBQUssQ0FBQ0QsS0FBS0YsTUFBTVcsVUFBVSxNQUFNLFFBQVFULE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR1UsTUFBTSxNQUFNLFFBQVFULE9BQU8sS0FBSyxJQUFJQSxLQUFLLElBQUlPLEtBQUssRUFBRztRQUM1SSxvRUFBb0U7UUFDcEUsTUFBTUcsaUJBQWlCYixNQUFNVyxVQUFVLENBQUNELEVBQUU7UUFDMUMsSUFBSUk7UUFDSixJQUFJUixNQUFNQyxPQUFPLENBQUNDLGdCQUFnQjtZQUM5QixJQUFJRSxLQUFLRixjQUFjSSxNQUFNLEVBQUU7Z0JBQzNCLE1BQU0sSUFBSXBCLGlEQUFRQSxDQUFDLGdDQUFnQztvQkFDL0NRO29CQUNBQztnQkFDSjtZQUNKO1lBQ0FhLFNBQVNuQixzRUFBMkJBLENBQUNrQixnQkFBZ0JMLGFBQWEsQ0FBQ0UsRUFBRTtRQUN6RSxPQUNLO1lBQ0QsTUFBTUssYUFBYVAsYUFBYSxDQUFDLENBQUNKLEtBQUtTLGVBQWVHLElBQUksTUFBTSxRQUFRWixPQUFPLEtBQUssSUFBSUEsS0FBSyxHQUFHO1lBQ2hHLDJDQUEyQztZQUMzQyxJQUFJVyxlQUFlRSxhQUFhRixlQUFlLE1BQU07Z0JBQ2pELE1BQU0sSUFBSXZCLGlEQUFRQSxDQUFDLGdDQUFnQztvQkFDL0NRO29CQUNBQztvQkFDQWlCLFdBQVdMLGVBQWVHLElBQUk7Z0JBQ2xDO1lBQ0o7WUFDQUYsU0FBU25CLHNFQUEyQkEsQ0FBQ2tCLGdCQUFnQkU7UUFDekQ7UUFDQSxJQUFJRCxPQUFPVCxPQUFPLEVBQUU7WUFDaEJBLFVBQVU7UUFDZDtRQUNBSSxRQUFRVSxJQUFJLENBQUNMO0lBQ2pCO0lBQ0EsSUFBSVQsU0FBUztRQUNULE9BQU87WUFDSEEsU0FBUztZQUNUSSxTQUFTYiw4REFBbUJBLENBQUNhO1FBQ2pDO0lBQ0o7SUFDQSxPQUFPO1FBQ0hKLFNBQVM7UUFDVEksU0FBU2hCLDREQUFnQkEsSUFBSWdCLFFBQVFXLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVosT0FBTztJQUMzRDtBQUNKO0FBQ08sU0FBU2EsWUFBWXRCLEtBQUssRUFBRXVCLEtBQUs7SUFDcEMsTUFBTVQsU0FBUztRQUNYVSxZQUFZO0lBQ2hCO0lBQ0EsK0NBQStDO0lBQy9DLElBQUlDLFdBQVc7SUFDZixJQUFJLENBQUN6QixNQUFNVyxVQUFVLEVBQUU7UUFDbkIsT0FBTztZQUNIRztZQUNBTCxTQUFTYztZQUNURTtRQUNKO0lBQ0o7SUFDQSwrQ0FBK0M7SUFDL0MsSUFBSUMsa0JBQWtCO0lBQ3RCLEtBQUssTUFBTSxDQUFDQyxPQUFPQyxXQUFXLElBQUk1QixNQUFNVyxVQUFVLENBQUNrQixPQUFPLEdBQUk7UUFDMUQsSUFBSUM7UUFDSixJQUFJakMsb0RBQVNBLENBQUMrQixhQUFhO1lBQ3ZCLDBDQUEwQztZQUMxQyxNQUFNRyxlQUFlakMsd0RBQVlBLENBQUM7Z0JBQUVrQyxNQUFNO2dCQUFVaEIsTUFBTTtZQUFHLEdBQUdPLE1BQU1VLFFBQVEsQ0FBQ1I7WUFDL0UscURBQXFEO1lBQ3JESyxnQkFBZ0JwQyxzRUFBMkJBLENBQUNrQyxZQUFZTCxNQUFNVSxRQUFRLENBQUNDLE9BQU9ILGFBQWFqQixNQUFNO1lBQ2pHVyxZQUFZTSxhQUFhTixRQUFRO1lBQ2pDQyxtQkFBbUJJLGNBQWNMLFFBQVE7UUFDN0MsT0FDSztZQUNELDRCQUE0QjtZQUM1QkssZ0JBQWdCcEMsc0VBQTJCQSxDQUFDa0MsWUFBWUwsTUFBTVUsUUFBUSxDQUFDUjtZQUN2RUEsWUFBWUssY0FBY0wsUUFBUTtRQUN0QztRQUNBWCxPQUFPVSxVQUFVLElBQUk7UUFDckJWLE1BQU0sQ0FBQ2EsTUFBTSxHQUFHRyxjQUFjaEIsTUFBTTtRQUNwQyxJQUFJYyxXQUFXWixJQUFJLElBQUlZLFdBQVdaLElBQUksS0FBSyxJQUFJO1lBQzNDRixNQUFNLENBQUNjLFdBQVdaLElBQUksQ0FBQyxHQUFHYyxjQUFjaEIsTUFBTTtRQUNsRDtJQUNKO0lBQ0EsT0FBTztRQUNITCxTQUFTYyxNQUFNVSxRQUFRLENBQUNSLFdBQVdDO1FBQ25DWjtRQUNBVyxVQUFVQSxXQUFXQztJQUN6QjtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2NvZGVycy9iYXNlL3R1cGxlLmpzPzY4NGUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBBYmlFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IHVpbnQ4QXJyYXlDb25jYXQgfSBmcm9tICd3ZWIzLXV0aWxzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IGRlY29kZVBhcmFtRnJvbUFiaVBhcmFtZXRlciwgZW5jb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyIH0gZnJvbSAnLi9pbmRleC5qcyc7XG5pbXBvcnQgeyBlbmNvZGVEeW5hbWljUGFyYW1zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgeyBpc0R5bmFtaWMgfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVOdW1iZXIgfSBmcm9tICcuL251bWJlci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVHVwbGUocGFyYW0sIGlucHV0KSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgbGV0IGR5bmFtaWMgPSBmYWxzZTtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpICYmIHR5cGVvZiBpbnB1dCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdwYXJhbSBtdXN0IGJlIGVpdGhlciBBcnJheSBvciBPYmplY3QnLCB7XG4gICAgICAgICAgICBwYXJhbSxcbiAgICAgICAgICAgIGlucHV0LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgbmFycm93ZWRJbnB1dCA9IGlucHV0O1xuICAgIGNvbnN0IGVuY29kZWQgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8ICgoX2IgPSAoX2EgPSBwYXJhbS5jb21wb25lbnRzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAwKTsgaSArPSAxKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgIGNvbnN0IHBhcmFtQ29tcG9uZW50ID0gcGFyYW0uY29tcG9uZW50c1tpXTtcbiAgICAgICAgbGV0IHJlc3VsdDtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkobmFycm93ZWRJbnB1dCkpIHtcbiAgICAgICAgICAgIGlmIChpID49IG5hcnJvd2VkSW5wdXQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdpbnB1dCBwYXJhbSBsZW5ndGggbWlzc21hdGNoJywge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbSxcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQgPSBlbmNvZGVQYXJhbUZyb21BYmlQYXJhbWV0ZXIocGFyYW1Db21wb25lbnQsIG5hcnJvd2VkSW5wdXRbaV0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1JbnB1dCA9IG5hcnJvd2VkSW5wdXRbKF9jID0gcGFyYW1Db21wb25lbnQubmFtZSkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogJyddO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW51bGwvbm8tbnVsbFxuICAgICAgICAgICAgaWYgKHBhcmFtSW5wdXQgPT09IHVuZGVmaW5lZCB8fCBwYXJhbUlucHV0ID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdtaXNzaW5nIGlucHV0IGRlZmluZWQgaW4gYWJpJywge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbSxcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQsXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtTmFtZTogcGFyYW1Db21wb25lbnQubmFtZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCA9IGVuY29kZVBhcmFtRnJvbUFiaVBhcmFtZXRlcihwYXJhbUNvbXBvbmVudCwgcGFyYW1JbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdC5keW5hbWljKSB7XG4gICAgICAgICAgICBkeW5hbWljID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbmNvZGVkLnB1c2gocmVzdWx0KTtcbiAgICB9XG4gICAgaWYgKGR5bmFtaWMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGR5bmFtaWM6IHRydWUsXG4gICAgICAgICAgICBlbmNvZGVkOiBlbmNvZGVEeW5hbWljUGFyYW1zKGVuY29kZWQpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBkeW5hbWljOiBmYWxzZSxcbiAgICAgICAgZW5jb2RlZDogdWludDhBcnJheUNvbmNhdCguLi5lbmNvZGVkLm1hcChlID0+IGUuZW5jb2RlZCkpLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVHVwbGUocGFyYW0sIGJ5dGVzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBfX2xlbmd0aF9fOiAwLFxuICAgIH07XG4gICAgLy8gdHJhY2tzIGhvdyBtdWNoIHN0YXRpYyBwYXJhbXMgY29uc3VtZWQgYnl0ZXNcbiAgICBsZXQgY29uc3VtZWQgPSAwO1xuICAgIGlmICghcGFyYW0uY29tcG9uZW50cykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgICAgZW5jb2RlZDogYnl0ZXMsXG4gICAgICAgICAgICBjb25zdW1lZCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLy8gdHJhY2sgaG93IG11Y2ggZHluYW1pYyBwYXJhbXMgY29uc3VtZWQgYnl0ZXNcbiAgICBsZXQgZHluYW1pY0NvbnN1bWVkID0gMDtcbiAgICBmb3IgKGNvbnN0IFtpbmRleCwgY2hpbGRQYXJhbV0gb2YgcGFyYW0uY29tcG9uZW50cy5lbnRyaWVzKCkpIHtcbiAgICAgICAgbGV0IGRlY29kZWRSZXN1bHQ7XG4gICAgICAgIGlmIChpc0R5bmFtaWMoY2hpbGRQYXJhbSkpIHtcbiAgICAgICAgICAgIC8vIGlmIGR5bmFtaWMsIHdlIHdpbGwgaGF2ZSBvZmZzZXQgZW5jb2RlZFxuICAgICAgICAgICAgY29uc3Qgb2Zmc2V0UmVzdWx0ID0gZGVjb2RlTnVtYmVyKHsgdHlwZTogJ3VpbnQzMicsIG5hbWU6ICcnIH0sIGJ5dGVzLnN1YmFycmF5KGNvbnN1bWVkKSk7XG4gICAgICAgICAgICAvLyBvZmZzZXQgY291bnRzIGZyb20gc3RhcnQgb2Ygb3JpZ2luYWwgYnl0ZSBzZXF1ZW5jZVxuICAgICAgICAgICAgZGVjb2RlZFJlc3VsdCA9IGRlY29kZVBhcmFtRnJvbUFiaVBhcmFtZXRlcihjaGlsZFBhcmFtLCBieXRlcy5zdWJhcnJheShOdW1iZXIob2Zmc2V0UmVzdWx0LnJlc3VsdCkpKTtcbiAgICAgICAgICAgIGNvbnN1bWVkICs9IG9mZnNldFJlc3VsdC5jb25zdW1lZDtcbiAgICAgICAgICAgIGR5bmFtaWNDb25zdW1lZCArPSBkZWNvZGVkUmVzdWx0LmNvbnN1bWVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gc3RhdGljIHBhcmFtLCBqdXN0IGRlY29kZVxuICAgICAgICAgICAgZGVjb2RlZFJlc3VsdCA9IGRlY29kZVBhcmFtRnJvbUFiaVBhcmFtZXRlcihjaGlsZFBhcmFtLCBieXRlcy5zdWJhcnJheShjb25zdW1lZCkpO1xuICAgICAgICAgICAgY29uc3VtZWQgKz0gZGVjb2RlZFJlc3VsdC5jb25zdW1lZDtcbiAgICAgICAgfVxuICAgICAgICByZXN1bHQuX19sZW5ndGhfXyArPSAxO1xuICAgICAgICByZXN1bHRbaW5kZXhdID0gZGVjb2RlZFJlc3VsdC5yZXN1bHQ7XG4gICAgICAgIGlmIChjaGlsZFBhcmFtLm5hbWUgJiYgY2hpbGRQYXJhbS5uYW1lICE9PSAnJykge1xuICAgICAgICAgICAgcmVzdWx0W2NoaWxkUGFyYW0ubmFtZV0gPSBkZWNvZGVkUmVzdWx0LnJlc3VsdDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBlbmNvZGVkOiBieXRlcy5zdWJhcnJheShjb25zdW1lZCArIGR5bmFtaWNDb25zdW1lZCksXG4gICAgICAgIHJlc3VsdCxcbiAgICAgICAgY29uc3VtZWQ6IGNvbnN1bWVkICsgZHluYW1pY0NvbnN1bWVkLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10dXBsZS5qcy5tYXAiXSwibmFtZXMiOlsiQWJpRXJyb3IiLCJ1aW50OEFycmF5Q29uY2F0IiwiZGVjb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyIiwiZW5jb2RlUGFyYW1Gcm9tQWJpUGFyYW1ldGVyIiwiZW5jb2RlRHluYW1pY1BhcmFtcyIsImlzRHluYW1pYyIsImRlY29kZU51bWJlciIsImVuY29kZVR1cGxlIiwicGFyYW0iLCJpbnB1dCIsIl9hIiwiX2IiLCJfYyIsImR5bmFtaWMiLCJBcnJheSIsImlzQXJyYXkiLCJuYXJyb3dlZElucHV0IiwiZW5jb2RlZCIsImkiLCJjb21wb25lbnRzIiwibGVuZ3RoIiwicGFyYW1Db21wb25lbnQiLCJyZXN1bHQiLCJwYXJhbUlucHV0IiwibmFtZSIsInVuZGVmaW5lZCIsInBhcmFtTmFtZSIsInB1c2giLCJtYXAiLCJlIiwiZGVjb2RlVHVwbGUiLCJieXRlcyIsIl9fbGVuZ3RoX18iLCJjb25zdW1lZCIsImR5bmFtaWNDb25zdW1lZCIsImluZGV4IiwiY2hpbGRQYXJhbSIsImVudHJpZXMiLCJkZWNvZGVkUmVzdWx0Iiwib2Zmc2V0UmVzdWx0IiwidHlwZSIsInN1YmFycmF5IiwiTnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeDynamicParams: () => (/* binding */ encodeDynamicParams)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/number.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nfunction encodeDynamicParams(encodedParams) {\n    let staticSize = 0;\n    let dynamicSize = 0;\n    const staticParams = [];\n    const dynamicParams = [];\n    // figure out static size\n    for (const encodedParam of encodedParams){\n        if (encodedParam.dynamic) {\n            staticSize += _utils_js__WEBPACK_IMPORTED_MODULE_1__.WORD_SIZE;\n        } else {\n            staticSize += encodedParam.encoded.length;\n        }\n    }\n    for (const encodedParam of encodedParams){\n        if (encodedParam.dynamic) {\n            staticParams.push((0,_number_js__WEBPACK_IMPORTED_MODULE_2__.encodeNumber)({\n                type: \"uint256\",\n                name: \"\"\n            }, staticSize + dynamicSize));\n            dynamicParams.push(encodedParam);\n            dynamicSize += encodedParam.encoded.length;\n        } else {\n            staticParams.push(encodedParam);\n        }\n    }\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayConcat)(...staticParams.map((p)=>p.encoded), ...dynamicParams.map((p)=>p.encoded));\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2Jhc2UvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUM4QztBQUNOO0FBQ0c7QUFDcEMsU0FBU0csb0JBQW9CQyxhQUFhO0lBQzdDLElBQUlDLGFBQWE7SUFDakIsSUFBSUMsY0FBYztJQUNsQixNQUFNQyxlQUFlLEVBQUU7SUFDdkIsTUFBTUMsZ0JBQWdCLEVBQUU7SUFDeEIseUJBQXlCO0lBQ3pCLEtBQUssTUFBTUMsZ0JBQWdCTCxjQUFlO1FBQ3RDLElBQUlLLGFBQWFDLE9BQU8sRUFBRTtZQUN0QkwsY0FBY0osZ0RBQVNBO1FBQzNCLE9BQ0s7WUFDREksY0FBY0ksYUFBYUUsT0FBTyxDQUFDQyxNQUFNO1FBQzdDO0lBQ0o7SUFDQSxLQUFLLE1BQU1ILGdCQUFnQkwsY0FBZTtRQUN0QyxJQUFJSyxhQUFhQyxPQUFPLEVBQUU7WUFDdEJILGFBQWFNLElBQUksQ0FBQ1gsd0RBQVlBLENBQUM7Z0JBQUVZLE1BQU07Z0JBQVdDLE1BQU07WUFBRyxHQUFHVixhQUFhQztZQUMzRUUsY0FBY0ssSUFBSSxDQUFDSjtZQUNuQkgsZUFBZUcsYUFBYUUsT0FBTyxDQUFDQyxNQUFNO1FBQzlDLE9BQ0s7WUFDREwsYUFBYU0sSUFBSSxDQUFDSjtRQUN0QjtJQUNKO0lBQ0EsT0FBT1QsNERBQWdCQSxJQUFJTyxhQUFhUyxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVOLE9BQU8sTUFBTUgsY0FBY1EsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFTixPQUFPO0FBQ3BHLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWFiaS9saWIvZXNtL2NvZGVycy9iYXNlL3V0aWxzLmpzPzBiYWQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyB1aW50OEFycmF5Q29uY2F0IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBXT1JEX1NJWkUgfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgeyBlbmNvZGVOdW1iZXIgfSBmcm9tICcuL251bWJlci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlRHluYW1pY1BhcmFtcyhlbmNvZGVkUGFyYW1zKSB7XG4gICAgbGV0IHN0YXRpY1NpemUgPSAwO1xuICAgIGxldCBkeW5hbWljU2l6ZSA9IDA7XG4gICAgY29uc3Qgc3RhdGljUGFyYW1zID0gW107XG4gICAgY29uc3QgZHluYW1pY1BhcmFtcyA9IFtdO1xuICAgIC8vIGZpZ3VyZSBvdXQgc3RhdGljIHNpemVcbiAgICBmb3IgKGNvbnN0IGVuY29kZWRQYXJhbSBvZiBlbmNvZGVkUGFyYW1zKSB7XG4gICAgICAgIGlmIChlbmNvZGVkUGFyYW0uZHluYW1pYykge1xuICAgICAgICAgICAgc3RhdGljU2l6ZSArPSBXT1JEX1NJWkU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdGF0aWNTaXplICs9IGVuY29kZWRQYXJhbS5lbmNvZGVkLmxlbmd0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGNvbnN0IGVuY29kZWRQYXJhbSBvZiBlbmNvZGVkUGFyYW1zKSB7XG4gICAgICAgIGlmIChlbmNvZGVkUGFyYW0uZHluYW1pYykge1xuICAgICAgICAgICAgc3RhdGljUGFyYW1zLnB1c2goZW5jb2RlTnVtYmVyKHsgdHlwZTogJ3VpbnQyNTYnLCBuYW1lOiAnJyB9LCBzdGF0aWNTaXplICsgZHluYW1pY1NpemUpKTtcbiAgICAgICAgICAgIGR5bmFtaWNQYXJhbXMucHVzaChlbmNvZGVkUGFyYW0pO1xuICAgICAgICAgICAgZHluYW1pY1NpemUgKz0gZW5jb2RlZFBhcmFtLmVuY29kZWQubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3RhdGljUGFyYW1zLnB1c2goZW5jb2RlZFBhcmFtKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdWludDhBcnJheUNvbmNhdCguLi5zdGF0aWNQYXJhbXMubWFwKHAgPT4gcC5lbmNvZGVkKSwgLi4uZHluYW1pY1BhcmFtcy5tYXAocCA9PiBwLmVuY29kZWQpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJ1aW50OEFycmF5Q29uY2F0IiwiV09SRF9TSVpFIiwiZW5jb2RlTnVtYmVyIiwiZW5jb2RlRHluYW1pY1BhcmFtcyIsImVuY29kZWRQYXJhbXMiLCJzdGF0aWNTaXplIiwiZHluYW1pY1NpemUiLCJzdGF0aWNQYXJhbXMiLCJkeW5hbWljUGFyYW1zIiwiZW5jb2RlZFBhcmFtIiwiZHluYW1pYyIsImVuY29kZWQiLCJsZW5ndGgiLCJwdXNoIiwidHlwZSIsIm5hbWUiLCJtYXAiLCJwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/decode.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/decode.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeParameters: () => (/* binding */ decodeParameters)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _base_tuple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base/tuple.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/tuple.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nfunction decodeParameters(abis, bytes, _loose) {\n    const abiParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toAbiParams)(abis);\n    const bytesArray = web3_validator__WEBPACK_IMPORTED_MODULE_0__.utils.hexToUint8Array(bytes);\n    return (0,_base_tuple_js__WEBPACK_IMPORTED_MODULE_1__.decodeTuple)({\n        type: \"tuple\",\n        name: \"\",\n        components: abiParams\n    }, bytesArray).result;\n} //# sourceMappingURL=decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ087QUFDTDtBQUNsQyxTQUFTRyxpQkFBaUJDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxNQUFNO0lBQ2hELE1BQU1DLFlBQVlMLHNEQUFXQSxDQUFDRTtJQUM5QixNQUFNSSxhQUFhUixpRUFBcUIsQ0FBQ0s7SUFDekMsT0FBT0osMkRBQVdBLENBQUM7UUFBRVMsTUFBTTtRQUFTQyxNQUFNO1FBQUlDLFlBQVlMO0lBQVUsR0FBR0MsWUFBWUssTUFBTTtBQUM3RixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9jb2RlcnMvZGVjb2RlLmpzPzhkN2IiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IGRlY29kZVR1cGxlIH0gZnJvbSAnLi9iYXNlL3R1cGxlLmpzJztcbmltcG9ydCB7IHRvQWJpUGFyYW1zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlUGFyYW1ldGVycyhhYmlzLCBieXRlcywgX2xvb3NlKSB7XG4gICAgY29uc3QgYWJpUGFyYW1zID0gdG9BYmlQYXJhbXMoYWJpcyk7XG4gICAgY29uc3QgYnl0ZXNBcnJheSA9IHV0aWxzLmhleFRvVWludDhBcnJheShieXRlcyk7XG4gICAgcmV0dXJuIGRlY29kZVR1cGxlKHsgdHlwZTogJ3R1cGxlJywgbmFtZTogJycsIGNvbXBvbmVudHM6IGFiaVBhcmFtcyB9LCBieXRlc0FycmF5KS5yZXN1bHQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUuanMubWFwIl0sIm5hbWVzIjpbInV0aWxzIiwiZGVjb2RlVHVwbGUiLCJ0b0FiaVBhcmFtcyIsImRlY29kZVBhcmFtZXRlcnMiLCJhYmlzIiwiYnl0ZXMiLCJfbG9vc2UiLCJhYmlQYXJhbXMiLCJieXRlc0FycmF5IiwiaGV4VG9VaW50OEFycmF5IiwidHlwZSIsIm5hbWUiLCJjb21wb25lbnRzIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/encode.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeParameters: () => (/* binding */ encodeParameters),\n/* harmony export */   inferTypesAndEncodeParameters: () => (/* binding */ inferTypesAndEncodeParameters)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _base_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base/index.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/base/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n/**\n * @param params - The params to infer the ABI from\n * @returns The inferred ABI\n * @example\n * ```\n * inferParamsAbi([1, -1, 'hello', '0x1234', ])\n * ```\n * > [{ type: 'int256' }, { type: 'uint256' }, { type: 'string' }, { type: 'bytes' }]\n * ```\n */ function inferParamsAbi(params) {\n    const abi = [];\n    params.forEach((param)=>{\n        if (Array.isArray(param)) {\n            const inferredParams = inferParamsAbi(param);\n            abi.push({\n                type: \"tuple\",\n                components: inferredParams,\n                name: \"\"\n            });\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            abi.push({\n                type: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(param, true)\n            });\n        }\n    });\n    return abi;\n}\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */ function encodeParameters(abi, params) {\n    if ((abi === null || abi === void 0 ? void 0 : abi.length) !== params.length) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid number of values received for given ABI\", {\n            expected: abi === null || abi === void 0 ? void 0 : abi.length,\n            received: params.length\n        });\n    }\n    const abiParams = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.toAbiParams)(abi);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,_base_index_js__WEBPACK_IMPORTED_MODULE_3__.encodeTuple)({\n        type: \"tuple\",\n        name: \"\",\n        components: abiParams\n    }, params).encoded);\n}\n/**\n * Infer a smart contract method parameter type and then encode this parameter.\n * @param params - The parameters to encode.\n * @returns - The ABI encoded parameters\n *\n * @remarks\n * This method is useful when you don't know the type of the parameters you want to encode. It will infer the type of the parameters and then encode them.\n * However, it is not recommended to use this method when you know the type of the parameters you want to encode. In this case, use the {@link encodeParameters} method instead.\n * The type inference is not perfect and can lead to unexpected results. Especially when you want to encode an array, uint that is not uint256 or bytes....\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */ function inferTypesAndEncodeParameters(params) {\n    try {\n        const abiParams = inferParamsAbi(params);\n        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,_base_index_js__WEBPACK_IMPORTED_MODULE_3__.encodeTuple)({\n            type: \"tuple\",\n            name: \"\",\n            components: abiParams\n        }, params).encoded);\n    } catch (e) {\n        // throws If the inferred params type caused an error\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Could not infer types from given params\", {\n            params\n        });\n    }\n} //# sourceMappingURL=encode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWVBLEdBQ3VDO0FBQ0o7QUFDSTtBQUNPO0FBQ0w7QUFDekM7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0ssZUFBZUMsTUFBTTtJQUMxQixNQUFNQyxNQUFNLEVBQUU7SUFDZEQsT0FBT0UsT0FBTyxDQUFDQyxDQUFBQTtRQUNYLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0YsUUFBUTtZQUN0QixNQUFNRyxpQkFBaUJQLGVBQWVJO1lBQ3RDRixJQUFJTSxJQUFJLENBQUM7Z0JBQ0xDLE1BQU07Z0JBQ05DLFlBQVlIO2dCQUNaSSxNQUFNO1lBRVY7UUFDSixPQUNLO1lBQ0QsaUVBQWlFO1lBQ2pFVCxJQUFJTSxJQUFJLENBQUM7Z0JBQUVDLE1BQU1iLGlEQUFLQSxDQUFDUSxPQUFPO1lBQU07UUFDeEM7SUFDSjtJQUNBLE9BQU9GO0FBQ1g7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxTQUFTVSxpQkFBaUJWLEdBQUcsRUFBRUQsTUFBTTtJQUN4QyxJQUFJLENBQUNDLFFBQVEsUUFBUUEsUUFBUSxLQUFLLElBQUksS0FBSyxJQUFJQSxJQUFJVyxNQUFNLE1BQU1aLE9BQU9ZLE1BQU0sRUFBRTtRQUMxRSxNQUFNLElBQUlsQixpREFBUUEsQ0FBQyxtREFBbUQ7WUFDbEVtQixVQUFVWixRQUFRLFFBQVFBLFFBQVEsS0FBSyxJQUFJLEtBQUssSUFBSUEsSUFBSVcsTUFBTTtZQUM5REUsVUFBVWQsT0FBT1ksTUFBTTtRQUMzQjtJQUNKO0lBQ0EsTUFBTUcsWUFBWWpCLHNEQUFXQSxDQUFDRztJQUM5QixPQUFPTCx1RUFBMkIsQ0FBQ0MsMkRBQVdBLENBQUM7UUFBRVcsTUFBTTtRQUFTRSxNQUFNO1FBQUlELFlBQVlNO0lBQVUsR0FBR2YsUUFBUWlCLE9BQU87QUFDdEg7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBa0JDLEdBQ00sU0FBU0MsOEJBQThCbEIsTUFBTTtJQUNoRCxJQUFJO1FBQ0EsTUFBTWUsWUFBWWhCLGVBQWVDO1FBQ2pDLE9BQU9KLHVFQUEyQixDQUFDQywyREFBV0EsQ0FBQztZQUFFVyxNQUFNO1lBQVNFLE1BQU07WUFBSUQsWUFBWU07UUFBVSxHQUFHZixRQUFRaUIsT0FBTztJQUN0SCxFQUNBLE9BQU9FLEdBQUc7UUFDTixxREFBcUQ7UUFDckQsTUFBTSxJQUFJekIsaURBQVFBLENBQUMsMkNBQTJDO1lBQzFETTtRQUNKO0lBQ0o7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9jb2RlcnMvZW5jb2RlLmpzPzMyZjQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBBYmlFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IHRvSGV4IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyB1dGlscyB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IGVuY29kZVR1cGxlIH0gZnJvbSAnLi9iYXNlL2luZGV4LmpzJztcbmltcG9ydCB7IHRvQWJpUGFyYW1zIH0gZnJvbSAnLi91dGlscy5qcyc7XG4vKipcbiAqIEBwYXJhbSBwYXJhbXMgLSBUaGUgcGFyYW1zIHRvIGluZmVyIHRoZSBBQkkgZnJvbVxuICogQHJldHVybnMgVGhlIGluZmVycmVkIEFCSVxuICogQGV4YW1wbGVcbiAqIGBgYFxuICogaW5mZXJQYXJhbXNBYmkoWzEsIC0xLCAnaGVsbG8nLCAnMHgxMjM0JywgXSlcbiAqIGBgYFxuICogPiBbeyB0eXBlOiAnaW50MjU2JyB9LCB7IHR5cGU6ICd1aW50MjU2JyB9LCB7IHR5cGU6ICdzdHJpbmcnIH0sIHsgdHlwZTogJ2J5dGVzJyB9XVxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIGluZmVyUGFyYW1zQWJpKHBhcmFtcykge1xuICAgIGNvbnN0IGFiaSA9IFtdO1xuICAgIHBhcmFtcy5mb3JFYWNoKHBhcmFtID0+IHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW0pKSB7XG4gICAgICAgICAgICBjb25zdCBpbmZlcnJlZFBhcmFtcyA9IGluZmVyUGFyYW1zQWJpKHBhcmFtKTtcbiAgICAgICAgICAgIGFiaS5wdXNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiAndHVwbGUnLFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudHM6IGluZmVycmVkUGFyYW1zLFxuICAgICAgICAgICAgICAgIG5hbWU6ICcnLFxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgICAgICAgICBhYmkucHVzaCh7IHR5cGU6IHRvSGV4KHBhcmFtLCB0cnVlKSB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBhYmk7XG59XG4vKipcbiAqIEVuY29kZXMgYSBwYXJhbWV0ZXIgYmFzZWQgb24gaXRzIHR5cGUgdG8gaXRzIEFCSSByZXByZXNlbnRhdGlvbi5cbiAqIEBwYXJhbSBhYmkgLSBBbiBhcnJheSBvZiB7QGxpbmsgQWJpSW5wdXR9LiBTZWUgW1NvbGlkaXR5J3MgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9zb2xpZGl0eS5yZWFkdGhlZG9jcy5pby9lbi92MC41LjMvYWJpLXNwZWMuaHRtbCNqc29uKSBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHBhcmFtcyAtIFRoZSBhY3R1YWwgcGFyYW1ldGVycyB0byBlbmNvZGUuXG4gKiBAcmV0dXJucyAtIFRoZSBBQkkgZW5jb2RlZCBwYXJhbWV0ZXJzXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnN0IHJlcyA9IHdlYjMuZXRoLmFiaS5lbmNvZGVQYXJhbWV0ZXJzKFxuICogICAgW1widWludDI1NlwiLCBcInN0cmluZ1wiXSxcbiAqICAgIFtcIjIzNDU2NzU2NDNcIiwgXCJIZWxsbyElXCJdXG4gKiAgKTtcbiAqXG4gKiAgY29uc29sZS5sb2cocmVzKTtcbiAqICA+IDB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4YmQwMmI3YjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA3NDg2NTZjNmM2ZjIxMjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVQYXJhbWV0ZXJzKGFiaSwgcGFyYW1zKSB7XG4gICAgaWYgKChhYmkgPT09IG51bGwgfHwgYWJpID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYmkubGVuZ3RoKSAhPT0gcGFyYW1zLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ0ludmFsaWQgbnVtYmVyIG9mIHZhbHVlcyByZWNlaXZlZCBmb3IgZ2l2ZW4gQUJJJywge1xuICAgICAgICAgICAgZXhwZWN0ZWQ6IGFiaSA9PT0gbnVsbCB8fCBhYmkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFiaS5sZW5ndGgsXG4gICAgICAgICAgICByZWNlaXZlZDogcGFyYW1zLmxlbmd0aCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGFiaVBhcmFtcyA9IHRvQWJpUGFyYW1zKGFiaSk7XG4gICAgcmV0dXJuIHV0aWxzLnVpbnQ4QXJyYXlUb0hleFN0cmluZyhlbmNvZGVUdXBsZSh7IHR5cGU6ICd0dXBsZScsIG5hbWU6ICcnLCBjb21wb25lbnRzOiBhYmlQYXJhbXMgfSwgcGFyYW1zKS5lbmNvZGVkKTtcbn1cbi8qKlxuICogSW5mZXIgYSBzbWFydCBjb250cmFjdCBtZXRob2QgcGFyYW1ldGVyIHR5cGUgYW5kIHRoZW4gZW5jb2RlIHRoaXMgcGFyYW1ldGVyLlxuICogQHBhcmFtIHBhcmFtcyAtIFRoZSBwYXJhbWV0ZXJzIHRvIGVuY29kZS5cbiAqIEByZXR1cm5zIC0gVGhlIEFCSSBlbmNvZGVkIHBhcmFtZXRlcnNcbiAqXG4gKiBAcmVtYXJrc1xuICogVGhpcyBtZXRob2QgaXMgdXNlZnVsIHdoZW4geW91IGRvbid0IGtub3cgdGhlIHR5cGUgb2YgdGhlIHBhcmFtZXRlcnMgeW91IHdhbnQgdG8gZW5jb2RlLiBJdCB3aWxsIGluZmVyIHRoZSB0eXBlIG9mIHRoZSBwYXJhbWV0ZXJzIGFuZCB0aGVuIGVuY29kZSB0aGVtLlxuICogSG93ZXZlciwgaXQgaXMgbm90IHJlY29tbWVuZGVkIHRvIHVzZSB0aGlzIG1ldGhvZCB3aGVuIHlvdSBrbm93IHRoZSB0eXBlIG9mIHRoZSBwYXJhbWV0ZXJzIHlvdSB3YW50IHRvIGVuY29kZS4gSW4gdGhpcyBjYXNlLCB1c2UgdGhlIHtAbGluayBlbmNvZGVQYXJhbWV0ZXJzfSBtZXRob2QgaW5zdGVhZC5cbiAqIFRoZSB0eXBlIGluZmVyZW5jZSBpcyBub3QgcGVyZmVjdCBhbmQgY2FuIGxlYWQgdG8gdW5leHBlY3RlZCByZXN1bHRzLiBFc3BlY2lhbGx5IHdoZW4geW91IHdhbnQgdG8gZW5jb2RlIGFuIGFycmF5LCB1aW50IHRoYXQgaXMgbm90IHVpbnQyNTYgb3IgYnl0ZXMuLi4uXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGNvbnN0IHJlcyA9IHdlYjMuZXRoLmFiaS5lbmNvZGVQYXJhbWV0ZXJzKFxuICogICAgW1wiMjM0NTY3NTY0M1wiLCBcIkhlbGxvISVcIl1cbiAqICApO1xuICpcbiAqICBjb25zb2xlLmxvZyhyZXMpO1xuICogID4gMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDhiZDAyYjdiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDc0ODY1NmM2YzZmMjEyNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluZmVyVHlwZXNBbmRFbmNvZGVQYXJhbWV0ZXJzKHBhcmFtcykge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGFiaVBhcmFtcyA9IGluZmVyUGFyYW1zQWJpKHBhcmFtcyk7XG4gICAgICAgIHJldHVybiB1dGlscy51aW50OEFycmF5VG9IZXhTdHJpbmcoZW5jb2RlVHVwbGUoeyB0eXBlOiAndHVwbGUnLCBuYW1lOiAnJywgY29tcG9uZW50czogYWJpUGFyYW1zIH0sIHBhcmFtcykuZW5jb2RlZCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIC8vIHRocm93cyBJZiB0aGUgaW5mZXJyZWQgcGFyYW1zIHR5cGUgY2F1c2VkIGFuIGVycm9yXG4gICAgICAgIHRocm93IG5ldyBBYmlFcnJvcignQ291bGQgbm90IGluZmVyIHR5cGVzIGZyb20gZ2l2ZW4gcGFyYW1zJywge1xuICAgICAgICAgICAgcGFyYW1zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbmNvZGUuanMubWFwIl0sIm5hbWVzIjpbIkFiaUVycm9yIiwidG9IZXgiLCJ1dGlscyIsImVuY29kZVR1cGxlIiwidG9BYmlQYXJhbXMiLCJpbmZlclBhcmFtc0FiaSIsInBhcmFtcyIsImFiaSIsImZvckVhY2giLCJwYXJhbSIsIkFycmF5IiwiaXNBcnJheSIsImluZmVycmVkUGFyYW1zIiwicHVzaCIsInR5cGUiLCJjb21wb25lbnRzIiwibmFtZSIsImVuY29kZVBhcmFtZXRlcnMiLCJsZW5ndGgiLCJleHBlY3RlZCIsInJlY2VpdmVkIiwiYWJpUGFyYW1zIiwidWludDhBcnJheVRvSGV4U3RyaW5nIiwiZW5jb2RlZCIsImluZmVyVHlwZXNBbmRFbmNvZGVQYXJhbWV0ZXJzIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/coders/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WORD_SIZE: () => (/* binding */ WORD_SIZE),\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe),\n/* harmony export */   convertExternalAbiParameter: () => (/* binding */ convertExternalAbiParameter),\n/* harmony export */   extractArrayType: () => (/* binding */ extractArrayType),\n/* harmony export */   isAbiParameter: () => (/* binding */ isAbiParameter),\n/* harmony export */   isDynamic: () => (/* binding */ isDynamic),\n/* harmony export */   toAbiParams: () => (/* binding */ toAbiParams)\n/* harmony export */ });\n/* harmony import */ var abitype__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! abitype */ \"(ssr)/./node_modules/abitype/dist/index.mjs\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\nconst WORD_SIZE = 32;\nfunction alloc(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.alloc) !== undefined) {\n        const buf = globalThis.Buffer.alloc(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */ function allocUnsafe(size = 0) {\n    var _a;\n    if (((_a = globalThis.Buffer) === null || _a === void 0 ? void 0 : _a.allocUnsafe) !== undefined) {\n        const buf = globalThis.Buffer.allocUnsafe(size);\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return new Uint8Array(size);\n}\nfunction convertExternalAbiParameter(abiParam) {\n    var _a, _b;\n    return Object.assign(Object.assign({}, abiParam), {\n        name: (_a = abiParam.name) !== null && _a !== void 0 ? _a : \"\",\n        components: (_b = abiParam.components) === null || _b === void 0 ? void 0 : _b.map((c)=>convertExternalAbiParameter(c))\n    });\n}\nfunction isAbiParameter(param) {\n    return !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(param) && typeof param === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(param.type) && typeof param.type === \"string\";\n}\nfunction toAbiParams(abi) {\n    return abi.map((input)=>{\n        var _a;\n        if (isAbiParameter(input)) {\n            return input;\n        }\n        if (typeof input === \"string\") {\n            return convertExternalAbiParameter((0,abitype__WEBPACK_IMPORTED_MODULE_3__.parseAbiParameter)(input.replace(/tuple/, \"\")));\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isSimplifiedStructFormat)(input)) {\n            const structName = Object.keys(input)[0];\n            const structInfo = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.mapStructNameAndType)(structName);\n            structInfo.name = (_a = structInfo.name) !== null && _a !== void 0 ? _a : \"\";\n            return Object.assign(Object.assign({}, structInfo), {\n                components: (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.mapStructToCoderFormat)(input[structName])\n            });\n        }\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid abi\");\n    });\n}\nfunction extractArrayType(param) {\n    const arrayParenthesisStart = param.type.lastIndexOf(\"[\");\n    const arrayParamType = param.type.substring(0, arrayParenthesisStart);\n    const sizeString = param.type.substring(arrayParenthesisStart);\n    let size = -1;\n    if (sizeString !== \"[]\") {\n        size = Number(sizeString.slice(1, -1));\n        // eslint-disable-next-line no-restricted-globals\n        if (isNaN(size)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(\"Invalid fixed array size\", {\n                size: sizeString\n            });\n        }\n    }\n    return {\n        param: {\n            type: arrayParamType,\n            name: \"\",\n            components: param.components\n        },\n        size\n    };\n}\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */ function isDynamic(param) {\n    var _a, _b;\n    if (param.type === \"string\" || param.type === \"bytes\" || param.type.endsWith(\"[]\")) return true;\n    if (param.type === \"tuple\") {\n        return (_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.some(isDynamic)) !== null && _b !== void 0 ? _b : false;\n    }\n    if (param.type.endsWith(\"]\")) {\n        return isDynamic(extractArrayType(param).param);\n    }\n    return false;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUM0QztBQUNMO0FBQ0E7QUFDK0Q7QUFDL0YsTUFBTU0sWUFBWSxHQUFHO0FBQ3JCLFNBQVNDLE1BQU1DLE9BQU8sQ0FBQztJQUMxQixJQUFJQztJQUNKLElBQUksQ0FBQyxDQUFDQSxLQUFLQyxXQUFXQyxNQUFNLE1BQU0sUUFBUUYsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHRixLQUFLLE1BQU1LLFdBQVc7UUFDeEYsTUFBTUMsTUFBTUgsV0FBV0MsTUFBTSxDQUFDSixLQUFLLENBQUNDO1FBQ3BDLE9BQU8sSUFBSU0sV0FBV0QsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlJLFVBQVU7SUFDcEU7SUFDQSxPQUFPLElBQUlILFdBQVdOO0FBQzFCO0FBQ0E7Ozs7Q0FJQyxHQUNNLFNBQVNVLFlBQVlWLE9BQU8sQ0FBQztJQUNoQyxJQUFJQztJQUNKLElBQUksQ0FBQyxDQUFDQSxLQUFLQyxXQUFXQyxNQUFNLE1BQU0sUUFBUUYsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHUyxXQUFXLE1BQU1OLFdBQVc7UUFDOUYsTUFBTUMsTUFBTUgsV0FBV0MsTUFBTSxDQUFDTyxXQUFXLENBQUNWO1FBQzFDLE9BQU8sSUFBSU0sV0FBV0QsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlJLFVBQVU7SUFDcEU7SUFDQSxPQUFPLElBQUlILFdBQVdOO0FBQzFCO0FBQ08sU0FBU1csNEJBQTRCQyxRQUFRO0lBQ2hELElBQUlYLElBQUlZO0lBQ1IsT0FBT0MsT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHSCxXQUFXO1FBQUVJLE1BQU0sQ0FBQ2YsS0FBS1csU0FBU0ksSUFBSSxNQUFNLFFBQVFmLE9BQU8sS0FBSyxJQUFJQSxLQUFLO1FBQUlnQixZQUFZLENBQUNKLEtBQUtELFNBQVNLLFVBQVUsTUFBTSxRQUFRSixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdLLEdBQUcsQ0FBQ0MsQ0FBQUEsSUFBS1IsNEJBQTRCUTtJQUFJO0FBQ2hQO0FBQ08sU0FBU0MsZUFBZUMsS0FBSztJQUNoQyxPQUFRLENBQUMzQixxREFBU0EsQ0FBQzJCLFVBQ2YsT0FBT0EsVUFBVSxZQUNqQixDQUFDM0IscURBQVNBLENBQUMyQixNQUFNQyxJQUFJLEtBQ3JCLE9BQU9ELE1BQU1DLElBQUksS0FBSztBQUM5QjtBQUNPLFNBQVNDLFlBQVlDLEdBQUc7SUFDM0IsT0FBT0EsSUFBSU4sR0FBRyxDQUFDTyxDQUFBQTtRQUNYLElBQUl4QjtRQUNKLElBQUltQixlQUFlSyxRQUFRO1lBQ3ZCLE9BQU9BO1FBQ1g7UUFDQSxJQUFJLE9BQU9BLFVBQVUsVUFBVTtZQUMzQixPQUFPZCw0QkFBNEJuQiwwREFBaUJBLENBQUNpQyxNQUFNQyxPQUFPLENBQUMsU0FBUztRQUNoRjtRQUNBLElBQUkvQixtRUFBd0JBLENBQUM4QixRQUFRO1lBQ2pDLE1BQU1FLGFBQWFiLE9BQU9jLElBQUksQ0FBQ0gsTUFBTSxDQUFDLEVBQUU7WUFDeEMsTUFBTUksYUFBYWpDLCtEQUFvQkEsQ0FBQytCO1lBQ3hDRSxXQUFXYixJQUFJLEdBQUcsQ0FBQ2YsS0FBSzRCLFdBQVdiLElBQUksTUFBTSxRQUFRZixPQUFPLEtBQUssSUFBSUEsS0FBSztZQUMxRSxPQUFPYSxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdjLGFBQWE7Z0JBQUVaLFlBQVlwQixpRUFBc0JBLENBQUM0QixLQUFLLENBQUNFLFdBQVc7WUFBRTtRQUNoSDtRQUNBLE1BQU0sSUFBSWxDLGlEQUFRQSxDQUFDO0lBQ3ZCO0FBQ0o7QUFDTyxTQUFTcUMsaUJBQWlCVCxLQUFLO0lBQ2xDLE1BQU1VLHdCQUF3QlYsTUFBTUMsSUFBSSxDQUFDVSxXQUFXLENBQUM7SUFDckQsTUFBTUMsaUJBQWlCWixNQUFNQyxJQUFJLENBQUNZLFNBQVMsQ0FBQyxHQUFHSDtJQUMvQyxNQUFNSSxhQUFhZCxNQUFNQyxJQUFJLENBQUNZLFNBQVMsQ0FBQ0g7SUFDeEMsSUFBSS9CLE9BQU8sQ0FBQztJQUNaLElBQUltQyxlQUFlLE1BQU07UUFDckJuQyxPQUFPb0MsT0FBT0QsV0FBV0UsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUNuQyxpREFBaUQ7UUFDakQsSUFBSUMsTUFBTXRDLE9BQU87WUFDYixNQUFNLElBQUlQLGlEQUFRQSxDQUFDLDRCQUE0QjtnQkFBRU8sTUFBTW1DO1lBQVc7UUFDdEU7SUFDSjtJQUNBLE9BQU87UUFDSGQsT0FBTztZQUFFQyxNQUFNVztZQUFnQmpCLE1BQU07WUFBSUMsWUFBWUksTUFBTUosVUFBVTtRQUFDO1FBQ3RFakI7SUFDSjtBQUNKO0FBQ0E7Ozs7Q0FJQyxHQUNNLFNBQVN1QyxVQUFVbEIsS0FBSztJQUMzQixJQUFJcEIsSUFBSVk7SUFDUixJQUFJUSxNQUFNQyxJQUFJLEtBQUssWUFBWUQsTUFBTUMsSUFBSSxLQUFLLFdBQVdELE1BQU1DLElBQUksQ0FBQ2tCLFFBQVEsQ0FBQyxPQUN6RSxPQUFPO0lBQ1gsSUFBSW5CLE1BQU1DLElBQUksS0FBSyxTQUFTO1FBQ3hCLE9BQU8sQ0FBQ1QsS0FBSyxDQUFDWixLQUFLb0IsTUFBTUosVUFBVSxNQUFNLFFBQVFoQixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUd3QyxJQUFJLENBQUNGLFVBQVMsTUFBTyxRQUFRMUIsT0FBTyxLQUFLLElBQUlBLEtBQUs7SUFDbkk7SUFDQSxJQUFJUSxNQUFNQyxJQUFJLENBQUNrQixRQUFRLENBQUMsTUFBTTtRQUMxQixPQUFPRCxVQUFVVCxpQkFBaUJULE9BQU9BLEtBQUs7SUFDbEQ7SUFDQSxPQUFPO0FBQ1gsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vY29kZXJzL3V0aWxzLmpzP2Q5MWEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBwYXJzZUFiaVBhcmFtZXRlciB9IGZyb20gJ2FiaXR5cGUnO1xuaW1wb3J0IHsgQWJpRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGlzU2ltcGxpZmllZFN0cnVjdEZvcm1hdCwgbWFwU3RydWN0TmFtZUFuZFR5cGUsIG1hcFN0cnVjdFRvQ29kZXJGb3JtYXQsIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuZXhwb3J0IGNvbnN0IFdPUkRfU0laRSA9IDMyO1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jKHNpemUgPSAwKSB7XG4gICAgdmFyIF9hO1xuICAgIGlmICgoKF9hID0gZ2xvYmFsVGhpcy5CdWZmZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hbGxvYykgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBidWYgPSBnbG9iYWxUaGlzLkJ1ZmZlci5hbGxvYyhzaXplKTtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShzaXplKTtcbn1cbi8qKlxuICogV2hlcmUgcG9zc2libGUgcmV0dXJucyBhIFVpbnQ4QXJyYXkgb2YgdGhlIHJlcXVlc3RlZCBzaXplIHRoYXQgcmVmZXJlbmNlc1xuICogdW5pbml0aWFsaXplZCBtZW1vcnkuIE9ubHkgdXNlIGlmIHlvdSBhcmUgY2VydGFpbiB5b3Ugd2lsbCBpbW1lZGlhdGVseVxuICogb3ZlcndyaXRlIGV2ZXJ5IHZhbHVlIGluIHRoZSByZXR1cm5lZCBgVWludDhBcnJheWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbGxvY1Vuc2FmZShzaXplID0gMCkge1xuICAgIHZhciBfYTtcbiAgICBpZiAoKChfYSA9IGdsb2JhbFRoaXMuQnVmZmVyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYWxsb2NVbnNhZmUpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgYnVmID0gZ2xvYmFsVGhpcy5CdWZmZXIuYWxsb2NVbnNhZmUoc2l6ZSk7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY29udmVydEV4dGVybmFsQWJpUGFyYW1ldGVyKGFiaVBhcmFtKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBhYmlQYXJhbSksIHsgbmFtZTogKF9hID0gYWJpUGFyYW0ubmFtZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogJycsIGNvbXBvbmVudHM6IChfYiA9IGFiaVBhcmFtLmNvbXBvbmVudHMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5tYXAoYyA9PiBjb252ZXJ0RXh0ZXJuYWxBYmlQYXJhbWV0ZXIoYykpIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQWJpUGFyYW1ldGVyKHBhcmFtKSB7XG4gICAgcmV0dXJuICghaXNOdWxsaXNoKHBhcmFtKSAmJlxuICAgICAgICB0eXBlb2YgcGFyYW0gPT09ICdvYmplY3QnICYmXG4gICAgICAgICFpc051bGxpc2gocGFyYW0udHlwZSkgJiZcbiAgICAgICAgdHlwZW9mIHBhcmFtLnR5cGUgPT09ICdzdHJpbmcnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0FiaVBhcmFtcyhhYmkpIHtcbiAgICByZXR1cm4gYWJpLm1hcChpbnB1dCA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKGlzQWJpUGFyYW1ldGVyKGlucHV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udmVydEV4dGVybmFsQWJpUGFyYW1ldGVyKHBhcnNlQWJpUGFyYW1ldGVyKGlucHV0LnJlcGxhY2UoL3R1cGxlLywgJycpKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2ltcGxpZmllZFN0cnVjdEZvcm1hdChpbnB1dCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0cnVjdE5hbWUgPSBPYmplY3Qua2V5cyhpbnB1dClbMF07XG4gICAgICAgICAgICBjb25zdCBzdHJ1Y3RJbmZvID0gbWFwU3RydWN0TmFtZUFuZFR5cGUoc3RydWN0TmFtZSk7XG4gICAgICAgICAgICBzdHJ1Y3RJbmZvLm5hbWUgPSAoX2EgPSBzdHJ1Y3RJbmZvLm5hbWUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnO1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3RydWN0SW5mbyksIHsgY29tcG9uZW50czogbWFwU3RydWN0VG9Db2RlckZvcm1hdChpbnB1dFtzdHJ1Y3ROYW1lXSkgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEFiaUVycm9yKCdJbnZhbGlkIGFiaScpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RBcnJheVR5cGUocGFyYW0pIHtcbiAgICBjb25zdCBhcnJheVBhcmVudGhlc2lzU3RhcnQgPSBwYXJhbS50eXBlLmxhc3RJbmRleE9mKCdbJyk7XG4gICAgY29uc3QgYXJyYXlQYXJhbVR5cGUgPSBwYXJhbS50eXBlLnN1YnN0cmluZygwLCBhcnJheVBhcmVudGhlc2lzU3RhcnQpO1xuICAgIGNvbnN0IHNpemVTdHJpbmcgPSBwYXJhbS50eXBlLnN1YnN0cmluZyhhcnJheVBhcmVudGhlc2lzU3RhcnQpO1xuICAgIGxldCBzaXplID0gLTE7XG4gICAgaWYgKHNpemVTdHJpbmcgIT09ICdbXScpIHtcbiAgICAgICAgc2l6ZSA9IE51bWJlcihzaXplU3RyaW5nLnNsaWNlKDEsIC0xKSk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWdsb2JhbHNcbiAgICAgICAgaWYgKGlzTmFOKHNpemUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgQWJpRXJyb3IoJ0ludmFsaWQgZml4ZWQgYXJyYXkgc2l6ZScsIHsgc2l6ZTogc2l6ZVN0cmluZyB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBwYXJhbTogeyB0eXBlOiBhcnJheVBhcmFtVHlwZSwgbmFtZTogJycsIGNvbXBvbmVudHM6IHBhcmFtLmNvbXBvbmVudHMgfSxcbiAgICAgICAgc2l6ZSxcbiAgICB9O1xufVxuLyoqXG4gKiBQYXJhbSBpcyBkeW5hbWljIGlmIGl0J3MgZHluYW1pYyBiYXNlIHR5cGUgb3IgaWYgc29tZSBvZiBoaXMgY2hpbGRyZW4gKGNvbXBvbmVudHMsIGFycmF5IGl0ZW1zKVxuICogaXMgb2YgZHluYW1pYyB0eXBlXG4gKiBAcGFyYW0gcGFyYW1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRHluYW1pYyhwYXJhbSkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICdzdHJpbmcnIHx8IHBhcmFtLnR5cGUgPT09ICdieXRlcycgfHwgcGFyYW0udHlwZS5lbmRzV2l0aCgnW10nKSlcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKHBhcmFtLnR5cGUgPT09ICd0dXBsZScpIHtcbiAgICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHBhcmFtLmNvbXBvbmVudHMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zb21lKGlzRHluYW1pYykpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGZhbHNlO1xuICAgIH1cbiAgICBpZiAocGFyYW0udHlwZS5lbmRzV2l0aCgnXScpKSB7XG4gICAgICAgIHJldHVybiBpc0R5bmFtaWMoZXh0cmFjdEFycmF5VHlwZShwYXJhbSkucGFyYW0pO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VBYmlQYXJhbWV0ZXIiLCJBYmlFcnJvciIsImlzTnVsbGlzaCIsImlzU2ltcGxpZmllZFN0cnVjdEZvcm1hdCIsIm1hcFN0cnVjdE5hbWVBbmRUeXBlIiwibWFwU3RydWN0VG9Db2RlckZvcm1hdCIsIldPUkRfU0laRSIsImFsbG9jIiwic2l6ZSIsIl9hIiwiZ2xvYmFsVGhpcyIsIkJ1ZmZlciIsInVuZGVmaW5lZCIsImJ1ZiIsIlVpbnQ4QXJyYXkiLCJidWZmZXIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImFsbG9jVW5zYWZlIiwiY29udmVydEV4dGVybmFsQWJpUGFyYW1ldGVyIiwiYWJpUGFyYW0iLCJfYiIsIk9iamVjdCIsImFzc2lnbiIsIm5hbWUiLCJjb21wb25lbnRzIiwibWFwIiwiYyIsImlzQWJpUGFyYW1ldGVyIiwicGFyYW0iLCJ0eXBlIiwidG9BYmlQYXJhbXMiLCJhYmkiLCJpbnB1dCIsInJlcGxhY2UiLCJzdHJ1Y3ROYW1lIiwia2V5cyIsInN0cnVjdEluZm8iLCJleHRyYWN0QXJyYXlUeXBlIiwiYXJyYXlQYXJlbnRoZXNpc1N0YXJ0IiwibGFzdEluZGV4T2YiLCJhcnJheVBhcmFtVHlwZSIsInN1YnN0cmluZyIsInNpemVTdHJpbmciLCJOdW1iZXIiLCJzbGljZSIsImlzTmFOIiwiaXNEeW5hbWljIiwiZW5kc1dpdGgiLCJzb21lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeContractErrorData: () => (/* binding */ decodeContractErrorData)\n/* harmony export */ });\n/* harmony import */ var _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/errors_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js\");\n/* harmony import */ var _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nconst decodeContractErrorData = (errorsAbi, error)=>{\n    if (error === null || error === void 0 ? void 0 : error.data) {\n        let errorName;\n        let errorSignature;\n        let errorArgs;\n        try {\n            const errorSha = error.data.slice(0, 10);\n            const errorAbi = errorsAbi.find((abi)=>(0,_api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__.encodeErrorSignature)(abi).startsWith(errorSha));\n            if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n                errorName = errorAbi.name;\n                errorSignature = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.jsonInterfaceMethodToString)(errorAbi);\n                // decode abi.inputs according to EIP-838\n                errorArgs = (0,_api_parameters_api_js__WEBPACK_IMPORTED_MODULE_1__.decodeParameters)([\n                    ...errorAbi.inputs\n                ], error.data.substring(10));\n            }\n        } catch (err) {\n            console.error(err);\n        }\n        if (errorName) {\n            error.setDecodedProperties(errorName, errorSignature, errorArgs);\n        }\n    }\n}; //# sourceMappingURL=decode_contract_error_data.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vZGVjb2RlX2NvbnRyYWN0X2Vycm9yX2RhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxHQUMyRDtBQUNBO0FBQ0Y7QUFDbEQsTUFBTUcsMEJBQTBCLENBQUNDLFdBQVdDO0lBQy9DLElBQUlBLFVBQVUsUUFBUUEsVUFBVSxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNQyxJQUFJLEVBQUU7UUFDMUQsSUFBSUM7UUFDSixJQUFJQztRQUNKLElBQUlDO1FBQ0osSUFBSTtZQUNBLE1BQU1DLFdBQVdMLE1BQU1DLElBQUksQ0FBQ0ssS0FBSyxDQUFDLEdBQUc7WUFDckMsTUFBTUMsV0FBV1IsVUFBVVMsSUFBSSxDQUFDQyxDQUFBQSxNQUFPZCx3RUFBb0JBLENBQUNjLEtBQUtDLFVBQVUsQ0FBQ0w7WUFDNUUsSUFBSUUsYUFBYSxRQUFRQSxhQUFhLEtBQUssSUFBSSxLQUFLLElBQUlBLFNBQVNJLE1BQU0sRUFBRTtnQkFDckVULFlBQVlLLFNBQVNLLElBQUk7Z0JBQ3pCVCxpQkFBaUJOLHNFQUEyQkEsQ0FBQ1U7Z0JBQzdDLHlDQUF5QztnQkFDekNILFlBQVlSLHdFQUFnQkEsQ0FBQzt1QkFBSVcsU0FBU0ksTUFBTTtpQkFBQyxFQUFFWCxNQUFNQyxJQUFJLENBQUNZLFNBQVMsQ0FBQztZQUM1RTtRQUNKLEVBQ0EsT0FBT0MsS0FBSztZQUNSQyxRQUFRZixLQUFLLENBQUNjO1FBQ2xCO1FBQ0EsSUFBSVosV0FBVztZQUNYRixNQUFNZ0Isb0JBQW9CLENBQUNkLFdBQVdDLGdCQUFnQkM7UUFDMUQ7SUFDSjtBQUNKLEVBQUUsQ0FDRixzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vZGVjb2RlX2NvbnRyYWN0X2Vycm9yX2RhdGEuanM/MzU0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IGVuY29kZUVycm9yU2lnbmF0dXJlIH0gZnJvbSAnLi9hcGkvZXJyb3JzX2FwaS5qcyc7XG5pbXBvcnQgeyBkZWNvZGVQYXJhbWV0ZXJzIH0gZnJvbSAnLi9hcGkvcGFyYW1ldGVyc19hcGkuanMnO1xuaW1wb3J0IHsganNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgY29uc3QgZGVjb2RlQ29udHJhY3RFcnJvckRhdGEgPSAoZXJyb3JzQWJpLCBlcnJvcikgPT4ge1xuICAgIGlmIChlcnJvciA9PT0gbnVsbCB8fCBlcnJvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3IuZGF0YSkge1xuICAgICAgICBsZXQgZXJyb3JOYW1lO1xuICAgICAgICBsZXQgZXJyb3JTaWduYXR1cmU7XG4gICAgICAgIGxldCBlcnJvckFyZ3M7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvclNoYSA9IGVycm9yLmRhdGEuc2xpY2UoMCwgMTApO1xuICAgICAgICAgICAgY29uc3QgZXJyb3JBYmkgPSBlcnJvcnNBYmkuZmluZChhYmkgPT4gZW5jb2RlRXJyb3JTaWduYXR1cmUoYWJpKS5zdGFydHNXaXRoKGVycm9yU2hhKSk7XG4gICAgICAgICAgICBpZiAoZXJyb3JBYmkgPT09IG51bGwgfHwgZXJyb3JBYmkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVycm9yQWJpLmlucHV0cykge1xuICAgICAgICAgICAgICAgIGVycm9yTmFtZSA9IGVycm9yQWJpLm5hbWU7XG4gICAgICAgICAgICAgICAgZXJyb3JTaWduYXR1cmUgPSBqc29uSW50ZXJmYWNlTWV0aG9kVG9TdHJpbmcoZXJyb3JBYmkpO1xuICAgICAgICAgICAgICAgIC8vIGRlY29kZSBhYmkuaW5wdXRzIGFjY29yZGluZyB0byBFSVAtODM4XG4gICAgICAgICAgICAgICAgZXJyb3JBcmdzID0gZGVjb2RlUGFyYW1ldGVycyhbLi4uZXJyb3JBYmkuaW5wdXRzXSwgZXJyb3IuZGF0YS5zdWJzdHJpbmcoMTApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yTmFtZSkge1xuICAgICAgICAgICAgZXJyb3Iuc2V0RGVjb2RlZFByb3BlcnRpZXMoZXJyb3JOYW1lLCBlcnJvclNpZ25hdHVyZSwgZXJyb3JBcmdzKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGVfY29udHJhY3RfZXJyb3JfZGF0YS5qcy5tYXAiXSwibmFtZXMiOlsiZW5jb2RlRXJyb3JTaWduYXR1cmUiLCJkZWNvZGVQYXJhbWV0ZXJzIiwianNvbkludGVyZmFjZU1ldGhvZFRvU3RyaW5nIiwiZGVjb2RlQ29udHJhY3RFcnJvckRhdGEiLCJlcnJvcnNBYmkiLCJlcnJvciIsImRhdGEiLCJlcnJvck5hbWUiLCJlcnJvclNpZ25hdHVyZSIsImVycm9yQXJncyIsImVycm9yU2hhIiwic2xpY2UiLCJlcnJvckFiaSIsImZpbmQiLCJhYmkiLCJzdGFydHNXaXRoIiwiaW5wdXRzIiwibmFtZSIsInN1YnN0cmluZyIsImVyciIsImNvbnNvbGUiLCJzZXREZWNvZGVkUHJvcGVydGllcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/eip_712.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/eip_712.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMessage: () => (/* binding */ getMessage)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _coders_encode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coders/encode.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/coders/encode.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\nconst TYPE_REGEX = /^\\w+/;\nconst ARRAY_REGEX = /^(.*)\\[([0-9]*?)]$/;\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n */ const getDependencies = (typedData, type, dependencies = [])=>{\n    const match = type.match(TYPE_REGEX);\n    const actualType = match[0];\n    if (dependencies.includes(actualType)) {\n        return dependencies;\n    }\n    if (!typedData.types[actualType]) {\n        return dependencies;\n    }\n    return [\n        actualType,\n        ...typedData.types[actualType].reduce((previous, _type)=>[\n                ...previous,\n                ...getDependencies(typedData, _type.type, previous).filter((dependency)=>!previous.includes(dependency))\n            ], [])\n    ];\n};\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Options} [options]\n * @return {string}\n */ const encodeType = (typedData, type)=>{\n    const [primary, ...dependencies] = getDependencies(typedData, type);\n    // eslint-disable-next-line @typescript-eslint/require-array-sort-compare\n    const types = [\n        primary,\n        ...dependencies.sort()\n    ];\n    return types.map((dependency)=>// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `${dependency}(${typedData.types[dependency].map((_type)=>`${_type.type} ${_type.name}`)})`).join(\"\");\n};\n/**\n * Get a type string as hash.\n */ const getTypeHash = (typedData, type)=>(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(encodeType(typedData, type));\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n */ const getStructHash = (typedData, type, data)=>(0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(encodeData(typedData, type, data));\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n */ const getMessage = (typedData, hash)=>{\n    const EIP_191_PREFIX = \"1901\";\n    const message = `0x${EIP_191_PREFIX}${getStructHash(typedData, \"EIP712Domain\", typedData.domain).substring(2)}${getStructHash(typedData, typedData.primaryType, typedData.message).substring(2)}`;\n    if (hash) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(message);\n    }\n    return message;\n};\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n */ const encodeValue = (typedData, type, data)=>{\n    const match = type.match(ARRAY_REGEX);\n    // Checks for array types\n    if (match) {\n        const arrayType = match[1];\n        const length = Number(match[2]) || undefined;\n        if (!Array.isArray(data)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(\"Cannot encode data: value is not of array type\", {\n                data\n            });\n        }\n        if (length && data.length !== length) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(`Cannot encode data: expected length of ${length}, but got ${data.length}`, {\n                data\n            });\n        }\n        const encodedData = data.map((item)=>encodeValue(typedData, arrayType, item));\n        const types = encodedData.map((item)=>item[0]);\n        const values = encodedData.map((item)=>item[1]);\n        return [\n            \"bytes32\",\n            (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(types, values))\n        ];\n    }\n    if (typedData.types[type]) {\n        return [\n            \"bytes32\",\n            getStructHash(typedData, type, data)\n        ];\n    }\n    // Strings and arbitrary byte arrays are hashed to bytes32\n    if (type === \"string\") {\n        return [\n            \"bytes32\",\n            (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(data)\n        ];\n    }\n    if (type === \"bytes\") {\n        return [\n            \"bytes32\",\n            (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)(data)\n        ];\n    }\n    return [\n        type,\n        data\n    ];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n */ const encodeData = (typedData, type, data)=>{\n    const [types, values] = typedData.types[type].reduce(([_types, _values], field)=>{\n        if ((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(data[field.name]) || (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.isNullish)(data[field.name])) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_1__.AbiError(`Cannot encode data: missing data for '${field.name}'`, {\n                data,\n                field\n            });\n        }\n        const value = data[field.name];\n        const [_type, encodedValue] = encodeValue(typedData, field.type, value);\n        return [\n            [\n                ..._types,\n                _type\n            ],\n            [\n                ..._values,\n                encodedValue\n            ]\n        ];\n    }, [\n        [\n            \"bytes32\"\n        ],\n        [\n            getTypeHash(typedData, type)\n        ]\n    ]);\n    return (0,_coders_encode_js__WEBPACK_IMPORTED_MODULE_2__.encodeParameters)(types, values);\n}; //# sourceMappingURL=eip_712.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/eip_712.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeContractErrorData: () => (/* reexport safe */ _decode_contract_error_data_js__WEBPACK_IMPORTED_MODULE_6__.decodeContractErrorData),\n/* harmony export */   decodeLog: () => (/* reexport safe */ _api_logs_api_js__WEBPACK_IMPORTED_MODULE_3__.decodeLog),\n/* harmony export */   decodeParameter: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParameter),\n/* harmony export */   decodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParameters),\n/* harmony export */   decodeParametersWith: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.decodeParametersWith),\n/* harmony export */   encodeErrorSignature: () => (/* reexport safe */ _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__.encodeErrorSignature),\n/* harmony export */   encodeEventSignature: () => (/* reexport safe */ _api_events_api_js__WEBPACK_IMPORTED_MODULE_1__.encodeEventSignature),\n/* harmony export */   encodeFunctionCall: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionCall),\n/* harmony export */   encodeFunctionSignature: () => (/* reexport safe */ _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__.encodeFunctionSignature),\n/* harmony export */   encodeParameter: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.encodeParameter),\n/* harmony export */   encodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.encodeParameters),\n/* harmony export */   flattenTypes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.flattenTypes),\n/* harmony export */   formatOddHexstrings: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.formatOddHexstrings),\n/* harmony export */   formatParam: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.formatParam),\n/* harmony export */   getEncodedEip712Data: () => (/* reexport safe */ _eip_712_js__WEBPACK_IMPORTED_MODULE_7__.getMessage),\n/* harmony export */   inferTypesAndEncodeParameters: () => (/* reexport safe */ _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__.inferTypesAndEncodeParameters),\n/* harmony export */   isAbiConstructorFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiConstructorFragment),\n/* harmony export */   isAbiErrorFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiErrorFragment),\n/* harmony export */   isAbiEventFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiEventFragment),\n/* harmony export */   isAbiFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiFragment),\n/* harmony export */   isAbiFunctionFragment: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isAbiFunctionFragment),\n/* harmony export */   isOddHexstring: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isOddHexstring),\n/* harmony export */   isSimplifiedStructFormat: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.isSimplifiedStructFormat),\n/* harmony export */   jsonInterfaceMethodToString: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.jsonInterfaceMethodToString),\n/* harmony export */   mapStructNameAndType: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapStructNameAndType),\n/* harmony export */   mapStructToCoderFormat: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapStructToCoderFormat),\n/* harmony export */   mapTypes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_5__.mapTypes)\n/* harmony export */ });\n/* harmony import */ var _api_errors_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/errors_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/errors_api.js\");\n/* harmony import */ var _api_events_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/events_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/events_api.js\");\n/* harmony import */ var _api_functions_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/functions_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/functions_api.js\");\n/* harmony import */ var _api_logs_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/logs_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/logs_api.js\");\n/* harmony import */ var _api_parameters_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api/parameters_api.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/api/parameters_api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\");\n/* harmony import */ var _decode_contract_error_data_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./decode_contract_error_data.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/decode_contract_error_data.js\");\n/* harmony import */ var _eip_712_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./eip_712.js */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/eip_712.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtYWJpL2xpYi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBZUEsR0FDb0M7QUFDQTtBQUNHO0FBQ0w7QUFDTTtBQUNiO0FBQ3FCO0FBQ2tCLENBQ2xFLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC1hYmkvbGliL2VzbS9pbmRleC5qcz8xMDY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0ICogZnJvbSAnLi9hcGkvZXJyb3JzX2FwaS5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2FwaS9ldmVudHNfYXBpLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vYXBpL2Z1bmN0aW9uc19hcGkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9hcGkvbG9nc19hcGkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9hcGkvcGFyYW1ldGVyc19hcGkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2RlY29kZV9jb250cmFjdF9lcnJvcl9kYXRhLmpzJztcbmV4cG9ydCB7IGdldE1lc3NhZ2UgYXMgZ2V0RW5jb2RlZEVpcDcxMkRhdGEgfSBmcm9tICcuL2VpcF83MTIuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImdldE1lc3NhZ2UiLCJnZXRFbmNvZGVkRWlwNzEyRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/esm/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenTypes: () => (/* binding */ flattenTypes),\n/* harmony export */   formatOddHexstrings: () => (/* binding */ formatOddHexstrings),\n/* harmony export */   formatParam: () => (/* binding */ formatParam),\n/* harmony export */   isAbiConstructorFragment: () => (/* binding */ isAbiConstructorFragment),\n/* harmony export */   isAbiErrorFragment: () => (/* binding */ isAbiErrorFragment),\n/* harmony export */   isAbiEventFragment: () => (/* binding */ isAbiEventFragment),\n/* harmony export */   isAbiFragment: () => (/* binding */ isAbiFragment),\n/* harmony export */   isAbiFunctionFragment: () => (/* binding */ isAbiFunctionFragment),\n/* harmony export */   isOddHexstring: () => (/* binding */ isOddHexstring),\n/* harmony export */   isSimplifiedStructFormat: () => (/* binding */ isSimplifiedStructFormat),\n/* harmony export */   jsonInterfaceMethodToString: () => (/* binding */ jsonInterfaceMethodToString),\n/* harmony export */   mapStructNameAndType: () => (/* binding */ mapStructNameAndType),\n/* harmony export */   mapStructToCoderFormat: () => (/* binding */ mapStructToCoderFormat),\n/* harmony export */   mapTypes: () => (/* binding */ mapTypes)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/ \n\nconst isAbiFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && [\n        \"function\",\n        \"event\",\n        \"constructor\",\n        \"error\"\n    ].includes(item.type);\nconst isAbiErrorFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"error\";\nconst isAbiEventFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"event\";\nconst isAbiFunctionFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"function\";\nconst isAbiConstructorFragment = (item)=>!(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) && typeof item === \"object\" && !(0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item.type) && item.type === \"constructor\";\n/**\n * Check if type is simplified struct format\n */ const isSimplifiedStructFormat = (type)=>typeof type === \"object\" && typeof type.components === \"undefined\" && typeof type.name === \"undefined\";\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */ const mapStructNameAndType = (structName)=>structName.includes(\"[]\") ? {\n        type: \"tuple[]\",\n        name: structName.slice(0, -2)\n    } : {\n        type: \"tuple\",\n        name: structName\n    };\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */ const mapStructToCoderFormat = (struct)=>{\n    const components = [];\n    for (const key of Object.keys(struct)){\n        const item = struct[key];\n        if (typeof item === \"object\") {\n            components.push(Object.assign(Object.assign({}, mapStructNameAndType(key)), {\n                components: mapStructToCoderFormat(item)\n            }));\n        } else {\n            components.push({\n                name: key,\n                type: struct[key]\n            });\n        }\n    }\n    return components;\n};\n/**\n * Map types if simplified format is used\n */ const mapTypes = (types)=>{\n    const mappedTypes = [];\n    for (const type of types){\n        let modifiedType = type;\n        // Clone object\n        if (typeof type === \"object\") {\n            modifiedType = Object.assign({}, type);\n        }\n        // Remap `function` type params to bytes24 since Ethers does not\n        // recognize former type. Solidity docs say `Function` is a bytes24\n        // encoding the contract address followed by the function selector hash.\n        if (typeof type === \"object\" && type.type === \"function\") {\n            modifiedType = Object.assign(Object.assign({}, type), {\n                type: \"bytes24\"\n            });\n        }\n        if (isSimplifiedStructFormat(modifiedType)) {\n            const structName = Object.keys(modifiedType)[0];\n            mappedTypes.push(Object.assign(Object.assign({}, mapStructNameAndType(structName)), {\n                components: mapStructToCoderFormat(modifiedType[structName])\n            }));\n        } else {\n            mappedTypes.push(modifiedType);\n        }\n    }\n    return mappedTypes;\n};\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */ const isOddHexstring = (param)=>typeof param === \"string\" && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\n/**\n * format odd-length bytes to even-length\n */ const formatOddHexstrings = (param)=>isOddHexstring(param) ? `0x0${param.substring(2)}` : param;\nconst paramTypeBytes = /^bytes([0-9]*)$/;\nconst paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\nconst paramTypeNumber = /^(u?int)([0-9]*)$/;\nconst paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */ const formatParam = (type, _param)=>{\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    // clone if _param is an object\n    const param = typeof _param === \"object\" && !Array.isArray(_param) ? Object.assign({}, _param) : _param;\n    // Format BN to string\n    if (param instanceof BigInt || typeof param === \"bigint\") {\n        return param.toString(10);\n    }\n    if (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        const paramClone = [\n            ...param\n        ];\n        return paramClone.map((p)=>formatParam(type.replace(\"[]\", \"\"), p));\n    }\n    // Format correct width for u?int[0-9]*\n    let match = paramTypeNumber.exec(type);\n    if (match) {\n        const size = parseInt(match[2] ? match[2] : \"256\", 10);\n        if (size / 8 < param.length) {\n            // pad to correct bit width\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.leftPad)(param, size);\n        }\n    }\n    // Format correct length for bytes[0-9]+\n    match = paramTypeBytes.exec(type);\n    if (match) {\n        const hexParam = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.isUint8Array)(param) ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toHex)(param) : param;\n        // format to correct length\n        const size = parseInt(match[1], 10);\n        if (size) {\n            let maxSize = size * 2;\n            if (param.startsWith(\"0x\")) {\n                maxSize += 2;\n            }\n            // pad to correct length\n            const paddedParam = hexParam.length < maxSize ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.rightPad)(param, size * 2) : hexParam;\n            return formatOddHexstrings(paddedParam);\n        }\n        return formatOddHexstrings(hexParam);\n    }\n    return param;\n};\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */ const flattenTypes = (includeTuple, puts)=>{\n    const types = [];\n    puts.forEach((param)=>{\n        if (typeof param.components === \"object\") {\n            if (!param.type.startsWith(\"tuple\")) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.AbiError(`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`);\n            }\n            const arrayBracket = param.type.indexOf(\"[\");\n            const suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : \"\";\n            const result = flattenTypes(includeTuple, param.components);\n            if (Array.isArray(result) && includeTuple) {\n                types.push(`tuple(${result.join(\",\")})${suffix}`);\n            } else if (!includeTuple) {\n                types.push(`(${result.join(\",\")})${suffix}`);\n            } else {\n                types.push(`(${result.join()})`);\n            }\n        } else {\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */ const jsonInterfaceMethodToString = (json)=>{\n    var _a, _b, _c, _d;\n    if (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {\n        if ((_a = json.name) === null || _a === void 0 ? void 0 : _a.includes(\"(\")) {\n            return json.name;\n        }\n        return `${(_b = json.name) !== null && _b !== void 0 ? _b : \"\"}(${flattenTypes(false, (_c = json.inputs) !== null && _c !== void 0 ? _c : []).join(\",\")})`;\n    }\n    // Constructor fragment\n    return `(${flattenTypes(false, (_d = json.inputs) !== null && _d !== void 0 ? _d : []).join(\",\")})`;\n}; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-abi/lib/esm/utils.js\n");

/***/ })

};
;