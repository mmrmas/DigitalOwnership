"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ethereum-cryptography";
exports.ids = ["vendor-chunks/ethereum-cryptography"];
exports.modules = {

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/aes.js":
/*!*******************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/aes.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(ssr)/./node_modules/@noble/hashes/esm/cryptoNode.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nconst crypto = {\n    web: _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_0__.crypto\n};\nfunction validateOpt(key, iv, mode) {\n    if (!mode.startsWith(\"aes-\")) {\n        throw new Error(`AES submodule doesn't support mode ${mode}`);\n    }\n    if (iv.length !== 16) {\n        throw new Error(\"AES: wrong IV length\");\n    }\n    if (mode.startsWith(\"aes-128\") && key.length !== 16 || mode.startsWith(\"aes-256\") && key.length !== 32) {\n        throw new Error(\"AES: wrong key length\");\n    }\n}\nasync function getBrowserKey(mode, key, iv) {\n    if (!crypto.web) {\n        throw new Error(\"Browser crypto not available.\");\n    }\n    let keyMode;\n    if ([\n        \"aes-128-cbc\",\n        \"aes-256-cbc\"\n    ].includes(mode)) {\n        keyMode = \"cbc\";\n    }\n    if ([\n        \"aes-128-ctr\",\n        \"aes-256-ctr\"\n    ].includes(mode)) {\n        keyMode = \"ctr\";\n    }\n    if (!keyMode) {\n        throw new Error(\"AES: unsupported mode\");\n    }\n    const wKey = await crypto.web.subtle.importKey(\"raw\", key, {\n        name: `AES-${keyMode.toUpperCase()}`,\n        length: key.length * 8\n    }, true, [\n        \"encrypt\",\n        \"decrypt\"\n    ]);\n    // node.js uses whole 128 bit as a counter, without nonce, instead of 64 bit\n    // recommended by NIST SP800-38A\n    return [\n        wKey,\n        {\n            name: `aes-${keyMode}`,\n            iv,\n            counter: iv,\n            length: 128\n        }\n    ];\n}\nasync function encrypt(msg, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        const cipher = await crypto.web.subtle.encrypt(wOpt, wKey, msg);\n        // Remove PKCS7 padding on cbc mode by stripping end of message\n        let res = new Uint8Array(cipher);\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\" && !(msg.length % 16)) {\n            res = res.slice(0, -16);\n        }\n        return res;\n    } else if (crypto.node) {\n        const cipher = crypto.node.createCipheriv(mode, key, iv);\n        cipher.setAutoPadding(pkcs7PaddingEnabled);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(cipher.update(msg), cipher.final());\n    } else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\nasync function getPadding(cypherText, key, iv, mode) {\n    const lastBlock = cypherText.slice(-16);\n    for(let i = 0; i < 16; i++){\n        // Undo xor of iv and fill with lastBlock ^ padding (16)\n        lastBlock[i] ^= iv[i] ^ 16;\n    }\n    const res = await encrypt(lastBlock, key, iv, mode);\n    return res.slice(0, 16);\n}\nasync function decrypt(cypherText, key, iv, mode = \"aes-128-ctr\", pkcs7PaddingEnabled = true) {\n    validateOpt(key, iv, mode);\n    if (crypto.web) {\n        const [wKey, wOpt] = await getBrowserKey(mode, key, iv);\n        // Add empty padding so Chrome will correctly decrypt message\n        if (!pkcs7PaddingEnabled && wOpt.name === \"aes-cbc\") {\n            const padding = await getPadding(cypherText, key, iv, mode);\n            cypherText = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(cypherText, padding);\n        }\n        const msg = await crypto.web.subtle.decrypt(wOpt, wKey, cypherText);\n        const msgBytes = new Uint8Array(msg);\n        // Safari always ignores padding (if no padding -> broken message)\n        if (wOpt.name === \"aes-cbc\") {\n            const encrypted = await encrypt(msgBytes, key, iv, mode);\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.equalsBytes)(encrypted, cypherText)) {\n                throw new Error(\"AES: wrong padding\");\n            }\n        }\n        return msgBytes;\n    } else if (crypto.node) {\n        const decipher = crypto.node.createDecipheriv(mode, key, iv);\n        decipher.setAutoPadding(pkcs7PaddingEnabled);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.concatBytes)(decipher.update(cypherText), decipher.final());\n    } else {\n        throw new Error(\"The environment doesn't have AES module\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/aes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/keccak.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keccak224: () => (/* binding */ keccak224),\n/* harmony export */   keccak256: () => (/* binding */ keccak256),\n/* harmony export */   keccak384: () => (/* binding */ keccak384),\n/* harmony export */   keccak512: () => (/* binding */ keccak512)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nconst keccak224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_224);\nconst keccak256 = (()=>{\n    const k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256);\n    k.create = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_256.create;\n    return k;\n})();\nconst keccak384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_384);\nconst keccak512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_0__.keccak_512);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9rZWNjYWsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9GO0FBQzlDO0FBQy9CLE1BQU1LLFlBQVlELG1EQUFRQSxDQUFDSiwwREFBVUEsRUFBRTtBQUN2QyxNQUFNTSxZQUFZLENBQUM7SUFDdEIsTUFBTUMsSUFBSUgsbURBQVFBLENBQUNILDBEQUFVQTtJQUM3Qk0sRUFBRUMsTUFBTSxHQUFHUCwwREFBVUEsQ0FBQ08sTUFBTTtJQUM1QixPQUFPRDtBQUNYLEtBQUs7QUFDRSxNQUFNRSxZQUFZTCxtREFBUUEsQ0FBQ0YsMERBQVVBLEVBQUU7QUFDdkMsTUFBTVEsWUFBWU4sbURBQVFBLENBQUNELDBEQUFVQSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20va2VjY2FrLmpzP2UyM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2VjY2FrXzIyNCwga2VjY2FrXzI1Niwga2VjY2FrXzM4NCwga2VjY2FrXzUxMiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTNcIjtcbmltcG9ydCB7IHdyYXBIYXNoIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmV4cG9ydCBjb25zdCBrZWNjYWsyMjQgPSB3cmFwSGFzaChrZWNjYWtfMjI0KTtcbmV4cG9ydCBjb25zdCBrZWNjYWsyNTYgPSAoKCkgPT4ge1xuICAgIGNvbnN0IGsgPSB3cmFwSGFzaChrZWNjYWtfMjU2KTtcbiAgICBrLmNyZWF0ZSA9IGtlY2Nha18yNTYuY3JlYXRlO1xuICAgIHJldHVybiBrO1xufSkoKTtcbmV4cG9ydCBjb25zdCBrZWNjYWszODQgPSB3cmFwSGFzaChrZWNjYWtfMzg0KTtcbmV4cG9ydCBjb25zdCBrZWNjYWs1MTIgPSB3cmFwSGFzaChrZWNjYWtfNTEyKTtcbiJdLCJuYW1lcyI6WyJrZWNjYWtfMjI0Iiwia2VjY2FrXzI1NiIsImtlY2Nha18zODQiLCJrZWNjYWtfNTEyIiwid3JhcEhhc2giLCJrZWNjYWsyMjQiLCJrZWNjYWsyNTYiLCJrIiwiY3JlYXRlIiwia2VjY2FrMzg0Iiwia2VjY2FrNTEyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/keccak.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/pbkdf2.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/pbkdf2.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pbkdf2: () => (/* binding */ pbkdf2),\n/* harmony export */   pbkdf2Sync: () => (/* binding */ pbkdf2Sync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(ssr)/./node_modules/@noble/hashes/esm/pbkdf2.js\");\n/* harmony import */ var _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha256.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\n\n\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\n        \"sha256\",\n        \"sha512\"\n    ].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(salt);\n    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__.pbkdf2Async)(digest === \"sha256\" ? _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256 : _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\n        \"sha256\",\n        \"sha512\"\n    ].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.assertBytes)(salt);\n    return (0,_noble_hashes_pbkdf2__WEBPACK_IMPORTED_MODULE_0__.pbkdf2)(digest === \"sha256\" ? _noble_hashes_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256 : _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9wYmtkZjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNGO0FBQ3hDO0FBQ0E7QUFDTDtBQUNsQyxlQUFlQSxPQUFPTyxRQUFRLEVBQUVDLElBQUksRUFBRUMsVUFBVSxFQUFFQyxNQUFNLEVBQUVDLE1BQU07SUFDbkUsSUFBSSxDQUFDO1FBQUM7UUFBVTtLQUFTLENBQUNDLFFBQVEsQ0FBQ0QsU0FBUztRQUN4QyxNQUFNLElBQUlFLE1BQU07SUFDcEI7SUFDQVAsc0RBQVdBLENBQUNDO0lBQ1pELHNEQUFXQSxDQUFDRTtJQUNaLE9BQU9MLGlFQUFZQSxDQUFDUSxXQUFXLFdBQVdQLHdEQUFNQSxHQUFHQyx3REFBTUEsRUFBRUUsVUFBVUMsTUFBTTtRQUN2RU0sR0FBR0w7UUFDSE0sT0FBT0w7SUFDWDtBQUNKO0FBQ08sU0FBU00sV0FBV1QsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFVBQVUsRUFBRUMsTUFBTSxFQUFFQyxNQUFNO0lBQ2pFLElBQUksQ0FBQztRQUFDO1FBQVU7S0FBUyxDQUFDQyxRQUFRLENBQUNELFNBQVM7UUFDeEMsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0FQLHNEQUFXQSxDQUFDQztJQUNaRCxzREFBV0EsQ0FBQ0U7SUFDWixPQUFPUCw0REFBT0EsQ0FBQ1UsV0FBVyxXQUFXUCx3REFBTUEsR0FBR0Msd0RBQU1BLEVBQUVFLFVBQVVDLE1BQU07UUFDbEVNLEdBQUdMO1FBQ0hNLE9BQU9MO0lBQ1g7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1jcnlwdG9ncmFwaHkvZXNtL3Bia2RmMi5qcz8yMGRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBia2RmMiBhcyBfcGJrZGYyLCBwYmtkZjJBc3luYyBhcyBfcGJrZGYyQXN5bmMgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9wYmtkZjJcIjtcbmltcG9ydCB7IHNoYTI1NiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiO1xuaW1wb3J0IHsgc2hhNTEyIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvc2hhNTEyXCI7XG5pbXBvcnQgeyBhc3NlcnRCeXRlcyB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGJrZGYyKHBhc3N3b3JkLCBzYWx0LCBpdGVyYXRpb25zLCBrZXlsZW4sIGRpZ2VzdCkge1xuICAgIGlmICghW1wic2hhMjU2XCIsIFwic2hhNTEyXCJdLmluY2x1ZGVzKGRpZ2VzdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT25seSBzaGEyNTYgYW5kIHNoYTUxMiBhcmUgc3VwcG9ydGVkXCIpO1xuICAgIH1cbiAgICBhc3NlcnRCeXRlcyhwYXNzd29yZCk7XG4gICAgYXNzZXJ0Qnl0ZXMoc2FsdCk7XG4gICAgcmV0dXJuIF9wYmtkZjJBc3luYyhkaWdlc3QgPT09IFwic2hhMjU2XCIgPyBzaGEyNTYgOiBzaGE1MTIsIHBhc3N3b3JkLCBzYWx0LCB7XG4gICAgICAgIGM6IGl0ZXJhdGlvbnMsXG4gICAgICAgIGRrTGVuOiBrZXlsZW5cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYmtkZjJTeW5jKHBhc3N3b3JkLCBzYWx0LCBpdGVyYXRpb25zLCBrZXlsZW4sIGRpZ2VzdCkge1xuICAgIGlmICghW1wic2hhMjU2XCIsIFwic2hhNTEyXCJdLmluY2x1ZGVzKGRpZ2VzdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT25seSBzaGEyNTYgYW5kIHNoYTUxMiBhcmUgc3VwcG9ydGVkXCIpO1xuICAgIH1cbiAgICBhc3NlcnRCeXRlcyhwYXNzd29yZCk7XG4gICAgYXNzZXJ0Qnl0ZXMoc2FsdCk7XG4gICAgcmV0dXJuIF9wYmtkZjIoZGlnZXN0ID09PSBcInNoYTI1NlwiID8gc2hhMjU2IDogc2hhNTEyLCBwYXNzd29yZCwgc2FsdCwge1xuICAgICAgICBjOiBpdGVyYXRpb25zLFxuICAgICAgICBka0xlbjoga2V5bGVuXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsicGJrZGYyIiwiX3Bia2RmMiIsInBia2RmMkFzeW5jIiwiX3Bia2RmMkFzeW5jIiwic2hhMjU2Iiwic2hhNTEyIiwiYXNzZXJ0Qnl0ZXMiLCJwYXNzd29yZCIsInNhbHQiLCJpdGVyYXRpb25zIiwia2V5bGVuIiwiZGlnZXN0IiwiaW5jbHVkZXMiLCJFcnJvciIsImMiLCJka0xlbiIsInBia2RmMlN5bmMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/pbkdf2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/random.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/random.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes),\n/* harmony export */   getRandomBytesSync: () => (/* binding */ getRandomBytesSync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/esm/utils.js\");\n\nfunction getRandomBytesSync(bytes) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);\n}\nasync function getRandomBytes(bytes) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQzNDLFNBQVNDLG1CQUFtQkMsS0FBSztJQUNwQyxPQUFPRixnRUFBV0EsQ0FBQ0U7QUFDdkI7QUFDTyxlQUFlQyxlQUFlRCxLQUFLO0lBQ3RDLE9BQU9GLGdFQUFXQSxDQUFDRTtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1jcnlwdG9ncmFwaHkvZXNtL3JhbmRvbS5qcz8zZWNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvdXRpbHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21CeXRlc1N5bmMoYnl0ZXMpIHtcbiAgICByZXR1cm4gcmFuZG9tQnl0ZXMoYnl0ZXMpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFJhbmRvbUJ5dGVzKGJ5dGVzKSB7XG4gICAgcmV0dXJuIHJhbmRvbUJ5dGVzKGJ5dGVzKTtcbn1cbiJdLCJuYW1lcyI6WyJyYW5kb21CeXRlcyIsImdldFJhbmRvbUJ5dGVzU3luYyIsImJ5dGVzIiwiZ2V0UmFuZG9tQnl0ZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/scrypt.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/scrypt.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrypt: () => (/* binding */ scrypt),\n/* harmony export */   scryptSync: () => (/* binding */ scryptSync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/scrypt */ \"(ssr)/./node_modules/@noble/hashes/esm/scrypt.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nasync function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(salt);\n    return (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__.scryptAsync)(password, salt, {\n        N: n,\n        r,\n        p,\n        dkLen,\n        onProgress\n    });\n}\nfunction scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(password);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertBytes)(salt);\n    return (0,_noble_hashes_scrypt__WEBPACK_IMPORTED_MODULE_0__.scrypt)(password, salt, {\n        N: n,\n        r,\n        p,\n        dkLen,\n        onProgress\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9zY3J5cHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4RTtBQUNyQztBQUNsQyxlQUFlQSxPQUFPSyxRQUFRLEVBQUVDLElBQUksRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxVQUFVO0lBQ25FUCxzREFBV0EsQ0FBQ0M7SUFDWkQsc0RBQVdBLENBQUNFO0lBQ1osT0FBT0gsaUVBQU1BLENBQUNFLFVBQVVDLE1BQU07UUFBRU0sR0FBR0w7UUFBR0U7UUFBR0Q7UUFBR0U7UUFBT0M7SUFBVztBQUNsRTtBQUNPLFNBQVNFLFdBQVdSLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxLQUFLLEVBQUVDLFVBQVU7SUFDakVQLHNEQUFXQSxDQUFDQztJQUNaRCxzREFBV0EsQ0FBQ0U7SUFDWixPQUFPTCw0REFBS0EsQ0FBQ0ksVUFBVUMsTUFBTTtRQUFFTSxHQUFHTDtRQUFHRTtRQUFHRDtRQUFHRTtRQUFPQztJQUFXO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20vc2NyeXB0LmpzPzlmOTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NyeXB0IGFzIF9zeW5jLCBzY3J5cHRBc3luYyBhcyBfYXN5bmMgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zY3J5cHRcIjtcbmltcG9ydCB7IGFzc2VydEJ5dGVzIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzY3J5cHQocGFzc3dvcmQsIHNhbHQsIG4sIHAsIHIsIGRrTGVuLCBvblByb2dyZXNzKSB7XG4gICAgYXNzZXJ0Qnl0ZXMocGFzc3dvcmQpO1xuICAgIGFzc2VydEJ5dGVzKHNhbHQpO1xuICAgIHJldHVybiBfYXN5bmMocGFzc3dvcmQsIHNhbHQsIHsgTjogbiwgciwgcCwgZGtMZW4sIG9uUHJvZ3Jlc3MgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2NyeXB0U3luYyhwYXNzd29yZCwgc2FsdCwgbiwgcCwgciwgZGtMZW4sIG9uUHJvZ3Jlc3MpIHtcbiAgICBhc3NlcnRCeXRlcyhwYXNzd29yZCk7XG4gICAgYXNzZXJ0Qnl0ZXMoc2FsdCk7XG4gICAgcmV0dXJuIF9zeW5jKHBhc3N3b3JkLCBzYWx0LCB7IE46IG4sIHIsIHAsIGRrTGVuLCBvblByb2dyZXNzIH0pO1xufVxuIl0sIm5hbWVzIjpbInNjcnlwdCIsIl9zeW5jIiwic2NyeXB0QXN5bmMiLCJfYXN5bmMiLCJhc3NlcnRCeXRlcyIsInBhc3N3b3JkIiwic2FsdCIsIm4iLCJwIiwiciIsImRrTGVuIiwib25Qcm9ncmVzcyIsIk4iLCJzY3J5cHRTeW5jIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/scrypt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/secp256k1.js":
/*!*************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/secp256k1.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   secp256k1: () => (/* reexport safe */ _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__.secp256k1)\n/* harmony export */ });\n/* harmony import */ var _noble_curves_secp256k1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/curves/secp256k1 */ \"(ssr)/./node_modules/@noble/curves/esm/secp256k1.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9zZWNwMjU2azEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9zZWNwMjU2azEuanM/MmJmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBzZWNwMjU2azEgfSBmcm9tIFwiQG5vYmxlL2N1cnZlcy9zZWNwMjU2azFcIjtcbiJdLCJuYW1lcyI6WyJzZWNwMjU2azEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-cryptography/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertBool: () => (/* binding */ assertBool),\n/* harmony export */   assertBytes: () => (/* binding */ assertBytes),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),\n/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),\n/* harmony export */   crypto: () => (/* binding */ crypto),\n/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),\n/* harmony export */   wrapHash: () => (/* binding */ wrapHash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ \"(ssr)/./node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/./node_modules/@noble/hashes/esm/utils.js\");\n\n\nconst assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bool;\nconst assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes;\n\n\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for(let i = 0; i < a.length; i++){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg)=>{\n        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nconst crypto = (()=>{\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" && typeof module.require === \"function\" && module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUEyQztBQUNxQjtBQUNoRSxNQUFNRyxhQUFhSCxpRUFBVztBQUM5QixNQUFNSyxjQUFjTCxrRUFBWTtBQUNHO0FBQ3lFO0FBQzVHLDJDQUEyQztBQUNwQyxTQUFTWSxZQUFZQyxJQUFJO0lBQzVCLElBQUksQ0FBRUEsQ0FBQUEsZ0JBQWdCQyxVQUFTLEdBQUk7UUFDL0IsTUFBTSxJQUFJQyxVQUFVLENBQUMscUNBQXFDLEVBQUUsT0FBT0YsS0FBSyxDQUFDO0lBQzdFO0lBQ0EsT0FBTyxJQUFJRyxjQUFjQyxNQUFNLENBQUNKO0FBQ3BDO0FBQ08sU0FBU1osV0FBV1ksSUFBSTtJQUMzQixNQUFNSyxTQUFTTCxLQUFLTSxVQUFVLENBQUMsUUFBUU4sS0FBS08sU0FBUyxDQUFDLEtBQUtQO0lBQzNELE9BQU9YLCtEQUFXQSxDQUFDZ0I7QUFDdkI7QUFDQSw2Q0FBNkM7QUFDdEMsU0FBU0csWUFBWUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzVCLElBQUlELEVBQUVFLE1BQU0sS0FBS0QsRUFBRUMsTUFBTSxFQUFFO1FBQ3ZCLE9BQU87SUFDWDtJQUNBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxFQUFFRSxNQUFNLEVBQUVDLElBQUs7UUFDL0IsSUFBSUgsQ0FBQyxDQUFDRyxFQUFFLEtBQUtGLENBQUMsQ0FBQ0UsRUFBRSxFQUFFO1lBQ2YsT0FBTztRQUNYO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQSxpQkFBaUI7QUFDVixTQUFTQyxTQUFTQyxJQUFJO0lBQ3pCLE9BQU8sQ0FBQ0M7UUFDSjVCLGtFQUFZLENBQUM0QjtRQUNiLE9BQU9ELEtBQUtDO0lBQ2hCO0FBQ0o7QUFDQSw0RUFBNEU7QUFDckUsTUFBTUMsU0FBUyxDQUFDO0lBQ25CLE1BQU1DLFlBQVksT0FBT0MsZUFBZSxZQUFZLFlBQVlBLGFBQWFBLFdBQVdGLE1BQU0sR0FBR0c7SUFDakcsTUFBTUMsY0FBYyxPQUFPQyxXQUFXLGVBQ2xDLE9BQU9BLE9BQU9DLE9BQU8sS0FBSyxjQUMxQkQsT0FBT0MsT0FBTyxDQUFDQyxJQUFJLENBQUNGO0lBQ3hCLE9BQU87UUFDSEcsTUFBTUosZUFBZSxDQUFDSCxZQUFZRyxZQUFZLFlBQVlEO1FBQzFETSxLQUFLUjtJQUNUO0FBQ0osS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1jcnlwdG9ncmFwaHkvZXNtL3V0aWxzLmpzP2RmMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tIFwiQG5vYmxlL2hhc2hlcy9fYXNzZXJ0XCI7XG5pbXBvcnQgeyBoZXhUb0J5dGVzIGFzIF9oZXhUb0J5dGVzIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvdXRpbHNcIjtcbmNvbnN0IGFzc2VydEJvb2wgPSBhc3NlcnQuYm9vbDtcbmNvbnN0IGFzc2VydEJ5dGVzID0gYXNzZXJ0LmJ5dGVzO1xuZXhwb3J0IHsgYXNzZXJ0Qm9vbCwgYXNzZXJ0Qnl0ZXMgfTtcbmV4cG9ydCB7IGJ5dGVzVG9IZXgsIGJ5dGVzVG9IZXggYXMgdG9IZXgsIGNvbmNhdEJ5dGVzLCBjcmVhdGVWaWV3LCB1dGY4VG9CeXRlcyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG4vLyBidWYudG9TdHJpbmcoJ3V0ZjgnKSAtPiBieXRlc1RvVXRmOChidWYpXG5leHBvcnQgZnVuY3Rpb24gYnl0ZXNUb1V0ZjgoZGF0YSkge1xuICAgIGlmICghKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBieXRlc1RvVXRmOCBleHBlY3RlZCBVaW50OEFycmF5LCBnb3QgJHt0eXBlb2YgZGF0YX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShkYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb0J5dGVzKGRhdGEpIHtcbiAgICBjb25zdCBzbGljZWQgPSBkYXRhLnN0YXJ0c1dpdGgoXCIweFwiKSA/IGRhdGEuc3Vic3RyaW5nKDIpIDogZGF0YTtcbiAgICByZXR1cm4gX2hleFRvQnl0ZXMoc2xpY2VkKTtcbn1cbi8vIGJ1Zi5lcXVhbHMoYnVmMikgLT4gZXF1YWxzQnl0ZXMoYnVmLCBidWYyKVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFsc0J5dGVzKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyBJbnRlcm5hbCB1dGlsc1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBIYXNoKGhhc2gpIHtcbiAgICByZXR1cm4gKG1zZykgPT4ge1xuICAgICAgICBhc3NlcnQuYnl0ZXMobXNnKTtcbiAgICAgICAgcmV0dXJuIGhhc2gobXNnKTtcbiAgICB9O1xufVxuLy8gVE9ETyh2Myk6IHN3aXRjaCBhd2F5IGZyb20gbm9kZSBjcnlwdG8sIHJlbW92ZSB0aGlzIHVubmVjZXNzYXJ5IHZhcmlhYmxlLlxuZXhwb3J0IGNvbnN0IGNyeXB0byA9ICgoKSA9PiB7XG4gICAgY29uc3Qgd2ViQ3J5cHRvID0gdHlwZW9mIGdsb2JhbFRoaXMgPT09IFwib2JqZWN0XCIgJiYgXCJjcnlwdG9cIiBpbiBnbG9iYWxUaGlzID8gZ2xvYmFsVGhpcy5jcnlwdG8gOiB1bmRlZmluZWQ7XG4gICAgY29uc3Qgbm9kZVJlcXVpcmUgPSB0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHR5cGVvZiBtb2R1bGUucmVxdWlyZSA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIG1vZHVsZS5yZXF1aXJlLmJpbmQobW9kdWxlKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBub2RlOiBub2RlUmVxdWlyZSAmJiAhd2ViQ3J5cHRvID8gbm9kZVJlcXVpcmUoXCJjcnlwdG9cIikgOiB1bmRlZmluZWQsXG4gICAgICAgIHdlYjogd2ViQ3J5cHRvXG4gICAgfTtcbn0pKCk7XG4iXSwibmFtZXMiOlsiYXNzZXJ0IiwiaGV4VG9CeXRlcyIsIl9oZXhUb0J5dGVzIiwiYXNzZXJ0Qm9vbCIsImJvb2wiLCJhc3NlcnRCeXRlcyIsImJ5dGVzIiwiYnl0ZXNUb0hleCIsInRvSGV4IiwiY29uY2F0Qnl0ZXMiLCJjcmVhdGVWaWV3IiwidXRmOFRvQnl0ZXMiLCJieXRlc1RvVXRmOCIsImRhdGEiLCJVaW50OEFycmF5IiwiVHlwZUVycm9yIiwiVGV4dERlY29kZXIiLCJkZWNvZGUiLCJzbGljZWQiLCJzdGFydHNXaXRoIiwic3Vic3RyaW5nIiwiZXF1YWxzQnl0ZXMiLCJhIiwiYiIsImxlbmd0aCIsImkiLCJ3cmFwSGFzaCIsImhhc2giLCJtc2ciLCJjcnlwdG8iLCJ3ZWJDcnlwdG8iLCJnbG9iYWxUaGlzIiwidW5kZWZpbmVkIiwibm9kZVJlcXVpcmUiLCJtb2R1bGUiLCJyZXF1aXJlIiwiYmluZCIsIm5vZGUiLCJ3ZWIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-cryptography/esm/utils.js\n");

/***/ })

};
;