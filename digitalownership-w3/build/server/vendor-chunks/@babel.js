"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@babel";
exports.ids = ["vendor-chunks/@babel"];
exports.modules = {

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/ansi-styles/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/ansi-styles/index.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\nconst colorConvert = __webpack_require__(/*! color-convert */ \"(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/index.js\");\nconst wrapAnsi16 = (fn, offset)=>function() {\n        const code = fn.apply(colorConvert, arguments);\n        return `\\u001B[${code + offset}m`;\n    };\nconst wrapAnsi256 = (fn, offset)=>function() {\n        const code = fn.apply(colorConvert, arguments);\n        return `\\u001B[${38 + offset};5;${code}m`;\n    };\nconst wrapAnsi16m = (fn, offset)=>function() {\n        const rgb = fn.apply(colorConvert, arguments);\n        return `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n    };\nfunction assembleStyles() {\n    const codes = new Map();\n    const styles = {\n        modifier: {\n            reset: [\n                0,\n                0\n            ],\n            // 21 isn't widely supported and 22 does the same thing\n            bold: [\n                1,\n                22\n            ],\n            dim: [\n                2,\n                22\n            ],\n            italic: [\n                3,\n                23\n            ],\n            underline: [\n                4,\n                24\n            ],\n            inverse: [\n                7,\n                27\n            ],\n            hidden: [\n                8,\n                28\n            ],\n            strikethrough: [\n                9,\n                29\n            ]\n        },\n        color: {\n            black: [\n                30,\n                39\n            ],\n            red: [\n                31,\n                39\n            ],\n            green: [\n                32,\n                39\n            ],\n            yellow: [\n                33,\n                39\n            ],\n            blue: [\n                34,\n                39\n            ],\n            magenta: [\n                35,\n                39\n            ],\n            cyan: [\n                36,\n                39\n            ],\n            white: [\n                37,\n                39\n            ],\n            gray: [\n                90,\n                39\n            ],\n            // Bright color\n            redBright: [\n                91,\n                39\n            ],\n            greenBright: [\n                92,\n                39\n            ],\n            yellowBright: [\n                93,\n                39\n            ],\n            blueBright: [\n                94,\n                39\n            ],\n            magentaBright: [\n                95,\n                39\n            ],\n            cyanBright: [\n                96,\n                39\n            ],\n            whiteBright: [\n                97,\n                39\n            ]\n        },\n        bgColor: {\n            bgBlack: [\n                40,\n                49\n            ],\n            bgRed: [\n                41,\n                49\n            ],\n            bgGreen: [\n                42,\n                49\n            ],\n            bgYellow: [\n                43,\n                49\n            ],\n            bgBlue: [\n                44,\n                49\n            ],\n            bgMagenta: [\n                45,\n                49\n            ],\n            bgCyan: [\n                46,\n                49\n            ],\n            bgWhite: [\n                47,\n                49\n            ],\n            // Bright color\n            bgBlackBright: [\n                100,\n                49\n            ],\n            bgRedBright: [\n                101,\n                49\n            ],\n            bgGreenBright: [\n                102,\n                49\n            ],\n            bgYellowBright: [\n                103,\n                49\n            ],\n            bgBlueBright: [\n                104,\n                49\n            ],\n            bgMagentaBright: [\n                105,\n                49\n            ],\n            bgCyanBright: [\n                106,\n                49\n            ],\n            bgWhiteBright: [\n                107,\n                49\n            ]\n        }\n    };\n    // Fix humans\n    styles.color.grey = styles.color.gray;\n    for (const groupName of Object.keys(styles)){\n        const group = styles[groupName];\n        for (const styleName of Object.keys(group)){\n            const style = group[styleName];\n            styles[styleName] = {\n                open: `\\u001B[${style[0]}m`,\n                close: `\\u001B[${style[1]}m`\n            };\n            group[styleName] = styles[styleName];\n            codes.set(style[0], style[1]);\n        }\n        Object.defineProperty(styles, groupName, {\n            value: group,\n            enumerable: false\n        });\n        Object.defineProperty(styles, \"codes\", {\n            value: codes,\n            enumerable: false\n        });\n    }\n    const ansi2ansi = (n)=>n;\n    const rgb2rgb = (r, g, b)=>[\n            r,\n            g,\n            b\n        ];\n    styles.color.close = \"\\x1b[39m\";\n    styles.bgColor.close = \"\\x1b[49m\";\n    styles.color.ansi = {\n        ansi: wrapAnsi16(ansi2ansi, 0)\n    };\n    styles.color.ansi256 = {\n        ansi256: wrapAnsi256(ansi2ansi, 0)\n    };\n    styles.color.ansi16m = {\n        rgb: wrapAnsi16m(rgb2rgb, 0)\n    };\n    styles.bgColor.ansi = {\n        ansi: wrapAnsi16(ansi2ansi, 10)\n    };\n    styles.bgColor.ansi256 = {\n        ansi256: wrapAnsi256(ansi2ansi, 10)\n    };\n    styles.bgColor.ansi16m = {\n        rgb: wrapAnsi16m(rgb2rgb, 10)\n    };\n    for (let key of Object.keys(colorConvert)){\n        if (typeof colorConvert[key] !== \"object\") {\n            continue;\n        }\n        const suite = colorConvert[key];\n        if (key === \"ansi16\") {\n            key = \"ansi\";\n        }\n        if (\"ansi16\" in suite) {\n            styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n            styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n        }\n        if (\"ansi256\" in suite) {\n            styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n            styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n        }\n        if (\"rgb\" in suite) {\n            styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n            styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n        }\n    }\n    return styles;\n}\n// Make the export immutable\nObject.defineProperty(module, \"exports\", {\n    enumerable: true,\n    get: assembleStyles\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/ansi-styles/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/chalk/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/chalk/index.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"(ssr)/./node_modules/@babel/highlight/node_modules/escape-string-regexp/index.js\");\nconst ansiStyles = __webpack_require__(/*! ansi-styles */ \"(ssr)/./node_modules/@babel/highlight/node_modules/ansi-styles/index.js\");\nconst stdoutColor = (__webpack_require__(/*! supports-color */ \"(ssr)/./node_modules/@babel/highlight/node_modules/supports-color/index.js\").stdout);\nconst template = __webpack_require__(/*! ./templates.js */ \"(ssr)/./node_modules/@babel/highlight/node_modules/chalk/templates.js\");\nconst isSimpleWindowsTerm = process.platform === \"win32\" && !(process.env.TERM || \"\").toLowerCase().startsWith(\"xterm\");\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n    \"ansi\",\n    \"ansi\",\n    \"ansi256\",\n    \"ansi16m\"\n];\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set([\n    \"gray\"\n]);\nconst styles = Object.create(null);\nfunction applyOptions(obj, options) {\n    options = options || {};\n    // Detect level if not set manually\n    const scLevel = stdoutColor ? stdoutColor.level : 0;\n    obj.level = options.level === undefined ? scLevel : options.level;\n    obj.enabled = \"enabled\" in options ? options.enabled : obj.level > 0;\n}\nfunction Chalk(options) {\n    // We check for this.template here since calling `chalk.constructor()`\n    // by itself will have a `this` of a previously constructed chalk object\n    if (!this || !(this instanceof Chalk) || this.template) {\n        const chalk = {};\n        applyOptions(chalk, options);\n        chalk.template = function() {\n            const args = [].slice.call(arguments);\n            return chalkTag.apply(null, [\n                chalk.template\n            ].concat(args));\n        };\n        Object.setPrototypeOf(chalk, Chalk.prototype);\n        Object.setPrototypeOf(chalk.template, chalk);\n        chalk.template.constructor = Chalk;\n        return chalk.template;\n    }\n    applyOptions(this, options);\n}\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n    ansiStyles.blue.open = \"\\x1b[94m\";\n}\nfor (const key of Object.keys(ansiStyles)){\n    ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), \"g\");\n    styles[key] = {\n        get () {\n            const codes = ansiStyles[key];\n            return build.call(this, this._styles ? this._styles.concat(codes) : [\n                codes\n            ], this._empty, key);\n        }\n    };\n}\nstyles.visible = {\n    get () {\n        return build.call(this, this._styles || [], true, \"visible\");\n    }\n};\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), \"g\");\nfor (const model of Object.keys(ansiStyles.color.ansi)){\n    if (skipModels.has(model)) {\n        continue;\n    }\n    styles[model] = {\n        get () {\n            const level = this.level;\n            return function() {\n                const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n                const codes = {\n                    open,\n                    close: ansiStyles.color.close,\n                    closeRe: ansiStyles.color.closeRe\n                };\n                return build.call(this, this._styles ? this._styles.concat(codes) : [\n                    codes\n                ], this._empty, model);\n            };\n        }\n    };\n}\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), \"g\");\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)){\n    if (skipModels.has(model)) {\n        continue;\n    }\n    const bgModel = \"bg\" + model[0].toUpperCase() + model.slice(1);\n    styles[bgModel] = {\n        get () {\n            const level = this.level;\n            return function() {\n                const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n                const codes = {\n                    open,\n                    close: ansiStyles.bgColor.close,\n                    closeRe: ansiStyles.bgColor.closeRe\n                };\n                return build.call(this, this._styles ? this._styles.concat(codes) : [\n                    codes\n                ], this._empty, model);\n            };\n        }\n    };\n}\nconst proto = Object.defineProperties(()=>{}, styles);\nfunction build(_styles, _empty, key) {\n    const builder = function() {\n        return applyStyle.apply(builder, arguments);\n    };\n    builder._styles = _styles;\n    builder._empty = _empty;\n    const self = this;\n    Object.defineProperty(builder, \"level\", {\n        enumerable: true,\n        get () {\n            return self.level;\n        },\n        set (level) {\n            self.level = level;\n        }\n    });\n    Object.defineProperty(builder, \"enabled\", {\n        enumerable: true,\n        get () {\n            return self.enabled;\n        },\n        set (enabled) {\n            self.enabled = enabled;\n        }\n    });\n    // See below for fix regarding invisible grey/dim combination on Windows\n    builder.hasGrey = this.hasGrey || key === \"gray\" || key === \"grey\";\n    // `__proto__` is used because we must return a function, but there is\n    // no way to create a function with a different prototype\n    builder.__proto__ = proto; // eslint-disable-line no-proto\n    return builder;\n}\nfunction applyStyle() {\n    // Support varags, but simply cast to string in case there's only one arg\n    const args = arguments;\n    const argsLen = args.length;\n    let str = String(arguments[0]);\n    if (argsLen === 0) {\n        return \"\";\n    }\n    if (argsLen > 1) {\n        // Don't slice `arguments`, it prevents V8 optimizations\n        for(let a = 1; a < argsLen; a++){\n            str += \" \" + args[a];\n        }\n    }\n    if (!this.enabled || this.level <= 0 || !str) {\n        return this._empty ? \"\" : str;\n    }\n    // Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n    // see https://github.com/chalk/chalk/issues/58\n    // If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n    const originalDim = ansiStyles.dim.open;\n    if (isSimpleWindowsTerm && this.hasGrey) {\n        ansiStyles.dim.open = \"\";\n    }\n    for (const code of this._styles.slice().reverse()){\n        // Replace any instances already present with a re-opening code\n        // otherwise only the part of the string until said closing code\n        // will be colored, and the rest will simply be 'plain'.\n        str = code.open + str.replace(code.closeRe, code.open) + code.close;\n        // Close the styling before a linebreak and reopen\n        // after next line to fix a bleed issue on macOS\n        // https://github.com/chalk/chalk/pull/92\n        str = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n    }\n    // Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n    ansiStyles.dim.open = originalDim;\n    return str;\n}\nfunction chalkTag(chalk, strings) {\n    if (!Array.isArray(strings)) {\n        // If chalk() was called by itself or with a string,\n        // return the string itself as a string.\n        return [].slice.call(arguments, 1).join(\" \");\n    }\n    const args = [].slice.call(arguments, 2);\n    const parts = [\n        strings.raw[0]\n    ];\n    for(let i = 1; i < strings.length; i++){\n        parts.push(String(args[i - 1]).replace(/[{}\\\\]/g, \"\\\\$&\"));\n        parts.push(String(strings.raw[i]));\n    }\n    return template(chalk, parts.join(\"\"));\n}\nObject.defineProperties(Chalk.prototype, styles);\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports[\"default\"] = module.exports; // For TypeScript\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/chalk/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/chalk/templates.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/chalk/templates.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\nconst ESCAPES = new Map([\n    [\n        \"n\",\n        \"\\n\"\n    ],\n    [\n        \"r\",\n        \"\\r\"\n    ],\n    [\n        \"t\",\n        \"\t\"\n    ],\n    [\n        \"b\",\n        \"\\b\"\n    ],\n    [\n        \"f\",\n        \"\\f\"\n    ],\n    [\n        \"v\",\n        \"\\v\"\n    ],\n    [\n        \"0\",\n        \"\\x00\"\n    ],\n    [\n        \"\\\\\",\n        \"\\\\\"\n    ],\n    [\n        \"e\",\n        \"\\x1b\"\n    ],\n    [\n        \"a\",\n        \"\\x07\"\n    ]\n]);\nfunction unescape(c) {\n    if (c[0] === \"u\" && c.length === 5 || c[0] === \"x\" && c.length === 3) {\n        return String.fromCharCode(parseInt(c.slice(1), 16));\n    }\n    return ESCAPES.get(c) || c;\n}\nfunction parseArguments(name, args) {\n    const results = [];\n    const chunks = args.trim().split(/\\s*,\\s*/g);\n    let matches;\n    for (const chunk of chunks){\n        if (!isNaN(chunk)) {\n            results.push(Number(chunk));\n        } else if (matches = chunk.match(STRING_REGEX)) {\n            results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr)=>escape ? unescape(escape) : chr));\n        } else {\n            throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n        }\n    }\n    return results;\n}\nfunction parseStyle(style) {\n    STYLE_REGEX.lastIndex = 0;\n    const results = [];\n    let matches;\n    while((matches = STYLE_REGEX.exec(style)) !== null){\n        const name = matches[1];\n        if (matches[2]) {\n            const args = parseArguments(name, matches[2]);\n            results.push([\n                name\n            ].concat(args));\n        } else {\n            results.push([\n                name\n            ]);\n        }\n    }\n    return results;\n}\nfunction buildStyle(chalk, styles) {\n    const enabled = {};\n    for (const layer of styles){\n        for (const style of layer.styles){\n            enabled[style[0]] = layer.inverse ? null : style.slice(1);\n        }\n    }\n    let current = chalk;\n    for (const styleName of Object.keys(enabled)){\n        if (Array.isArray(enabled[styleName])) {\n            if (!(styleName in current)) {\n                throw new Error(`Unknown Chalk style: ${styleName}`);\n            }\n            if (enabled[styleName].length > 0) {\n                current = current[styleName].apply(current, enabled[styleName]);\n            } else {\n                current = current[styleName];\n            }\n        }\n    }\n    return current;\n}\nmodule.exports = (chalk, tmp)=>{\n    const styles = [];\n    const chunks = [];\n    let chunk = [];\n    // eslint-disable-next-line max-params\n    tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr)=>{\n        if (escapeChar) {\n            chunk.push(unescape(escapeChar));\n        } else if (style) {\n            const str = chunk.join(\"\");\n            chunk = [];\n            chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n            styles.push({\n                inverse,\n                styles: parseStyle(style)\n            });\n        } else if (close) {\n            if (styles.length === 0) {\n                throw new Error(\"Found extraneous } in Chalk template literal\");\n            }\n            chunks.push(buildStyle(chalk, styles)(chunk.join(\"\")));\n            chunk = [];\n            styles.pop();\n        } else {\n            chunk.push(chr);\n        }\n    });\n    chunks.push(chunk.join(\"\"));\n    if (styles.length > 0) {\n        const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? \"\" : \"s\"} (\\`}\\`)`;\n        throw new Error(errMsg);\n    }\n    return chunks.join(\"\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/chalk/templates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/conversions.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/color-convert/conversions.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* MIT license */ \nvar cssKeywords = __webpack_require__(/*! color-name */ \"(ssr)/./node_modules/@babel/highlight/node_modules/color-name/index.js\");\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords = {};\nfor(var key in cssKeywords){\n    if (cssKeywords.hasOwnProperty(key)) {\n        reverseKeywords[cssKeywords[key]] = key;\n    }\n}\nvar convert = module.exports = {\n    rgb: {\n        channels: 3,\n        labels: \"rgb\"\n    },\n    hsl: {\n        channels: 3,\n        labels: \"hsl\"\n    },\n    hsv: {\n        channels: 3,\n        labels: \"hsv\"\n    },\n    hwb: {\n        channels: 3,\n        labels: \"hwb\"\n    },\n    cmyk: {\n        channels: 4,\n        labels: \"cmyk\"\n    },\n    xyz: {\n        channels: 3,\n        labels: \"xyz\"\n    },\n    lab: {\n        channels: 3,\n        labels: \"lab\"\n    },\n    lch: {\n        channels: 3,\n        labels: \"lch\"\n    },\n    hex: {\n        channels: 1,\n        labels: [\n            \"hex\"\n        ]\n    },\n    keyword: {\n        channels: 1,\n        labels: [\n            \"keyword\"\n        ]\n    },\n    ansi16: {\n        channels: 1,\n        labels: [\n            \"ansi16\"\n        ]\n    },\n    ansi256: {\n        channels: 1,\n        labels: [\n            \"ansi256\"\n        ]\n    },\n    hcg: {\n        channels: 3,\n        labels: [\n            \"h\",\n            \"c\",\n            \"g\"\n        ]\n    },\n    apple: {\n        channels: 3,\n        labels: [\n            \"r16\",\n            \"g16\",\n            \"b16\"\n        ]\n    },\n    gray: {\n        channels: 1,\n        labels: [\n            \"gray\"\n        ]\n    }\n};\n// hide .channels and .labels properties\nfor(var model in convert){\n    if (convert.hasOwnProperty(model)) {\n        if (!(\"channels\" in convert[model])) {\n            throw new Error(\"missing channels property: \" + model);\n        }\n        if (!(\"labels\" in convert[model])) {\n            throw new Error(\"missing channel labels property: \" + model);\n        }\n        if (convert[model].labels.length !== convert[model].channels) {\n            throw new Error(\"channel and label counts mismatch: \" + model);\n        }\n        var channels = convert[model].channels;\n        var labels = convert[model].labels;\n        delete convert[model].channels;\n        delete convert[model].labels;\n        Object.defineProperty(convert[model], \"channels\", {\n            value: channels\n        });\n        Object.defineProperty(convert[model], \"labels\", {\n            value: labels\n        });\n    }\n}\nconvert.rgb.hsl = function(rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var h;\n    var s;\n    var l;\n    if (max === min) {\n        h = 0;\n    } else if (r === max) {\n        h = (g - b) / delta;\n    } else if (g === max) {\n        h = 2 + (b - r) / delta;\n    } else if (b === max) {\n        h = 4 + (r - g) / delta;\n    }\n    h = Math.min(h * 60, 360);\n    if (h < 0) {\n        h += 360;\n    }\n    l = (min + max) / 2;\n    if (max === min) {\n        s = 0;\n    } else if (l <= 0.5) {\n        s = delta / (max + min);\n    } else {\n        s = delta / (2 - max - min);\n    }\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n};\nconvert.rgb.hsv = function(rgb) {\n    var rdif;\n    var gdif;\n    var bdif;\n    var h;\n    var s;\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var v = Math.max(r, g, b);\n    var diff = v - Math.min(r, g, b);\n    var diffc = function(c) {\n        return (v - c) / 6 / diff + 1 / 2;\n    };\n    if (diff === 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rdif = diffc(r);\n        gdif = diffc(g);\n        bdif = diffc(b);\n        if (r === v) {\n            h = bdif - gdif;\n        } else if (g === v) {\n            h = 1 / 3 + rdif - bdif;\n        } else if (b === v) {\n            h = 2 / 3 + gdif - rdif;\n        }\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n};\nconvert.rgb.hwb = function(rgb) {\n    var r = rgb[0];\n    var g = rgb[1];\n    var b = rgb[2];\n    var h = convert.rgb.hsl(rgb)[0];\n    var w = 1 / 255 * Math.min(r, Math.min(g, b));\n    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [\n        h,\n        w * 100,\n        b * 100\n    ];\n};\nconvert.rgb.cmyk = function(rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var c;\n    var m;\n    var y;\n    var k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n};\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */ function comparativeDistance(x, y) {\n    return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);\n}\nconvert.rgb.keyword = function(rgb) {\n    var reversed = reverseKeywords[rgb];\n    if (reversed) {\n        return reversed;\n    }\n    var currentClosestDistance = Infinity;\n    var currentClosestKeyword;\n    for(var keyword in cssKeywords){\n        if (cssKeywords.hasOwnProperty(keyword)) {\n            var value = cssKeywords[keyword];\n            // Compute comparative distance\n            var distance = comparativeDistance(rgb, value);\n            // Check if its less, if so set as closest\n            if (distance < currentClosestDistance) {\n                currentClosestDistance = distance;\n                currentClosestKeyword = keyword;\n            }\n        }\n    }\n    return currentClosestKeyword;\n};\nconvert.keyword.rgb = function(keyword) {\n    return cssKeywords[keyword];\n};\nconvert.rgb.xyz = function(rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    // assume sRGB\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [\n        x * 100,\n        y * 100,\n        z * 100\n    ];\n};\nconvert.rgb.lab = function(rgb) {\n    var xyz = convert.rgb.xyz(rgb);\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var l;\n    var a;\n    var b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [\n        l,\n        a,\n        b\n    ];\n};\nconvert.hsl.rgb = function(hsl) {\n    var h = hsl[0] / 360;\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var t1;\n    var t2;\n    var t3;\n    var rgb;\n    var val;\n    if (s === 0) {\n        val = l * 255;\n        return [\n            val,\n            val,\n            val\n        ];\n    }\n    if (l < 0.5) {\n        t2 = l * (1 + s);\n    } else {\n        t2 = l + s - l * s;\n    }\n    t1 = 2 * l - t2;\n    rgb = [\n        0,\n        0,\n        0\n    ];\n    for(var i = 0; i < 3; i++){\n        t3 = h + 1 / 3 * -(i - 1);\n        if (t3 < 0) {\n            t3++;\n        }\n        if (t3 > 1) {\n            t3--;\n        }\n        if (6 * t3 < 1) {\n            val = t1 + (t2 - t1) * 6 * t3;\n        } else if (2 * t3 < 1) {\n            val = t2;\n        } else if (3 * t3 < 2) {\n            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        } else {\n            val = t1;\n        }\n        rgb[i] = val * 255;\n    }\n    return rgb;\n};\nconvert.hsl.hsv = function(hsl) {\n    var h = hsl[0];\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var smin = s;\n    var lmin = Math.max(l, 0.01);\n    var sv;\n    var v;\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    smin *= lmin <= 1 ? lmin : 2 - lmin;\n    v = (l + s) / 2;\n    sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n    return [\n        h,\n        sv * 100,\n        v * 100\n    ];\n};\nconvert.hsv.rgb = function(hsv) {\n    var h = hsv[0] / 60;\n    var s = hsv[1] / 100;\n    var v = hsv[2] / 100;\n    var hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h);\n    var p = 255 * v * (1 - s);\n    var q = 255 * v * (1 - s * f);\n    var t = 255 * v * (1 - s * (1 - f));\n    v *= 255;\n    switch(hi){\n        case 0:\n            return [\n                v,\n                t,\n                p\n            ];\n        case 1:\n            return [\n                q,\n                v,\n                p\n            ];\n        case 2:\n            return [\n                p,\n                v,\n                t\n            ];\n        case 3:\n            return [\n                p,\n                q,\n                v\n            ];\n        case 4:\n            return [\n                t,\n                p,\n                v\n            ];\n        case 5:\n            return [\n                v,\n                p,\n                q\n            ];\n    }\n};\nconvert.hsv.hsl = function(hsv) {\n    var h = hsv[0];\n    var s = hsv[1] / 100;\n    var v = hsv[2] / 100;\n    var vmin = Math.max(v, 0.01);\n    var lmin;\n    var sl;\n    var l;\n    l = (2 - s) * v;\n    lmin = (2 - s) * vmin;\n    sl = s * vmin;\n    sl /= lmin <= 1 ? lmin : 2 - lmin;\n    sl = sl || 0;\n    l /= 2;\n    return [\n        h,\n        sl * 100,\n        l * 100\n    ];\n};\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function(hwb) {\n    var h = hwb[0] / 360;\n    var wh = hwb[1] / 100;\n    var bl = hwb[2] / 100;\n    var ratio = wh + bl;\n    var i;\n    var v;\n    var f;\n    var n;\n    // wh + bl cant be > 1\n    if (ratio > 1) {\n        wh /= ratio;\n        bl /= ratio;\n    }\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n    if ((i & 0x01) !== 0) {\n        f = 1 - f;\n    }\n    n = wh + f * (v - wh); // linear interpolation\n    var r;\n    var g;\n    var b;\n    switch(i){\n        default:\n        case 6:\n        case 0:\n            r = v;\n            g = n;\n            b = wh;\n            break;\n        case 1:\n            r = n;\n            g = v;\n            b = wh;\n            break;\n        case 2:\n            r = wh;\n            g = v;\n            b = n;\n            break;\n        case 3:\n            r = wh;\n            g = n;\n            b = v;\n            break;\n        case 4:\n            r = n;\n            g = wh;\n            b = v;\n            break;\n        case 5:\n            r = v;\n            g = wh;\n            b = n;\n            break;\n    }\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n};\nconvert.cmyk.rgb = function(cmyk) {\n    var c = cmyk[0] / 100;\n    var m = cmyk[1] / 100;\n    var y = cmyk[2] / 100;\n    var k = cmyk[3] / 100;\n    var r;\n    var g;\n    var b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n};\nconvert.xyz.rgb = function(xyz) {\n    var x = xyz[0] / 100;\n    var y = xyz[1] / 100;\n    var z = xyz[2] / 100;\n    var r;\n    var g;\n    var b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570;\n    // assume sRGB\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n};\nconvert.xyz.lab = function(xyz) {\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var l;\n    var a;\n    var b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [\n        l,\n        a,\n        b\n    ];\n};\nconvert.lab.xyz = function(lab) {\n    var l = lab[0];\n    var a = lab[1];\n    var b = lab[2];\n    var x;\n    var y;\n    var z;\n    y = (l + 16) / 116;\n    x = a / 500 + y;\n    z = y - b / 200;\n    var y2 = Math.pow(y, 3);\n    var x2 = Math.pow(x, 3);\n    var z2 = Math.pow(z, 3);\n    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n    x *= 95.047;\n    y *= 100;\n    z *= 108.883;\n    return [\n        x,\n        y,\n        z\n    ];\n};\nconvert.lab.lch = function(lab) {\n    var l = lab[0];\n    var a = lab[1];\n    var b = lab[2];\n    var hr;\n    var h;\n    var c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n    if (h < 0) {\n        h += 360;\n    }\n    c = Math.sqrt(a * a + b * b);\n    return [\n        l,\n        c,\n        h\n    ];\n};\nconvert.lch.lab = function(lch) {\n    var l = lch[0];\n    var c = lch[1];\n    var h = lch[2];\n    var a;\n    var b;\n    var hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [\n        l,\n        a,\n        b\n    ];\n};\nconvert.rgb.ansi16 = function(args) {\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n    value = Math.round(value / 50);\n    if (value === 0) {\n        return 30;\n    }\n    var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n    if (value === 2) {\n        ansi += 60;\n    }\n    return ansi;\n};\nconvert.hsv.ansi16 = function(args) {\n    // optimization here; we already know the value and don't need to get\n    // it converted for us.\n    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\nconvert.rgb.ansi256 = function(args) {\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    // we use the extended greyscale palette here, with the exception of\n    // black and white. normal palette only has 4 greyscale shades.\n    if (r === g && g === b) {\n        if (r < 8) {\n            return 16;\n        }\n        if (r > 248) {\n            return 231;\n        }\n        return Math.round((r - 8) / 247 * 24) + 232;\n    }\n    var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n    return ansi;\n};\nconvert.ansi16.rgb = function(args) {\n    var color = args % 10;\n    // handle greyscale\n    if (color === 0 || color === 7) {\n        if (args > 50) {\n            color += 3.5;\n        }\n        color = color / 10.5 * 255;\n        return [\n            color,\n            color,\n            color\n        ];\n    }\n    var mult = (~~(args > 50) + 1) * 0.5;\n    var r = (color & 1) * mult * 255;\n    var g = (color >> 1 & 1) * mult * 255;\n    var b = (color >> 2 & 1) * mult * 255;\n    return [\n        r,\n        g,\n        b\n    ];\n};\nconvert.ansi256.rgb = function(args) {\n    // handle greyscale\n    if (args >= 232) {\n        var c = (args - 232) * 10 + 8;\n        return [\n            c,\n            c,\n            c\n        ];\n    }\n    args -= 16;\n    var rem;\n    var r = Math.floor(args / 36) / 5 * 255;\n    var g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n    var b = rem % 6 / 5 * 255;\n    return [\n        r,\n        g,\n        b\n    ];\n};\nconvert.rgb.hex = function(args) {\n    var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n    var string = integer.toString(16).toUpperCase();\n    return \"000000\".substring(string.length) + string;\n};\nconvert.hex.rgb = function(args) {\n    var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n    if (!match) {\n        return [\n            0,\n            0,\n            0\n        ];\n    }\n    var colorString = match[0];\n    if (match[0].length === 3) {\n        colorString = colorString.split(\"\").map(function(char) {\n            return char + char;\n        }).join(\"\");\n    }\n    var integer = parseInt(colorString, 16);\n    var r = integer >> 16 & 0xFF;\n    var g = integer >> 8 & 0xFF;\n    var b = integer & 0xFF;\n    return [\n        r,\n        g,\n        b\n    ];\n};\nconvert.rgb.hcg = function(rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var max = Math.max(Math.max(r, g), b);\n    var min = Math.min(Math.min(r, g), b);\n    var chroma = max - min;\n    var grayscale;\n    var hue;\n    if (chroma < 1) {\n        grayscale = min / (1 - chroma);\n    } else {\n        grayscale = 0;\n    }\n    if (chroma <= 0) {\n        hue = 0;\n    } else if (max === r) {\n        hue = (g - b) / chroma % 6;\n    } else if (max === g) {\n        hue = 2 + (b - r) / chroma;\n    } else {\n        hue = 4 + (r - g) / chroma + 4;\n    }\n    hue /= 6;\n    hue %= 1;\n    return [\n        hue * 360,\n        chroma * 100,\n        grayscale * 100\n    ];\n};\nconvert.hsl.hcg = function(hsl) {\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var c = 1;\n    var f = 0;\n    if (l < 0.5) {\n        c = 2.0 * s * l;\n    } else {\n        c = 2.0 * s * (1.0 - l);\n    }\n    if (c < 1.0) {\n        f = (l - 0.5 * c) / (1.0 - c);\n    }\n    return [\n        hsl[0],\n        c * 100,\n        f * 100\n    ];\n};\nconvert.hsv.hcg = function(hsv) {\n    var s = hsv[1] / 100;\n    var v = hsv[2] / 100;\n    var c = s * v;\n    var f = 0;\n    if (c < 1.0) {\n        f = (v - c) / (1 - c);\n    }\n    return [\n        hsv[0],\n        c * 100,\n        f * 100\n    ];\n};\nconvert.hcg.rgb = function(hcg) {\n    var h = hcg[0] / 360;\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    if (c === 0.0) {\n        return [\n            g * 255,\n            g * 255,\n            g * 255\n        ];\n    }\n    var pure = [\n        0,\n        0,\n        0\n    ];\n    var hi = h % 1 * 6;\n    var v = hi % 1;\n    var w = 1 - v;\n    var mg = 0;\n    switch(Math.floor(hi)){\n        case 0:\n            pure[0] = 1;\n            pure[1] = v;\n            pure[2] = 0;\n            break;\n        case 1:\n            pure[0] = w;\n            pure[1] = 1;\n            pure[2] = 0;\n            break;\n        case 2:\n            pure[0] = 0;\n            pure[1] = 1;\n            pure[2] = v;\n            break;\n        case 3:\n            pure[0] = 0;\n            pure[1] = w;\n            pure[2] = 1;\n            break;\n        case 4:\n            pure[0] = v;\n            pure[1] = 0;\n            pure[2] = 1;\n            break;\n        default:\n            pure[0] = 1;\n            pure[1] = 0;\n            pure[2] = w;\n    }\n    mg = (1.0 - c) * g;\n    return [\n        (c * pure[0] + mg) * 255,\n        (c * pure[1] + mg) * 255,\n        (c * pure[2] + mg) * 255\n    ];\n};\nconvert.hcg.hsv = function(hcg) {\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    var v = c + g * (1.0 - c);\n    var f = 0;\n    if (v > 0.0) {\n        f = c / v;\n    }\n    return [\n        hcg[0],\n        f * 100,\n        v * 100\n    ];\n};\nconvert.hcg.hsl = function(hcg) {\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    var l = g * (1.0 - c) + 0.5 * c;\n    var s = 0;\n    if (l > 0.0 && l < 0.5) {\n        s = c / (2 * l);\n    } else if (l >= 0.5 && l < 1.0) {\n        s = c / (2 * (1 - l));\n    }\n    return [\n        hcg[0],\n        s * 100,\n        l * 100\n    ];\n};\nconvert.hcg.hwb = function(hcg) {\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    var v = c + g * (1.0 - c);\n    return [\n        hcg[0],\n        (v - c) * 100,\n        (1 - v) * 100\n    ];\n};\nconvert.hwb.hcg = function(hwb) {\n    var w = hwb[1] / 100;\n    var b = hwb[2] / 100;\n    var v = 1 - b;\n    var c = v - w;\n    var g = 0;\n    if (c < 1) {\n        g = (v - c) / (1 - c);\n    }\n    return [\n        hwb[0],\n        c * 100,\n        g * 100\n    ];\n};\nconvert.apple.rgb = function(apple) {\n    return [\n        apple[0] / 65535 * 255,\n        apple[1] / 65535 * 255,\n        apple[2] / 65535 * 255\n    ];\n};\nconvert.rgb.apple = function(rgb) {\n    return [\n        rgb[0] / 255 * 65535,\n        rgb[1] / 255 * 65535,\n        rgb[2] / 255 * 65535\n    ];\n};\nconvert.gray.rgb = function(args) {\n    return [\n        args[0] / 100 * 255,\n        args[0] / 100 * 255,\n        args[0] / 100 * 255\n    ];\n};\nconvert.gray.hsl = convert.gray.hsv = function(args) {\n    return [\n        0,\n        0,\n        args[0]\n    ];\n};\nconvert.gray.hwb = function(gray) {\n    return [\n        0,\n        100,\n        gray[0]\n    ];\n};\nconvert.gray.cmyk = function(gray) {\n    return [\n        0,\n        0,\n        0,\n        gray[0]\n    ];\n};\nconvert.gray.lab = function(gray) {\n    return [\n        gray[0],\n        0,\n        0\n    ];\n};\nconvert.gray.hex = function(gray) {\n    var val = Math.round(gray[0] / 100 * 255) & 0xFF;\n    var integer = (val << 16) + (val << 8) + val;\n    var string = integer.toString(16).toUpperCase();\n    return \"000000\".substring(string.length) + string;\n};\nconvert.rgb.gray = function(rgb) {\n    var val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n    return [\n        val / 255 * 100\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/conversions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/color-convert/index.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar conversions = __webpack_require__(/*! ./conversions */ \"(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/conversions.js\");\nvar route = __webpack_require__(/*! ./route */ \"(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/route.js\");\nvar convert = {};\nvar models = Object.keys(conversions);\nfunction wrapRaw(fn) {\n    var wrappedFn = function(args) {\n        if (args === undefined || args === null) {\n            return args;\n        }\n        if (arguments.length > 1) {\n            args = Array.prototype.slice.call(arguments);\n        }\n        return fn(args);\n    };\n    // preserve .conversion property if there is one\n    if (\"conversion\" in fn) {\n        wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n}\nfunction wrapRounded(fn) {\n    var wrappedFn = function(args) {\n        if (args === undefined || args === null) {\n            return args;\n        }\n        if (arguments.length > 1) {\n            args = Array.prototype.slice.call(arguments);\n        }\n        var result = fn(args);\n        // we're assuming the result is an array here.\n        // see notice in conversions.js; don't use box types\n        // in conversion functions.\n        if (typeof result === \"object\") {\n            for(var len = result.length, i = 0; i < len; i++){\n                result[i] = Math.round(result[i]);\n            }\n        }\n        return result;\n    };\n    // preserve .conversion property if there is one\n    if (\"conversion\" in fn) {\n        wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n}\nmodels.forEach(function(fromModel) {\n    convert[fromModel] = {};\n    Object.defineProperty(convert[fromModel], \"channels\", {\n        value: conversions[fromModel].channels\n    });\n    Object.defineProperty(convert[fromModel], \"labels\", {\n        value: conversions[fromModel].labels\n    });\n    var routes = route(fromModel);\n    var routeModels = Object.keys(routes);\n    routeModels.forEach(function(toModel) {\n        var fn = routes[toModel];\n        convert[fromModel][toModel] = wrapRounded(fn);\n        convert[fromModel][toModel].raw = wrapRaw(fn);\n    });\n});\nmodule.exports = convert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hpZ2hsaWdodC9ub2RlX21vZHVsZXMvY29sb3ItY29udmVydC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFDMUIsSUFBSUMsUUFBUUQsbUJBQU9BLENBQUM7QUFFcEIsSUFBSUUsVUFBVSxDQUFDO0FBRWYsSUFBSUMsU0FBU0MsT0FBT0MsSUFBSSxDQUFDTjtBQUV6QixTQUFTTyxRQUFRQyxFQUFFO0lBQ2xCLElBQUlDLFlBQVksU0FBVUMsSUFBSTtRQUM3QixJQUFJQSxTQUFTQyxhQUFhRCxTQUFTLE1BQU07WUFDeEMsT0FBT0E7UUFDUjtRQUVBLElBQUlFLFVBQVVDLE1BQU0sR0FBRyxHQUFHO1lBQ3pCSCxPQUFPSSxNQUFNQyxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsSUFBSSxDQUFDTDtRQUNuQztRQUVBLE9BQU9KLEdBQUdFO0lBQ1g7SUFFQSxnREFBZ0Q7SUFDaEQsSUFBSSxnQkFBZ0JGLElBQUk7UUFDdkJDLFVBQVVTLFVBQVUsR0FBR1YsR0FBR1UsVUFBVTtJQUNyQztJQUVBLE9BQU9UO0FBQ1I7QUFFQSxTQUFTVSxZQUFZWCxFQUFFO0lBQ3RCLElBQUlDLFlBQVksU0FBVUMsSUFBSTtRQUM3QixJQUFJQSxTQUFTQyxhQUFhRCxTQUFTLE1BQU07WUFDeEMsT0FBT0E7UUFDUjtRQUVBLElBQUlFLFVBQVVDLE1BQU0sR0FBRyxHQUFHO1lBQ3pCSCxPQUFPSSxNQUFNQyxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsSUFBSSxDQUFDTDtRQUNuQztRQUVBLElBQUlRLFNBQVNaLEdBQUdFO1FBRWhCLDhDQUE4QztRQUM5QyxvREFBb0Q7UUFDcEQsMkJBQTJCO1FBQzNCLElBQUksT0FBT1UsV0FBVyxVQUFVO1lBQy9CLElBQUssSUFBSUMsTUFBTUQsT0FBT1AsTUFBTSxFQUFFUyxJQUFJLEdBQUdBLElBQUlELEtBQUtDLElBQUs7Z0JBQ2xERixNQUFNLENBQUNFLEVBQUUsR0FBR0MsS0FBS0MsS0FBSyxDQUFDSixNQUFNLENBQUNFLEVBQUU7WUFDakM7UUFDRDtRQUVBLE9BQU9GO0lBQ1I7SUFFQSxnREFBZ0Q7SUFDaEQsSUFBSSxnQkFBZ0JaLElBQUk7UUFDdkJDLFVBQVVTLFVBQVUsR0FBR1YsR0FBR1UsVUFBVTtJQUNyQztJQUVBLE9BQU9UO0FBQ1I7QUFFQUwsT0FBT3FCLE9BQU8sQ0FBQyxTQUFVQyxTQUFTO0lBQ2pDdkIsT0FBTyxDQUFDdUIsVUFBVSxHQUFHLENBQUM7SUFFdEJyQixPQUFPc0IsY0FBYyxDQUFDeEIsT0FBTyxDQUFDdUIsVUFBVSxFQUFFLFlBQVk7UUFBQ0UsT0FBTzVCLFdBQVcsQ0FBQzBCLFVBQVUsQ0FBQ0csUUFBUTtJQUFBO0lBQzdGeEIsT0FBT3NCLGNBQWMsQ0FBQ3hCLE9BQU8sQ0FBQ3VCLFVBQVUsRUFBRSxVQUFVO1FBQUNFLE9BQU81QixXQUFXLENBQUMwQixVQUFVLENBQUNJLE1BQU07SUFBQTtJQUV6RixJQUFJQyxTQUFTN0IsTUFBTXdCO0lBQ25CLElBQUlNLGNBQWMzQixPQUFPQyxJQUFJLENBQUN5QjtJQUU5QkMsWUFBWVAsT0FBTyxDQUFDLFNBQVVRLE9BQU87UUFDcEMsSUFBSXpCLEtBQUt1QixNQUFNLENBQUNFLFFBQVE7UUFFeEI5QixPQUFPLENBQUN1QixVQUFVLENBQUNPLFFBQVEsR0FBR2QsWUFBWVg7UUFDMUNMLE9BQU8sQ0FBQ3VCLFVBQVUsQ0FBQ08sUUFBUSxDQUFDQyxHQUFHLEdBQUczQixRQUFRQztJQUMzQztBQUNEO0FBRUEyQixPQUFPQyxPQUFPLEdBQUdqQyIsInNvdXJjZXMiOlsid2VicGFjazovL2lwdC13My8uL25vZGVfbW9kdWxlcy9AYmFiZWwvaGlnaGxpZ2h0L25vZGVfbW9kdWxlcy9jb2xvci1jb252ZXJ0L2luZGV4LmpzPzc3MzMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbnZlcnNpb25zID0gcmVxdWlyZSgnLi9jb252ZXJzaW9ucycpO1xudmFyIHJvdXRlID0gcmVxdWlyZSgnLi9yb3V0ZScpO1xuXG52YXIgY29udmVydCA9IHt9O1xuXG52YXIgbW9kZWxzID0gT2JqZWN0LmtleXMoY29udmVyc2lvbnMpO1xuXG5mdW5jdGlvbiB3cmFwUmF3KGZuKSB7XG5cdHZhciB3cmFwcGVkRm4gPSBmdW5jdGlvbiAoYXJncykge1xuXHRcdGlmIChhcmdzID09PSB1bmRlZmluZWQgfHwgYXJncyA9PT0gbnVsbCkge1xuXHRcdFx0cmV0dXJuIGFyZ3M7XG5cdFx0fVxuXG5cdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG5cdFx0XHRhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZm4oYXJncyk7XG5cdH07XG5cblx0Ly8gcHJlc2VydmUgLmNvbnZlcnNpb24gcHJvcGVydHkgaWYgdGhlcmUgaXMgb25lXG5cdGlmICgnY29udmVyc2lvbicgaW4gZm4pIHtcblx0XHR3cmFwcGVkRm4uY29udmVyc2lvbiA9IGZuLmNvbnZlcnNpb247XG5cdH1cblxuXHRyZXR1cm4gd3JhcHBlZEZuO1xufVxuXG5mdW5jdGlvbiB3cmFwUm91bmRlZChmbikge1xuXHR2YXIgd3JhcHBlZEZuID0gZnVuY3Rpb24gKGFyZ3MpIHtcblx0XHRpZiAoYXJncyA9PT0gdW5kZWZpbmVkIHx8IGFyZ3MgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBhcmdzO1xuXHRcdH1cblxuXHRcdGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuXHRcdFx0YXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cdFx0fVxuXG5cdFx0dmFyIHJlc3VsdCA9IGZuKGFyZ3MpO1xuXG5cdFx0Ly8gd2UncmUgYXNzdW1pbmcgdGhlIHJlc3VsdCBpcyBhbiBhcnJheSBoZXJlLlxuXHRcdC8vIHNlZSBub3RpY2UgaW4gY29udmVyc2lvbnMuanM7IGRvbid0IHVzZSBib3ggdHlwZXNcblx0XHQvLyBpbiBjb252ZXJzaW9uIGZ1bmN0aW9ucy5cblx0XHRpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ29iamVjdCcpIHtcblx0XHRcdGZvciAodmFyIGxlbiA9IHJlc3VsdC5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdFx0cmVzdWx0W2ldID0gTWF0aC5yb3VuZChyZXN1bHRbaV0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXN1bHQ7XG5cdH07XG5cblx0Ly8gcHJlc2VydmUgLmNvbnZlcnNpb24gcHJvcGVydHkgaWYgdGhlcmUgaXMgb25lXG5cdGlmICgnY29udmVyc2lvbicgaW4gZm4pIHtcblx0XHR3cmFwcGVkRm4uY29udmVyc2lvbiA9IGZuLmNvbnZlcnNpb247XG5cdH1cblxuXHRyZXR1cm4gd3JhcHBlZEZuO1xufVxuXG5tb2RlbHMuZm9yRWFjaChmdW5jdGlvbiAoZnJvbU1vZGVsKSB7XG5cdGNvbnZlcnRbZnJvbU1vZGVsXSA9IHt9O1xuXG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb252ZXJ0W2Zyb21Nb2RlbF0sICdjaGFubmVscycsIHt2YWx1ZTogY29udmVyc2lvbnNbZnJvbU1vZGVsXS5jaGFubmVsc30pO1xuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udmVydFtmcm9tTW9kZWxdLCAnbGFiZWxzJywge3ZhbHVlOiBjb252ZXJzaW9uc1tmcm9tTW9kZWxdLmxhYmVsc30pO1xuXG5cdHZhciByb3V0ZXMgPSByb3V0ZShmcm9tTW9kZWwpO1xuXHR2YXIgcm91dGVNb2RlbHMgPSBPYmplY3Qua2V5cyhyb3V0ZXMpO1xuXG5cdHJvdXRlTW9kZWxzLmZvckVhY2goZnVuY3Rpb24gKHRvTW9kZWwpIHtcblx0XHR2YXIgZm4gPSByb3V0ZXNbdG9Nb2RlbF07XG5cblx0XHRjb252ZXJ0W2Zyb21Nb2RlbF1bdG9Nb2RlbF0gPSB3cmFwUm91bmRlZChmbik7XG5cdFx0Y29udmVydFtmcm9tTW9kZWxdW3RvTW9kZWxdLnJhdyA9IHdyYXBSYXcoZm4pO1xuXHR9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnZlcnQ7XG4iXSwibmFtZXMiOlsiY29udmVyc2lvbnMiLCJyZXF1aXJlIiwicm91dGUiLCJjb252ZXJ0IiwibW9kZWxzIiwiT2JqZWN0Iiwia2V5cyIsIndyYXBSYXciLCJmbiIsIndyYXBwZWRGbiIsImFyZ3MiLCJ1bmRlZmluZWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImNvbnZlcnNpb24iLCJ3cmFwUm91bmRlZCIsInJlc3VsdCIsImxlbiIsImkiLCJNYXRoIiwicm91bmQiLCJmb3JFYWNoIiwiZnJvbU1vZGVsIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImNoYW5uZWxzIiwibGFiZWxzIiwicm91dGVzIiwicm91dGVNb2RlbHMiLCJ0b01vZGVsIiwicmF3IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/route.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/color-convert/route.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar conversions = __webpack_require__(/*! ./conversions */ \"(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/conversions.js\");\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/ function buildGraph() {\n    var graph = {};\n    // https://jsperf.com/object-keys-vs-for-in-with-closure/3\n    var models = Object.keys(conversions);\n    for(var len = models.length, i = 0; i < len; i++){\n        graph[models[i]] = {\n            // http://jsperf.com/1-vs-infinity\n            // micro-opt, but this is simple.\n            distance: -1,\n            parent: null\n        };\n    }\n    return graph;\n}\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n    var graph = buildGraph();\n    var queue = [\n        fromModel\n    ]; // unshift -> queue -> pop\n    graph[fromModel].distance = 0;\n    while(queue.length){\n        var current = queue.pop();\n        var adjacents = Object.keys(conversions[current]);\n        for(var len = adjacents.length, i = 0; i < len; i++){\n            var adjacent = adjacents[i];\n            var node = graph[adjacent];\n            if (node.distance === -1) {\n                node.distance = graph[current].distance + 1;\n                node.parent = current;\n                queue.unshift(adjacent);\n            }\n        }\n    }\n    return graph;\n}\nfunction link(from, to) {\n    return function(args) {\n        return to(from(args));\n    };\n}\nfunction wrapConversion(toModel, graph) {\n    var path = [\n        graph[toModel].parent,\n        toModel\n    ];\n    var fn = conversions[graph[toModel].parent][toModel];\n    var cur = graph[toModel].parent;\n    while(graph[cur].parent){\n        path.unshift(graph[cur].parent);\n        fn = link(conversions[graph[cur].parent][cur], fn);\n        cur = graph[cur].parent;\n    }\n    fn.conversion = path;\n    return fn;\n}\nmodule.exports = function(fromModel) {\n    var graph = deriveBFS(fromModel);\n    var conversion = {};\n    var models = Object.keys(graph);\n    for(var len = models.length, i = 0; i < len; i++){\n        var toModel = models[i];\n        var node = graph[toModel];\n        if (node.parent === null) {\n            continue;\n        }\n        conversion[toModel] = wrapConversion(toModel, graph);\n    }\n    return conversion;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hpZ2hsaWdodC9ub2RlX21vZHVsZXMvY29sb3ItY29udmVydC9yb3V0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUI7Ozs7Ozs7OztBQVNBLEdBRUEsU0FBU0M7SUFDUixJQUFJQyxRQUFRLENBQUM7SUFDYiwwREFBMEQ7SUFDMUQsSUFBSUMsU0FBU0MsT0FBT0MsSUFBSSxDQUFDTjtJQUV6QixJQUFLLElBQUlPLE1BQU1ILE9BQU9JLE1BQU0sRUFBRUMsSUFBSSxHQUFHQSxJQUFJRixLQUFLRSxJQUFLO1FBQ2xETixLQUFLLENBQUNDLE1BQU0sQ0FBQ0ssRUFBRSxDQUFDLEdBQUc7WUFDbEIsa0NBQWtDO1lBQ2xDLGlDQUFpQztZQUNqQ0MsVUFBVSxDQUFDO1lBQ1hDLFFBQVE7UUFDVDtJQUNEO0lBRUEsT0FBT1I7QUFDUjtBQUVBLHFEQUFxRDtBQUNyRCxTQUFTUyxVQUFVQyxTQUFTO0lBQzNCLElBQUlWLFFBQVFEO0lBQ1osSUFBSVksUUFBUTtRQUFDRDtLQUFVLEVBQUUsMEJBQTBCO0lBRW5EVixLQUFLLENBQUNVLFVBQVUsQ0FBQ0gsUUFBUSxHQUFHO0lBRTVCLE1BQU9JLE1BQU1OLE1BQU0sQ0FBRTtRQUNwQixJQUFJTyxVQUFVRCxNQUFNRSxHQUFHO1FBQ3ZCLElBQUlDLFlBQVlaLE9BQU9DLElBQUksQ0FBQ04sV0FBVyxDQUFDZSxRQUFRO1FBRWhELElBQUssSUFBSVIsTUFBTVUsVUFBVVQsTUFBTSxFQUFFQyxJQUFJLEdBQUdBLElBQUlGLEtBQUtFLElBQUs7WUFDckQsSUFBSVMsV0FBV0QsU0FBUyxDQUFDUixFQUFFO1lBQzNCLElBQUlVLE9BQU9oQixLQUFLLENBQUNlLFNBQVM7WUFFMUIsSUFBSUMsS0FBS1QsUUFBUSxLQUFLLENBQUMsR0FBRztnQkFDekJTLEtBQUtULFFBQVEsR0FBR1AsS0FBSyxDQUFDWSxRQUFRLENBQUNMLFFBQVEsR0FBRztnQkFDMUNTLEtBQUtSLE1BQU0sR0FBR0k7Z0JBQ2RELE1BQU1NLE9BQU8sQ0FBQ0Y7WUFDZjtRQUNEO0lBQ0Q7SUFFQSxPQUFPZjtBQUNSO0FBRUEsU0FBU2tCLEtBQUtDLElBQUksRUFBRUMsRUFBRTtJQUNyQixPQUFPLFNBQVVDLElBQUk7UUFDcEIsT0FBT0QsR0FBR0QsS0FBS0U7SUFDaEI7QUFDRDtBQUVBLFNBQVNDLGVBQWVDLE9BQU8sRUFBRXZCLEtBQUs7SUFDckMsSUFBSXdCLE9BQU87UUFBQ3hCLEtBQUssQ0FBQ3VCLFFBQVEsQ0FBQ2YsTUFBTTtRQUFFZTtLQUFRO0lBQzNDLElBQUlFLEtBQUs1QixXQUFXLENBQUNHLEtBQUssQ0FBQ3VCLFFBQVEsQ0FBQ2YsTUFBTSxDQUFDLENBQUNlLFFBQVE7SUFFcEQsSUFBSUcsTUFBTTFCLEtBQUssQ0FBQ3VCLFFBQVEsQ0FBQ2YsTUFBTTtJQUMvQixNQUFPUixLQUFLLENBQUMwQixJQUFJLENBQUNsQixNQUFNLENBQUU7UUFDekJnQixLQUFLUCxPQUFPLENBQUNqQixLQUFLLENBQUMwQixJQUFJLENBQUNsQixNQUFNO1FBQzlCaUIsS0FBS1AsS0FBS3JCLFdBQVcsQ0FBQ0csS0FBSyxDQUFDMEIsSUFBSSxDQUFDbEIsTUFBTSxDQUFDLENBQUNrQixJQUFJLEVBQUVEO1FBQy9DQyxNQUFNMUIsS0FBSyxDQUFDMEIsSUFBSSxDQUFDbEIsTUFBTTtJQUN4QjtJQUVBaUIsR0FBR0UsVUFBVSxHQUFHSDtJQUNoQixPQUFPQztBQUNSO0FBRUFHLE9BQU9DLE9BQU8sR0FBRyxTQUFVbkIsU0FBUztJQUNuQyxJQUFJVixRQUFRUyxVQUFVQztJQUN0QixJQUFJaUIsYUFBYSxDQUFDO0lBRWxCLElBQUkxQixTQUFTQyxPQUFPQyxJQUFJLENBQUNIO0lBQ3pCLElBQUssSUFBSUksTUFBTUgsT0FBT0ksTUFBTSxFQUFFQyxJQUFJLEdBQUdBLElBQUlGLEtBQUtFLElBQUs7UUFDbEQsSUFBSWlCLFVBQVV0QixNQUFNLENBQUNLLEVBQUU7UUFDdkIsSUFBSVUsT0FBT2hCLEtBQUssQ0FBQ3VCLFFBQVE7UUFFekIsSUFBSVAsS0FBS1IsTUFBTSxLQUFLLE1BQU07WUFFekI7UUFDRDtRQUVBbUIsVUFBVSxDQUFDSixRQUFRLEdBQUdELGVBQWVDLFNBQVN2QjtJQUMvQztJQUVBLE9BQU8yQjtBQUNSIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9oaWdobGlnaHQvbm9kZV9tb2R1bGVzL2NvbG9yLWNvbnZlcnQvcm91dGUuanM/ZjQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29udmVyc2lvbnMgPSByZXF1aXJlKCcuL2NvbnZlcnNpb25zJyk7XG5cbi8qXG5cdHRoaXMgZnVuY3Rpb24gcm91dGVzIGEgbW9kZWwgdG8gYWxsIG90aGVyIG1vZGVscy5cblxuXHRhbGwgZnVuY3Rpb25zIHRoYXQgYXJlIHJvdXRlZCBoYXZlIGEgcHJvcGVydHkgYC5jb252ZXJzaW9uYCBhdHRhY2hlZFxuXHR0byB0aGUgcmV0dXJuZWQgc3ludGhldGljIGZ1bmN0aW9uLiBUaGlzIHByb3BlcnR5IGlzIGFuIGFycmF5XG5cdG9mIHN0cmluZ3MsIGVhY2ggd2l0aCB0aGUgc3RlcHMgaW4gYmV0d2VlbiB0aGUgJ2Zyb20nIGFuZCAndG8nXG5cdGNvbG9yIG1vZGVscyAoaW5jbHVzaXZlKS5cblxuXHRjb252ZXJzaW9ucyB0aGF0IGFyZSBub3QgcG9zc2libGUgc2ltcGx5IGFyZSBub3QgaW5jbHVkZWQuXG4qL1xuXG5mdW5jdGlvbiBidWlsZEdyYXBoKCkge1xuXHR2YXIgZ3JhcGggPSB7fTtcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL29iamVjdC1rZXlzLXZzLWZvci1pbi13aXRoLWNsb3N1cmUvM1xuXHR2YXIgbW9kZWxzID0gT2JqZWN0LmtleXMoY29udmVyc2lvbnMpO1xuXG5cdGZvciAodmFyIGxlbiA9IG1vZGVscy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRncmFwaFttb2RlbHNbaV1dID0ge1xuXHRcdFx0Ly8gaHR0cDovL2pzcGVyZi5jb20vMS12cy1pbmZpbml0eVxuXHRcdFx0Ly8gbWljcm8tb3B0LCBidXQgdGhpcyBpcyBzaW1wbGUuXG5cdFx0XHRkaXN0YW5jZTogLTEsXG5cdFx0XHRwYXJlbnQ6IG51bGxcblx0XHR9O1xuXHR9XG5cblx0cmV0dXJuIGdyYXBoO1xufVxuXG4vLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CcmVhZHRoLWZpcnN0X3NlYXJjaFxuZnVuY3Rpb24gZGVyaXZlQkZTKGZyb21Nb2RlbCkge1xuXHR2YXIgZ3JhcGggPSBidWlsZEdyYXBoKCk7XG5cdHZhciBxdWV1ZSA9IFtmcm9tTW9kZWxdOyAvLyB1bnNoaWZ0IC0+IHF1ZXVlIC0+IHBvcFxuXG5cdGdyYXBoW2Zyb21Nb2RlbF0uZGlzdGFuY2UgPSAwO1xuXG5cdHdoaWxlIChxdWV1ZS5sZW5ndGgpIHtcblx0XHR2YXIgY3VycmVudCA9IHF1ZXVlLnBvcCgpO1xuXHRcdHZhciBhZGphY2VudHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9uc1tjdXJyZW50XSk7XG5cblx0XHRmb3IgKHZhciBsZW4gPSBhZGphY2VudHMubGVuZ3RoLCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHR2YXIgYWRqYWNlbnQgPSBhZGphY2VudHNbaV07XG5cdFx0XHR2YXIgbm9kZSA9IGdyYXBoW2FkamFjZW50XTtcblxuXHRcdFx0aWYgKG5vZGUuZGlzdGFuY2UgPT09IC0xKSB7XG5cdFx0XHRcdG5vZGUuZGlzdGFuY2UgPSBncmFwaFtjdXJyZW50XS5kaXN0YW5jZSArIDE7XG5cdFx0XHRcdG5vZGUucGFyZW50ID0gY3VycmVudDtcblx0XHRcdFx0cXVldWUudW5zaGlmdChhZGphY2VudCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGdyYXBoO1xufVxuXG5mdW5jdGlvbiBsaW5rKGZyb20sIHRvKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoYXJncykge1xuXHRcdHJldHVybiB0byhmcm9tKGFyZ3MpKTtcblx0fTtcbn1cblxuZnVuY3Rpb24gd3JhcENvbnZlcnNpb24odG9Nb2RlbCwgZ3JhcGgpIHtcblx0dmFyIHBhdGggPSBbZ3JhcGhbdG9Nb2RlbF0ucGFyZW50LCB0b01vZGVsXTtcblx0dmFyIGZuID0gY29udmVyc2lvbnNbZ3JhcGhbdG9Nb2RlbF0ucGFyZW50XVt0b01vZGVsXTtcblxuXHR2YXIgY3VyID0gZ3JhcGhbdG9Nb2RlbF0ucGFyZW50O1xuXHR3aGlsZSAoZ3JhcGhbY3VyXS5wYXJlbnQpIHtcblx0XHRwYXRoLnVuc2hpZnQoZ3JhcGhbY3VyXS5wYXJlbnQpO1xuXHRcdGZuID0gbGluayhjb252ZXJzaW9uc1tncmFwaFtjdXJdLnBhcmVudF1bY3VyXSwgZm4pO1xuXHRcdGN1ciA9IGdyYXBoW2N1cl0ucGFyZW50O1xuXHR9XG5cblx0Zm4uY29udmVyc2lvbiA9IHBhdGg7XG5cdHJldHVybiBmbjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZnJvbU1vZGVsKSB7XG5cdHZhciBncmFwaCA9IGRlcml2ZUJGUyhmcm9tTW9kZWwpO1xuXHR2YXIgY29udmVyc2lvbiA9IHt9O1xuXG5cdHZhciBtb2RlbHMgPSBPYmplY3Qua2V5cyhncmFwaCk7XG5cdGZvciAodmFyIGxlbiA9IG1vZGVscy5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHR2YXIgdG9Nb2RlbCA9IG1vZGVsc1tpXTtcblx0XHR2YXIgbm9kZSA9IGdyYXBoW3RvTW9kZWxdO1xuXG5cdFx0aWYgKG5vZGUucGFyZW50ID09PSBudWxsKSB7XG5cdFx0XHQvLyBubyBwb3NzaWJsZSBjb252ZXJzaW9uLCBvciB0aGlzIG5vZGUgaXMgdGhlIHNvdXJjZSBtb2RlbC5cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGNvbnZlcnNpb25bdG9Nb2RlbF0gPSB3cmFwQ29udmVyc2lvbih0b01vZGVsLCBncmFwaCk7XG5cdH1cblxuXHRyZXR1cm4gY29udmVyc2lvbjtcbn07XG5cbiJdLCJuYW1lcyI6WyJjb252ZXJzaW9ucyIsInJlcXVpcmUiLCJidWlsZEdyYXBoIiwiZ3JhcGgiLCJtb2RlbHMiLCJPYmplY3QiLCJrZXlzIiwibGVuIiwibGVuZ3RoIiwiaSIsImRpc3RhbmNlIiwicGFyZW50IiwiZGVyaXZlQkZTIiwiZnJvbU1vZGVsIiwicXVldWUiLCJjdXJyZW50IiwicG9wIiwiYWRqYWNlbnRzIiwiYWRqYWNlbnQiLCJub2RlIiwidW5zaGlmdCIsImxpbmsiLCJmcm9tIiwidG8iLCJhcmdzIiwid3JhcENvbnZlcnNpb24iLCJ0b01vZGVsIiwicGF0aCIsImZuIiwiY3VyIiwiY29udmVyc2lvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/color-convert/route.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/color-name/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/color-name/index.js ***!
  \************************************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    \"aliceblue\": [\n        240,\n        248,\n        255\n    ],\n    \"antiquewhite\": [\n        250,\n        235,\n        215\n    ],\n    \"aqua\": [\n        0,\n        255,\n        255\n    ],\n    \"aquamarine\": [\n        127,\n        255,\n        212\n    ],\n    \"azure\": [\n        240,\n        255,\n        255\n    ],\n    \"beige\": [\n        245,\n        245,\n        220\n    ],\n    \"bisque\": [\n        255,\n        228,\n        196\n    ],\n    \"black\": [\n        0,\n        0,\n        0\n    ],\n    \"blanchedalmond\": [\n        255,\n        235,\n        205\n    ],\n    \"blue\": [\n        0,\n        0,\n        255\n    ],\n    \"blueviolet\": [\n        138,\n        43,\n        226\n    ],\n    \"brown\": [\n        165,\n        42,\n        42\n    ],\n    \"burlywood\": [\n        222,\n        184,\n        135\n    ],\n    \"cadetblue\": [\n        95,\n        158,\n        160\n    ],\n    \"chartreuse\": [\n        127,\n        255,\n        0\n    ],\n    \"chocolate\": [\n        210,\n        105,\n        30\n    ],\n    \"coral\": [\n        255,\n        127,\n        80\n    ],\n    \"cornflowerblue\": [\n        100,\n        149,\n        237\n    ],\n    \"cornsilk\": [\n        255,\n        248,\n        220\n    ],\n    \"crimson\": [\n        220,\n        20,\n        60\n    ],\n    \"cyan\": [\n        0,\n        255,\n        255\n    ],\n    \"darkblue\": [\n        0,\n        0,\n        139\n    ],\n    \"darkcyan\": [\n        0,\n        139,\n        139\n    ],\n    \"darkgoldenrod\": [\n        184,\n        134,\n        11\n    ],\n    \"darkgray\": [\n        169,\n        169,\n        169\n    ],\n    \"darkgreen\": [\n        0,\n        100,\n        0\n    ],\n    \"darkgrey\": [\n        169,\n        169,\n        169\n    ],\n    \"darkkhaki\": [\n        189,\n        183,\n        107\n    ],\n    \"darkmagenta\": [\n        139,\n        0,\n        139\n    ],\n    \"darkolivegreen\": [\n        85,\n        107,\n        47\n    ],\n    \"darkorange\": [\n        255,\n        140,\n        0\n    ],\n    \"darkorchid\": [\n        153,\n        50,\n        204\n    ],\n    \"darkred\": [\n        139,\n        0,\n        0\n    ],\n    \"darksalmon\": [\n        233,\n        150,\n        122\n    ],\n    \"darkseagreen\": [\n        143,\n        188,\n        143\n    ],\n    \"darkslateblue\": [\n        72,\n        61,\n        139\n    ],\n    \"darkslategray\": [\n        47,\n        79,\n        79\n    ],\n    \"darkslategrey\": [\n        47,\n        79,\n        79\n    ],\n    \"darkturquoise\": [\n        0,\n        206,\n        209\n    ],\n    \"darkviolet\": [\n        148,\n        0,\n        211\n    ],\n    \"deeppink\": [\n        255,\n        20,\n        147\n    ],\n    \"deepskyblue\": [\n        0,\n        191,\n        255\n    ],\n    \"dimgray\": [\n        105,\n        105,\n        105\n    ],\n    \"dimgrey\": [\n        105,\n        105,\n        105\n    ],\n    \"dodgerblue\": [\n        30,\n        144,\n        255\n    ],\n    \"firebrick\": [\n        178,\n        34,\n        34\n    ],\n    \"floralwhite\": [\n        255,\n        250,\n        240\n    ],\n    \"forestgreen\": [\n        34,\n        139,\n        34\n    ],\n    \"fuchsia\": [\n        255,\n        0,\n        255\n    ],\n    \"gainsboro\": [\n        220,\n        220,\n        220\n    ],\n    \"ghostwhite\": [\n        248,\n        248,\n        255\n    ],\n    \"gold\": [\n        255,\n        215,\n        0\n    ],\n    \"goldenrod\": [\n        218,\n        165,\n        32\n    ],\n    \"gray\": [\n        128,\n        128,\n        128\n    ],\n    \"green\": [\n        0,\n        128,\n        0\n    ],\n    \"greenyellow\": [\n        173,\n        255,\n        47\n    ],\n    \"grey\": [\n        128,\n        128,\n        128\n    ],\n    \"honeydew\": [\n        240,\n        255,\n        240\n    ],\n    \"hotpink\": [\n        255,\n        105,\n        180\n    ],\n    \"indianred\": [\n        205,\n        92,\n        92\n    ],\n    \"indigo\": [\n        75,\n        0,\n        130\n    ],\n    \"ivory\": [\n        255,\n        255,\n        240\n    ],\n    \"khaki\": [\n        240,\n        230,\n        140\n    ],\n    \"lavender\": [\n        230,\n        230,\n        250\n    ],\n    \"lavenderblush\": [\n        255,\n        240,\n        245\n    ],\n    \"lawngreen\": [\n        124,\n        252,\n        0\n    ],\n    \"lemonchiffon\": [\n        255,\n        250,\n        205\n    ],\n    \"lightblue\": [\n        173,\n        216,\n        230\n    ],\n    \"lightcoral\": [\n        240,\n        128,\n        128\n    ],\n    \"lightcyan\": [\n        224,\n        255,\n        255\n    ],\n    \"lightgoldenrodyellow\": [\n        250,\n        250,\n        210\n    ],\n    \"lightgray\": [\n        211,\n        211,\n        211\n    ],\n    \"lightgreen\": [\n        144,\n        238,\n        144\n    ],\n    \"lightgrey\": [\n        211,\n        211,\n        211\n    ],\n    \"lightpink\": [\n        255,\n        182,\n        193\n    ],\n    \"lightsalmon\": [\n        255,\n        160,\n        122\n    ],\n    \"lightseagreen\": [\n        32,\n        178,\n        170\n    ],\n    \"lightskyblue\": [\n        135,\n        206,\n        250\n    ],\n    \"lightslategray\": [\n        119,\n        136,\n        153\n    ],\n    \"lightslategrey\": [\n        119,\n        136,\n        153\n    ],\n    \"lightsteelblue\": [\n        176,\n        196,\n        222\n    ],\n    \"lightyellow\": [\n        255,\n        255,\n        224\n    ],\n    \"lime\": [\n        0,\n        255,\n        0\n    ],\n    \"limegreen\": [\n        50,\n        205,\n        50\n    ],\n    \"linen\": [\n        250,\n        240,\n        230\n    ],\n    \"magenta\": [\n        255,\n        0,\n        255\n    ],\n    \"maroon\": [\n        128,\n        0,\n        0\n    ],\n    \"mediumaquamarine\": [\n        102,\n        205,\n        170\n    ],\n    \"mediumblue\": [\n        0,\n        0,\n        205\n    ],\n    \"mediumorchid\": [\n        186,\n        85,\n        211\n    ],\n    \"mediumpurple\": [\n        147,\n        112,\n        219\n    ],\n    \"mediumseagreen\": [\n        60,\n        179,\n        113\n    ],\n    \"mediumslateblue\": [\n        123,\n        104,\n        238\n    ],\n    \"mediumspringgreen\": [\n        0,\n        250,\n        154\n    ],\n    \"mediumturquoise\": [\n        72,\n        209,\n        204\n    ],\n    \"mediumvioletred\": [\n        199,\n        21,\n        133\n    ],\n    \"midnightblue\": [\n        25,\n        25,\n        112\n    ],\n    \"mintcream\": [\n        245,\n        255,\n        250\n    ],\n    \"mistyrose\": [\n        255,\n        228,\n        225\n    ],\n    \"moccasin\": [\n        255,\n        228,\n        181\n    ],\n    \"navajowhite\": [\n        255,\n        222,\n        173\n    ],\n    \"navy\": [\n        0,\n        0,\n        128\n    ],\n    \"oldlace\": [\n        253,\n        245,\n        230\n    ],\n    \"olive\": [\n        128,\n        128,\n        0\n    ],\n    \"olivedrab\": [\n        107,\n        142,\n        35\n    ],\n    \"orange\": [\n        255,\n        165,\n        0\n    ],\n    \"orangered\": [\n        255,\n        69,\n        0\n    ],\n    \"orchid\": [\n        218,\n        112,\n        214\n    ],\n    \"palegoldenrod\": [\n        238,\n        232,\n        170\n    ],\n    \"palegreen\": [\n        152,\n        251,\n        152\n    ],\n    \"paleturquoise\": [\n        175,\n        238,\n        238\n    ],\n    \"palevioletred\": [\n        219,\n        112,\n        147\n    ],\n    \"papayawhip\": [\n        255,\n        239,\n        213\n    ],\n    \"peachpuff\": [\n        255,\n        218,\n        185\n    ],\n    \"peru\": [\n        205,\n        133,\n        63\n    ],\n    \"pink\": [\n        255,\n        192,\n        203\n    ],\n    \"plum\": [\n        221,\n        160,\n        221\n    ],\n    \"powderblue\": [\n        176,\n        224,\n        230\n    ],\n    \"purple\": [\n        128,\n        0,\n        128\n    ],\n    \"rebeccapurple\": [\n        102,\n        51,\n        153\n    ],\n    \"red\": [\n        255,\n        0,\n        0\n    ],\n    \"rosybrown\": [\n        188,\n        143,\n        143\n    ],\n    \"royalblue\": [\n        65,\n        105,\n        225\n    ],\n    \"saddlebrown\": [\n        139,\n        69,\n        19\n    ],\n    \"salmon\": [\n        250,\n        128,\n        114\n    ],\n    \"sandybrown\": [\n        244,\n        164,\n        96\n    ],\n    \"seagreen\": [\n        46,\n        139,\n        87\n    ],\n    \"seashell\": [\n        255,\n        245,\n        238\n    ],\n    \"sienna\": [\n        160,\n        82,\n        45\n    ],\n    \"silver\": [\n        192,\n        192,\n        192\n    ],\n    \"skyblue\": [\n        135,\n        206,\n        235\n    ],\n    \"slateblue\": [\n        106,\n        90,\n        205\n    ],\n    \"slategray\": [\n        112,\n        128,\n        144\n    ],\n    \"slategrey\": [\n        112,\n        128,\n        144\n    ],\n    \"snow\": [\n        255,\n        250,\n        250\n    ],\n    \"springgreen\": [\n        0,\n        255,\n        127\n    ],\n    \"steelblue\": [\n        70,\n        130,\n        180\n    ],\n    \"tan\": [\n        210,\n        180,\n        140\n    ],\n    \"teal\": [\n        0,\n        128,\n        128\n    ],\n    \"thistle\": [\n        216,\n        191,\n        216\n    ],\n    \"tomato\": [\n        255,\n        99,\n        71\n    ],\n    \"turquoise\": [\n        64,\n        224,\n        208\n    ],\n    \"violet\": [\n        238,\n        130,\n        238\n    ],\n    \"wheat\": [\n        245,\n        222,\n        179\n    ],\n    \"white\": [\n        255,\n        255,\n        255\n    ],\n    \"whitesmoke\": [\n        245,\n        245,\n        245\n    ],\n    \"yellow\": [\n        255,\n        255,\n        0\n    ],\n    \"yellowgreen\": [\n        154,\n        205,\n        50\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/color-name/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/escape-string-regexp/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/escape-string-regexp/index.js ***!
  \**********************************************************************************/
/***/ ((module) => {

eval("\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nmodule.exports = function(str) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"Expected a string\");\n    }\n    return str.replace(matchOperatorsRe, \"\\\\$&\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hpZ2hsaWdodC9ub2RlX21vZHVsZXMvZXNjYXBlLXN0cmluZy1yZWdleHAvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxtQkFBbUI7QUFFdkJDLE9BQU9DLE9BQU8sR0FBRyxTQUFVQyxHQUFHO0lBQzdCLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQzVCLE1BQU0sSUFBSUMsVUFBVTtJQUNyQjtJQUVBLE9BQU9ELElBQUlFLE9BQU8sQ0FBQ0wsa0JBQWtCO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9oaWdobGlnaHQvbm9kZV9tb2R1bGVzL2VzY2FwZS1zdHJpbmctcmVnZXhwL2luZGV4LmpzP2NiYzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbWF0Y2hPcGVyYXRvcnNSZSA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Ll0vZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyKSB7XG5cdGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGEgc3RyaW5nJyk7XG5cdH1cblxuXHRyZXR1cm4gc3RyLnJlcGxhY2UobWF0Y2hPcGVyYXRvcnNSZSwgJ1xcXFwkJicpO1xufTtcbiJdLCJuYW1lcyI6WyJtYXRjaE9wZXJhdG9yc1JlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0ciIsIlR5cGVFcnJvciIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/escape-string-regexp/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/has-flag/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/has-flag/index.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\nmodule.exports = (flag, argv)=>{\n    argv = argv || process.argv;\n    const prefix = flag.startsWith(\"-\") ? \"\" : flag.length === 1 ? \"-\" : \"--\";\n    const pos = argv.indexOf(prefix + flag);\n    const terminatorPos = argv.indexOf(\"--\");\n    return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hpZ2hsaWdodC9ub2RlX21vZHVsZXMvaGFzLWZsYWcvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQUEsT0FBT0MsT0FBTyxHQUFHLENBQUNDLE1BQU1DO0lBQ3ZCQSxPQUFPQSxRQUFRQyxRQUFRRCxJQUFJO0lBQzNCLE1BQU1FLFNBQVNILEtBQUtJLFVBQVUsQ0FBQyxPQUFPLEtBQU1KLEtBQUtLLE1BQU0sS0FBSyxJQUFJLE1BQU07SUFDdEUsTUFBTUMsTUFBTUwsS0FBS00sT0FBTyxDQUFDSixTQUFTSDtJQUNsQyxNQUFNUSxnQkFBZ0JQLEtBQUtNLE9BQU8sQ0FBQztJQUNuQyxPQUFPRCxRQUFRLENBQUMsS0FBTUUsQ0FBQUEsa0JBQWtCLENBQUMsSUFBSSxPQUFPRixNQUFNRSxhQUFZO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9oaWdobGlnaHQvbm9kZV9tb2R1bGVzL2hhcy1mbGFnL2luZGV4LmpzPzBmNDIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoZmxhZywgYXJndikgPT4ge1xuXHRhcmd2ID0gYXJndiB8fCBwcm9jZXNzLmFyZ3Y7XG5cdGNvbnN0IHByZWZpeCA9IGZsYWcuc3RhcnRzV2l0aCgnLScpID8gJycgOiAoZmxhZy5sZW5ndGggPT09IDEgPyAnLScgOiAnLS0nKTtcblx0Y29uc3QgcG9zID0gYXJndi5pbmRleE9mKHByZWZpeCArIGZsYWcpO1xuXHRjb25zdCB0ZXJtaW5hdG9yUG9zID0gYXJndi5pbmRleE9mKCctLScpO1xuXHRyZXR1cm4gcG9zICE9PSAtMSAmJiAodGVybWluYXRvclBvcyA9PT0gLTEgPyB0cnVlIDogcG9zIDwgdGVybWluYXRvclBvcyk7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmbGFnIiwiYXJndiIsInByb2Nlc3MiLCJwcmVmaXgiLCJzdGFydHNXaXRoIiwibGVuZ3RoIiwicG9zIiwiaW5kZXhPZiIsInRlcm1pbmF0b3JQb3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/has-flag/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/node_modules/supports-color/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@babel/highlight/node_modules/supports-color/index.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"(ssr)/./node_modules/@babel/highlight/node_modules/has-flag/index.js\");\nconst env = process.env;\nlet forceColor;\nif (hasFlag(\"no-color\") || hasFlag(\"no-colors\") || hasFlag(\"color=false\")) {\n    forceColor = false;\n} else if (hasFlag(\"color\") || hasFlag(\"colors\") || hasFlag(\"color=true\") || hasFlag(\"color=always\")) {\n    forceColor = true;\n}\nif (\"FORCE_COLOR\" in env) {\n    forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\nfunction translateLevel(level) {\n    if (level === 0) {\n        return false;\n    }\n    return {\n        level,\n        hasBasic: true,\n        has256: level >= 2,\n        has16m: level >= 3\n    };\n}\nfunction supportsColor(stream) {\n    if (forceColor === false) {\n        return 0;\n    }\n    if (hasFlag(\"color=16m\") || hasFlag(\"color=full\") || hasFlag(\"color=truecolor\")) {\n        return 3;\n    }\n    if (hasFlag(\"color=256\")) {\n        return 2;\n    }\n    if (stream && !stream.isTTY && forceColor !== true) {\n        return 0;\n    }\n    const min = forceColor ? 1 : 0;\n    if (process.platform === \"win32\") {\n        // Node.js 7.5.0 is the first version of Node.js to include a patch to\n        // libuv that enables 256 color output on Windows. Anything earlier and it\n        // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n        // release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n        // release that supports 256 colors. Windows 10 build 14931 is the first release\n        // that supports 16m/TrueColor.\n        const osRelease = os.release().split(\".\");\n        if (Number(process.versions.node.split(\".\")[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n            return Number(osRelease[2]) >= 14931 ? 3 : 2;\n        }\n        return 1;\n    }\n    if (\"CI\" in env) {\n        if ([\n            \"TRAVIS\",\n            \"CIRCLECI\",\n            \"APPVEYOR\",\n            \"GITLAB_CI\"\n        ].some((sign)=>sign in env) || env.CI_NAME === \"codeship\") {\n            return 1;\n        }\n        return min;\n    }\n    if (\"TEAMCITY_VERSION\" in env) {\n        return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n    }\n    if (env.COLORTERM === \"truecolor\") {\n        return 3;\n    }\n    if (\"TERM_PROGRAM\" in env) {\n        const version = parseInt((env.TERM_PROGRAM_VERSION || \"\").split(\".\")[0], 10);\n        switch(env.TERM_PROGRAM){\n            case \"iTerm.app\":\n                return version >= 3 ? 3 : 2;\n            case \"Apple_Terminal\":\n                return 2;\n        }\n    }\n    if (/-256(color)?$/i.test(env.TERM)) {\n        return 2;\n    }\n    if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n        return 1;\n    }\n    if (\"COLORTERM\" in env) {\n        return 1;\n    }\n    if (env.TERM === \"dumb\") {\n        return min;\n    }\n    return min;\n}\nfunction getSupportLevel(stream) {\n    const level = supportsColor(stream);\n    return translateLevel(level);\n}\nmodule.exports = {\n    supportsColor: getSupportLevel,\n    stdout: getSupportLevel(process.stdout),\n    stderr: getSupportLevel(process.stderr)\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hpZ2hsaWdodC9ub2RlX21vZHVsZXMvc3VwcG9ydHMtY29sb3IvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxLQUFLQyxtQkFBT0EsQ0FBQztBQUNuQixNQUFNQyxVQUFVRCxtQkFBT0EsQ0FBQztBQUV4QixNQUFNRSxNQUFNQyxRQUFRRCxHQUFHO0FBRXZCLElBQUlFO0FBQ0osSUFBSUgsUUFBUSxlQUNYQSxRQUFRLGdCQUNSQSxRQUFRLGdCQUFnQjtJQUN4QkcsYUFBYTtBQUNkLE9BQU8sSUFBSUgsUUFBUSxZQUNsQkEsUUFBUSxhQUNSQSxRQUFRLGlCQUNSQSxRQUFRLGlCQUFpQjtJQUN6QkcsYUFBYTtBQUNkO0FBQ0EsSUFBSSxpQkFBaUJGLEtBQUs7SUFDekJFLGFBQWFGLElBQUlHLFdBQVcsQ0FBQ0MsTUFBTSxLQUFLLEtBQUtDLFNBQVNMLElBQUlHLFdBQVcsRUFBRSxRQUFRO0FBQ2hGO0FBRUEsU0FBU0csZUFBZUMsS0FBSztJQUM1QixJQUFJQSxVQUFVLEdBQUc7UUFDaEIsT0FBTztJQUNSO0lBRUEsT0FBTztRQUNOQTtRQUNBQyxVQUFVO1FBQ1ZDLFFBQVFGLFNBQVM7UUFDakJHLFFBQVFILFNBQVM7SUFDbEI7QUFDRDtBQUVBLFNBQVNJLGNBQWNDLE1BQU07SUFDNUIsSUFBSVYsZUFBZSxPQUFPO1FBQ3pCLE9BQU87SUFDUjtJQUVBLElBQUlILFFBQVEsZ0JBQ1hBLFFBQVEsaUJBQ1JBLFFBQVEsb0JBQW9CO1FBQzVCLE9BQU87SUFDUjtJQUVBLElBQUlBLFFBQVEsY0FBYztRQUN6QixPQUFPO0lBQ1I7SUFFQSxJQUFJYSxVQUFVLENBQUNBLE9BQU9DLEtBQUssSUFBSVgsZUFBZSxNQUFNO1FBQ25ELE9BQU87SUFDUjtJQUVBLE1BQU1ZLE1BQU1aLGFBQWEsSUFBSTtJQUU3QixJQUFJRCxRQUFRYyxRQUFRLEtBQUssU0FBUztRQUNqQyxzRUFBc0U7UUFDdEUsMEVBQTBFO1FBQzFFLDJFQUEyRTtRQUMzRSw2RUFBNkU7UUFDN0UsZ0ZBQWdGO1FBQ2hGLCtCQUErQjtRQUMvQixNQUFNQyxZQUFZbkIsR0FBR29CLE9BQU8sR0FBR0MsS0FBSyxDQUFDO1FBQ3JDLElBQ0NDLE9BQU9sQixRQUFRbUIsUUFBUSxDQUFDQyxJQUFJLENBQUNILEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEtBQy9DQyxPQUFPSCxTQUFTLENBQUMsRUFBRSxLQUFLLE1BQ3hCRyxPQUFPSCxTQUFTLENBQUMsRUFBRSxLQUFLLE9BQ3ZCO1lBQ0QsT0FBT0csT0FBT0gsU0FBUyxDQUFDLEVBQUUsS0FBSyxRQUFRLElBQUk7UUFDNUM7UUFFQSxPQUFPO0lBQ1I7SUFFQSxJQUFJLFFBQVFoQixLQUFLO1FBQ2hCLElBQUk7WUFBQztZQUFVO1lBQVk7WUFBWTtTQUFZLENBQUNzQixJQUFJLENBQUNDLENBQUFBLE9BQVFBLFFBQVF2QixRQUFRQSxJQUFJd0IsT0FBTyxLQUFLLFlBQVk7WUFDNUcsT0FBTztRQUNSO1FBRUEsT0FBT1Y7SUFDUjtJQUVBLElBQUksc0JBQXNCZCxLQUFLO1FBQzlCLE9BQU8sZ0NBQWdDeUIsSUFBSSxDQUFDekIsSUFBSTBCLGdCQUFnQixJQUFJLElBQUk7SUFDekU7SUFFQSxJQUFJMUIsSUFBSTJCLFNBQVMsS0FBSyxhQUFhO1FBQ2xDLE9BQU87SUFDUjtJQUVBLElBQUksa0JBQWtCM0IsS0FBSztRQUMxQixNQUFNNEIsVUFBVXZCLFNBQVMsQ0FBQ0wsSUFBSTZCLG9CQUFvQixJQUFJLEVBQUMsRUFBR1gsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7UUFFekUsT0FBUWxCLElBQUk4QixZQUFZO1lBQ3ZCLEtBQUs7Z0JBQ0osT0FBT0YsV0FBVyxJQUFJLElBQUk7WUFDM0IsS0FBSztnQkFDSixPQUFPO1FBRVQ7SUFDRDtJQUVBLElBQUksaUJBQWlCSCxJQUFJLENBQUN6QixJQUFJK0IsSUFBSSxHQUFHO1FBQ3BDLE9BQU87SUFDUjtJQUVBLElBQUksOERBQThETixJQUFJLENBQUN6QixJQUFJK0IsSUFBSSxHQUFHO1FBQ2pGLE9BQU87SUFDUjtJQUVBLElBQUksZUFBZS9CLEtBQUs7UUFDdkIsT0FBTztJQUNSO0lBRUEsSUFBSUEsSUFBSStCLElBQUksS0FBSyxRQUFRO1FBQ3hCLE9BQU9qQjtJQUNSO0lBRUEsT0FBT0E7QUFDUjtBQUVBLFNBQVNrQixnQkFBZ0JwQixNQUFNO0lBQzlCLE1BQU1MLFFBQVFJLGNBQWNDO0lBQzVCLE9BQU9OLGVBQWVDO0FBQ3ZCO0FBRUEwQixPQUFPQyxPQUFPLEdBQUc7SUFDaEJ2QixlQUFlcUI7SUFDZkcsUUFBUUgsZ0JBQWdCL0IsUUFBUWtDLE1BQU07SUFDdENDLFFBQVFKLGdCQUFnQi9CLFFBQVFtQyxNQUFNO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9oaWdobGlnaHQvbm9kZV9tb2R1bGVzL3N1cHBvcnRzLWNvbG9yL2luZGV4LmpzPzNjNzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qgb3MgPSByZXF1aXJlKCdvcycpO1xuY29uc3QgaGFzRmxhZyA9IHJlcXVpcmUoJ2hhcy1mbGFnJyk7XG5cbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52O1xuXG5sZXQgZm9yY2VDb2xvcjtcbmlmIChoYXNGbGFnKCduby1jb2xvcicpIHx8XG5cdGhhc0ZsYWcoJ25vLWNvbG9ycycpIHx8XG5cdGhhc0ZsYWcoJ2NvbG9yPWZhbHNlJykpIHtcblx0Zm9yY2VDb2xvciA9IGZhbHNlO1xufSBlbHNlIGlmIChoYXNGbGFnKCdjb2xvcicpIHx8XG5cdGhhc0ZsYWcoJ2NvbG9ycycpIHx8XG5cdGhhc0ZsYWcoJ2NvbG9yPXRydWUnKSB8fFxuXHRoYXNGbGFnKCdjb2xvcj1hbHdheXMnKSkge1xuXHRmb3JjZUNvbG9yID0gdHJ1ZTtcbn1cbmlmICgnRk9SQ0VfQ09MT1InIGluIGVudikge1xuXHRmb3JjZUNvbG9yID0gZW52LkZPUkNFX0NPTE9SLmxlbmd0aCA9PT0gMCB8fCBwYXJzZUludChlbnYuRk9SQ0VfQ09MT1IsIDEwKSAhPT0gMDtcbn1cblxuZnVuY3Rpb24gdHJhbnNsYXRlTGV2ZWwobGV2ZWwpIHtcblx0aWYgKGxldmVsID09PSAwKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHtcblx0XHRsZXZlbCxcblx0XHRoYXNCYXNpYzogdHJ1ZSxcblx0XHRoYXMyNTY6IGxldmVsID49IDIsXG5cdFx0aGFzMTZtOiBsZXZlbCA+PSAzXG5cdH07XG59XG5cbmZ1bmN0aW9uIHN1cHBvcnRzQ29sb3Ioc3RyZWFtKSB7XG5cdGlmIChmb3JjZUNvbG9yID09PSBmYWxzZSkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0aWYgKGhhc0ZsYWcoJ2NvbG9yPTE2bScpIHx8XG5cdFx0aGFzRmxhZygnY29sb3I9ZnVsbCcpIHx8XG5cdFx0aGFzRmxhZygnY29sb3I9dHJ1ZWNvbG9yJykpIHtcblx0XHRyZXR1cm4gMztcblx0fVxuXG5cdGlmIChoYXNGbGFnKCdjb2xvcj0yNTYnKSkge1xuXHRcdHJldHVybiAyO1xuXHR9XG5cblx0aWYgKHN0cmVhbSAmJiAhc3RyZWFtLmlzVFRZICYmIGZvcmNlQ29sb3IgIT09IHRydWUpIHtcblx0XHRyZXR1cm4gMDtcblx0fVxuXG5cdGNvbnN0IG1pbiA9IGZvcmNlQ29sb3IgPyAxIDogMDtcblxuXHRpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJykge1xuXHRcdC8vIE5vZGUuanMgNy41LjAgaXMgdGhlIGZpcnN0IHZlcnNpb24gb2YgTm9kZS5qcyB0byBpbmNsdWRlIGEgcGF0Y2ggdG9cblx0XHQvLyBsaWJ1diB0aGF0IGVuYWJsZXMgMjU2IGNvbG9yIG91dHB1dCBvbiBXaW5kb3dzLiBBbnl0aGluZyBlYXJsaWVyIGFuZCBpdFxuXHRcdC8vIHdvbid0IHdvcmsuIEhvd2V2ZXIsIGhlcmUgd2UgdGFyZ2V0IE5vZGUuanMgOCBhdCBtaW5pbXVtIGFzIGl0IGlzIGFuIExUU1xuXHRcdC8vIHJlbGVhc2UsIGFuZCBOb2RlLmpzIDcgaXMgbm90LiBXaW5kb3dzIDEwIGJ1aWxkIDEwNTg2IGlzIHRoZSBmaXJzdCBXaW5kb3dzXG5cdFx0Ly8gcmVsZWFzZSB0aGF0IHN1cHBvcnRzIDI1NiBjb2xvcnMuIFdpbmRvd3MgMTAgYnVpbGQgMTQ5MzEgaXMgdGhlIGZpcnN0IHJlbGVhc2Vcblx0XHQvLyB0aGF0IHN1cHBvcnRzIDE2bS9UcnVlQ29sb3IuXG5cdFx0Y29uc3Qgb3NSZWxlYXNlID0gb3MucmVsZWFzZSgpLnNwbGl0KCcuJyk7XG5cdFx0aWYgKFxuXHRcdFx0TnVtYmVyKHByb2Nlc3MudmVyc2lvbnMubm9kZS5zcGxpdCgnLicpWzBdKSA+PSA4ICYmXG5cdFx0XHROdW1iZXIob3NSZWxlYXNlWzBdKSA+PSAxMCAmJlxuXHRcdFx0TnVtYmVyKG9zUmVsZWFzZVsyXSkgPj0gMTA1ODZcblx0XHQpIHtcblx0XHRcdHJldHVybiBOdW1iZXIob3NSZWxlYXNlWzJdKSA+PSAxNDkzMSA/IDMgOiAyO1xuXHRcdH1cblxuXHRcdHJldHVybiAxO1xuXHR9XG5cblx0aWYgKCdDSScgaW4gZW52KSB7XG5cdFx0aWYgKFsnVFJBVklTJywgJ0NJUkNMRUNJJywgJ0FQUFZFWU9SJywgJ0dJVExBQl9DSSddLnNvbWUoc2lnbiA9PiBzaWduIGluIGVudikgfHwgZW52LkNJX05BTUUgPT09ICdjb2Rlc2hpcCcpIHtcblx0XHRcdHJldHVybiAxO1xuXHRcdH1cblxuXHRcdHJldHVybiBtaW47XG5cdH1cblxuXHRpZiAoJ1RFQU1DSVRZX1ZFUlNJT04nIGluIGVudikge1xuXHRcdHJldHVybiAvXig5XFwuKDAqWzEtOV1cXGQqKVxcLnxcXGR7Mix9XFwuKS8udGVzdChlbnYuVEVBTUNJVFlfVkVSU0lPTikgPyAxIDogMDtcblx0fVxuXG5cdGlmIChlbnYuQ09MT1JURVJNID09PSAndHJ1ZWNvbG9yJykge1xuXHRcdHJldHVybiAzO1xuXHR9XG5cblx0aWYgKCdURVJNX1BST0dSQU0nIGluIGVudikge1xuXHRcdGNvbnN0IHZlcnNpb24gPSBwYXJzZUludCgoZW52LlRFUk1fUFJPR1JBTV9WRVJTSU9OIHx8ICcnKS5zcGxpdCgnLicpWzBdLCAxMCk7XG5cblx0XHRzd2l0Y2ggKGVudi5URVJNX1BST0dSQU0pIHtcblx0XHRcdGNhc2UgJ2lUZXJtLmFwcCc6XG5cdFx0XHRcdHJldHVybiB2ZXJzaW9uID49IDMgPyAzIDogMjtcblx0XHRcdGNhc2UgJ0FwcGxlX1Rlcm1pbmFsJzpcblx0XHRcdFx0cmV0dXJuIDI7XG5cdFx0XHQvLyBObyBkZWZhdWx0XG5cdFx0fVxuXHR9XG5cblx0aWYgKC8tMjU2KGNvbG9yKT8kL2kudGVzdChlbnYuVEVSTSkpIHtcblx0XHRyZXR1cm4gMjtcblx0fVxuXG5cdGlmICgvXnNjcmVlbnxeeHRlcm18XnZ0MTAwfF52dDIyMHxecnh2dHxjb2xvcnxhbnNpfGN5Z3dpbnxsaW51eC9pLnRlc3QoZW52LlRFUk0pKSB7XG5cdFx0cmV0dXJuIDE7XG5cdH1cblxuXHRpZiAoJ0NPTE9SVEVSTScgaW4gZW52KSB7XG5cdFx0cmV0dXJuIDE7XG5cdH1cblxuXHRpZiAoZW52LlRFUk0gPT09ICdkdW1iJykge1xuXHRcdHJldHVybiBtaW47XG5cdH1cblxuXHRyZXR1cm4gbWluO1xufVxuXG5mdW5jdGlvbiBnZXRTdXBwb3J0TGV2ZWwoc3RyZWFtKSB7XG5cdGNvbnN0IGxldmVsID0gc3VwcG9ydHNDb2xvcihzdHJlYW0pO1xuXHRyZXR1cm4gdHJhbnNsYXRlTGV2ZWwobGV2ZWwpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0c3VwcG9ydHNDb2xvcjogZ2V0U3VwcG9ydExldmVsLFxuXHRzdGRvdXQ6IGdldFN1cHBvcnRMZXZlbChwcm9jZXNzLnN0ZG91dCksXG5cdHN0ZGVycjogZ2V0U3VwcG9ydExldmVsKHByb2Nlc3Muc3RkZXJyKVxufTtcbiJdLCJuYW1lcyI6WyJvcyIsInJlcXVpcmUiLCJoYXNGbGFnIiwiZW52IiwicHJvY2VzcyIsImZvcmNlQ29sb3IiLCJGT1JDRV9DT0xPUiIsImxlbmd0aCIsInBhcnNlSW50IiwidHJhbnNsYXRlTGV2ZWwiLCJsZXZlbCIsImhhc0Jhc2ljIiwiaGFzMjU2IiwiaGFzMTZtIiwic3VwcG9ydHNDb2xvciIsInN0cmVhbSIsImlzVFRZIiwibWluIiwicGxhdGZvcm0iLCJvc1JlbGVhc2UiLCJyZWxlYXNlIiwic3BsaXQiLCJOdW1iZXIiLCJ2ZXJzaW9ucyIsIm5vZGUiLCJzb21lIiwic2lnbiIsIkNJX05BTUUiLCJ0ZXN0IiwiVEVBTUNJVFlfVkVSU0lPTiIsIkNPTE9SVEVSTSIsInZlcnNpb24iLCJURVJNX1BST0dSQU1fVkVSU0lPTiIsIlRFUk1fUFJPR1JBTSIsIlRFUk0iLCJnZXRTdXBwb3J0TGV2ZWwiLCJtb2R1bGUiLCJleHBvcnRzIiwic3Rkb3V0Iiwic3RkZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/node_modules/supports-color/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/code-frame/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@babel/code-frame/lib/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.codeFrameColumns = codeFrameColumns;\nexports[\"default\"] = _default;\nvar _highlight = __webpack_require__(/*! @babel/highlight */ \"(ssr)/./node_modules/@babel/highlight/lib/index.js\");\nvar _picocolors = _interopRequireWildcard(__webpack_require__(/*! picocolors */ \"(ssr)/./node_modules/picocolors/picocolors.js\"), true);\nfunction _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(), t = new WeakMap();\n    return (_getRequireWildcardCache = function(e) {\n        return e ? t : r;\n    })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var u in e)if (\"default\" !== u && ({}).hasOwnProperty.call(e, u)) {\n        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n}\nconst colors = typeof process === \"object\" && (process.env.FORCE_COLOR === \"0\" || process.env.FORCE_COLOR === \"false\") ? (0, _picocolors.createColors)(false) : _picocolors.default;\nconst compose = (f, g)=>(v)=>f(g(v));\nlet pcWithForcedColor = undefined;\nfunction getColors(forceColor) {\n    if (forceColor) {\n        var _pcWithForcedColor;\n        (_pcWithForcedColor = pcWithForcedColor) != null ? _pcWithForcedColor : pcWithForcedColor = (0, _picocolors.createColors)(true);\n        return pcWithForcedColor;\n    }\n    return colors;\n}\nlet deprecationWarningShown = false;\nfunction getDefs(colors) {\n    return {\n        gutter: colors.gray,\n        marker: compose(colors.red, colors.bold),\n        message: compose(colors.red, colors.bold)\n    };\n}\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nfunction getMarkerLines(loc, source, opts) {\n    const startLoc = Object.assign({\n        column: 0,\n        line: -1\n    }, loc.start);\n    const endLoc = Object.assign({}, startLoc, loc.end);\n    const { linesAbove = 2, linesBelow = 3 } = opts || {};\n    const startLine = startLoc.line;\n    const startColumn = startLoc.column;\n    const endLine = endLoc.line;\n    const endColumn = endLoc.column;\n    let start = Math.max(startLine - (linesAbove + 1), 0);\n    let end = Math.min(source.length, endLine + linesBelow);\n    if (startLine === -1) {\n        start = 0;\n    }\n    if (endLine === -1) {\n        end = source.length;\n    }\n    const lineDiff = endLine - startLine;\n    const markerLines = {};\n    if (lineDiff) {\n        for(let i = 0; i <= lineDiff; i++){\n            const lineNumber = i + startLine;\n            if (!startColumn) {\n                markerLines[lineNumber] = true;\n            } else if (i === 0) {\n                const sourceLength = source[lineNumber - 1].length;\n                markerLines[lineNumber] = [\n                    startColumn,\n                    sourceLength - startColumn + 1\n                ];\n            } else if (i === lineDiff) {\n                markerLines[lineNumber] = [\n                    0,\n                    endColumn\n                ];\n            } else {\n                const sourceLength = source[lineNumber - i].length;\n                markerLines[lineNumber] = [\n                    0,\n                    sourceLength\n                ];\n            }\n        }\n    } else {\n        if (startColumn === endColumn) {\n            if (startColumn) {\n                markerLines[startLine] = [\n                    startColumn,\n                    0\n                ];\n            } else {\n                markerLines[startLine] = true;\n            }\n        } else {\n            markerLines[startLine] = [\n                startColumn,\n                endColumn - startColumn\n            ];\n        }\n    }\n    return {\n        start,\n        end,\n        markerLines\n    };\n}\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n    const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n    const colors = getColors(opts.forceColor);\n    const defs = getDefs(colors);\n    const maybeHighlight = (fmt, string)=>{\n        return highlighted ? fmt(string) : string;\n    };\n    const lines = rawLines.split(NEWLINE);\n    const { start, end, markerLines } = getMarkerLines(loc, lines, opts);\n    const hasColumns = loc.start && typeof loc.start.column === \"number\";\n    const numberMaxWidth = String(end).length;\n    const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n    let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index)=>{\n        const number = start + 1 + index;\n        const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n        const gutter = ` ${paddedNumber} |`;\n        const hasMarker = markerLines[number];\n        const lastMarkerLine = !markerLines[number + 1];\n        if (hasMarker) {\n            let markerLine = \"\";\n            if (Array.isArray(hasMarker)) {\n                const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n                const numberOfMarkers = hasMarker[1] || 1;\n                markerLine = [\n                    \"\\n \",\n                    maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")),\n                    \" \",\n                    markerSpacing,\n                    maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)\n                ].join(\"\");\n                if (lastMarkerLine && opts.message) {\n                    markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n                }\n            }\n            return [\n                maybeHighlight(defs.marker, \">\"),\n                maybeHighlight(defs.gutter, gutter),\n                line.length > 0 ? ` ${line}` : \"\",\n                markerLine\n            ].join(\"\");\n        } else {\n            return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n        }\n    }).join(\"\\n\");\n    if (opts.message && !hasColumns) {\n        frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n    }\n    if (highlighted) {\n        return colors.reset(frame);\n    } else {\n        return frame;\n    }\n}\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n    if (!deprecationWarningShown) {\n        deprecationWarningShown = true;\n        const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n        if (process.emitWarning) {\n            process.emitWarning(message, \"DeprecationWarning\");\n        } else {\n            const deprecationError = new Error(message);\n            deprecationError.name = \"DeprecationWarning\";\n            console.warn(new Error(message));\n        }\n    }\n    colNumber = Math.max(colNumber, 0);\n    const location = {\n        start: {\n            column: colNumber,\n            line: lineNumber\n        }\n    };\n    return codeFrameColumns(rawLines, location, opts);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2NvZGUtZnJhbWUvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCx3QkFBd0IsR0FBR0U7QUFDM0JGLGtCQUFlLEdBQUdJO0FBQ2xCLElBQUlDLGFBQWFDLG1CQUFPQSxDQUFDLDRFQUFrQjtBQUMzQyxJQUFJQyxjQUFjQyx3QkFBd0JGLG1CQUFPQSxDQUFDLGlFQUFZLEdBQUc7QUFDakUsU0FBU0cseUJBQXlCQyxDQUFDO0lBQUksSUFBSSxjQUFjLE9BQU9DLFNBQVMsT0FBTztJQUFNLElBQUlDLElBQUksSUFBSUQsV0FBV0UsSUFBSSxJQUFJRjtJQUFXLE9BQU8sQ0FBQ0YsMkJBQTJCLFNBQVVDLENBQUM7UUFBSSxPQUFPQSxJQUFJRyxJQUFJRDtJQUFHLEdBQUdGO0FBQUk7QUFDM00sU0FBU0Ysd0JBQXdCRSxDQUFDLEVBQUVFLENBQUM7SUFBSSxJQUFJLENBQUNBLEtBQUtGLEtBQUtBLEVBQUVJLFVBQVUsRUFBRSxPQUFPSjtJQUFHLElBQUksU0FBU0EsS0FBSyxZQUFZLE9BQU9BLEtBQUssY0FBYyxPQUFPQSxHQUFHLE9BQU87UUFBRVAsU0FBU087SUFBRTtJQUFHLElBQUlHLElBQUlKLHlCQUF5Qkc7SUFBSSxJQUFJQyxLQUFLQSxFQUFFRSxHQUFHLENBQUNMLElBQUksT0FBT0csRUFBRUcsR0FBRyxDQUFDTjtJQUFJLElBQUlPLElBQUk7UUFBRUMsV0FBVztJQUFLLEdBQUdDLElBQUlyQixPQUFPQyxjQUFjLElBQUlELE9BQU9zQix3QkFBd0I7SUFBRSxJQUFLLElBQUlDLEtBQUtYLEVBQUcsSUFBSSxjQUFjVyxLQUFLLEVBQUMsR0FBRUMsY0FBYyxDQUFDQyxJQUFJLENBQUNiLEdBQUdXLElBQUk7UUFBRSxJQUFJRyxJQUFJTCxJQUFJckIsT0FBT3NCLHdCQUF3QixDQUFDVixHQUFHVyxLQUFLO1FBQU1HLEtBQU1B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TWdCO1FBQ1I7SUFDRjtJQUNBLE9BQU90RSxpQkFBaUJ3RSxVQUFVc0MsVUFBVTVEO0FBQzlDLEVBRUEsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9jb2RlLWZyYW1lL2xpYi9pbmRleC5qcz9kZThmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jb2RlRnJhbWVDb2x1bW5zID0gY29kZUZyYW1lQ29sdW1ucztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xudmFyIF9oaWdobGlnaHQgPSByZXF1aXJlKFwiQGJhYmVsL2hpZ2hsaWdodFwiKTtcbnZhciBfcGljb2NvbG9ycyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJwaWNvY29sb3JzXCIpLCB0cnVlKTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShlKSB7IGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIFdlYWtNYXApIHJldHVybiBudWxsOyB2YXIgciA9IG5ldyBXZWFrTWFwKCksIHQgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBlID8gdCA6IHI7IH0pKGUpOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChlLCByKSB7IGlmICghciAmJiBlICYmIGUuX19lc01vZHVsZSkgcmV0dXJuIGU7IGlmIChudWxsID09PSBlIHx8IFwib2JqZWN0XCIgIT0gdHlwZW9mIGUgJiYgXCJmdW5jdGlvblwiICE9IHR5cGVvZiBlKSByZXR1cm4geyBkZWZhdWx0OiBlIH07IHZhciB0ID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKHIpOyBpZiAodCAmJiB0LmhhcyhlKSkgcmV0dXJuIHQuZ2V0KGUpOyB2YXIgbiA9IHsgX19wcm90b19fOiBudWxsIH0sIGEgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIgdSBpbiBlKSBpZiAoXCJkZWZhdWx0XCIgIT09IHUgJiYge30uaGFzT3duUHJvcGVydHkuY2FsbChlLCB1KSkgeyB2YXIgaSA9IGEgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHUpIDogbnVsbDsgaSAmJiAoaS5nZXQgfHwgaS5zZXQpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sIHUsIGkpIDogblt1XSA9IGVbdV07IH0gcmV0dXJuIG4uZGVmYXVsdCA9IGUsIHQgJiYgdC5zZXQoZSwgbiksIG47IH1cbmNvbnN0IGNvbG9ycyA9IHR5cGVvZiBwcm9jZXNzID09PSBcIm9iamVjdFwiICYmIChwcm9jZXNzLmVudi5GT1JDRV9DT0xPUiA9PT0gXCIwXCIgfHwgcHJvY2Vzcy5lbnYuRk9SQ0VfQ09MT1IgPT09IFwiZmFsc2VcIikgPyAoMCwgX3BpY29jb2xvcnMuY3JlYXRlQ29sb3JzKShmYWxzZSkgOiBfcGljb2NvbG9ycy5kZWZhdWx0O1xuY29uc3QgY29tcG9zZSA9IChmLCBnKSA9PiB2ID0+IGYoZyh2KSk7XG5sZXQgcGNXaXRoRm9yY2VkQ29sb3IgPSB1bmRlZmluZWQ7XG5mdW5jdGlvbiBnZXRDb2xvcnMoZm9yY2VDb2xvcikge1xuICBpZiAoZm9yY2VDb2xvcikge1xuICAgIHZhciBfcGNXaXRoRm9yY2VkQ29sb3I7XG4gICAgKF9wY1dpdGhGb3JjZWRDb2xvciA9IHBjV2l0aEZvcmNlZENvbG9yKSAhPSBudWxsID8gX3BjV2l0aEZvcmNlZENvbG9yIDogcGNXaXRoRm9yY2VkQ29sb3IgPSAoMCwgX3BpY29jb2xvcnMuY3JlYXRlQ29sb3JzKSh0cnVlKTtcbiAgICByZXR1cm4gcGNXaXRoRm9yY2VkQ29sb3I7XG4gIH1cbiAgcmV0dXJuIGNvbG9ycztcbn1cbmxldCBkZXByZWNhdGlvbldhcm5pbmdTaG93biA9IGZhbHNlO1xuZnVuY3Rpb24gZ2V0RGVmcyhjb2xvcnMpIHtcbiAgcmV0dXJuIHtcbiAgICBndXR0ZXI6IGNvbG9ycy5ncmF5LFxuICAgIG1hcmtlcjogY29tcG9zZShjb2xvcnMucmVkLCBjb2xvcnMuYm9sZCksXG4gICAgbWVzc2FnZTogY29tcG9zZShjb2xvcnMucmVkLCBjb2xvcnMuYm9sZClcbiAgfTtcbn1cbmNvbnN0IE5FV0xJTkUgPSAvXFxyXFxufFtcXG5cXHJcXHUyMDI4XFx1MjAyOV0vO1xuZnVuY3Rpb24gZ2V0TWFya2VyTGluZXMobG9jLCBzb3VyY2UsIG9wdHMpIHtcbiAgY29uc3Qgc3RhcnRMb2MgPSBPYmplY3QuYXNzaWduKHtcbiAgICBjb2x1bW46IDAsXG4gICAgbGluZTogLTFcbiAgfSwgbG9jLnN0YXJ0KTtcbiAgY29uc3QgZW5kTG9jID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhcnRMb2MsIGxvYy5lbmQpO1xuICBjb25zdCB7XG4gICAgbGluZXNBYm92ZSA9IDIsXG4gICAgbGluZXNCZWxvdyA9IDNcbiAgfSA9IG9wdHMgfHwge307XG4gIGNvbnN0IHN0YXJ0TGluZSA9IHN0YXJ0TG9jLmxpbmU7XG4gIGNvbnN0IHN0YXJ0Q29sdW1uID0gc3RhcnRMb2MuY29sdW1uO1xuICBjb25zdCBlbmRMaW5lID0gZW5kTG9jLmxpbmU7XG4gIGNvbnN0IGVuZENvbHVtbiA9IGVuZExvYy5jb2x1bW47XG4gIGxldCBzdGFydCA9IE1hdGgubWF4KHN0YXJ0TGluZSAtIChsaW5lc0Fib3ZlICsgMSksIDApO1xuICBsZXQgZW5kID0gTWF0aC5taW4oc291cmNlLmxlbmd0aCwgZW5kTGluZSArIGxpbmVzQmVsb3cpO1xuICBpZiAoc3RhcnRMaW5lID09PSAtMSkge1xuICAgIHN0YXJ0ID0gMDtcbiAgfVxuICBpZiAoZW5kTGluZSA9PT0gLTEpIHtcbiAgICBlbmQgPSBzb3VyY2UubGVuZ3RoO1xuICB9XG4gIGNvbnN0IGxpbmVEaWZmID0gZW5kTGluZSAtIHN0YXJ0TGluZTtcbiAgY29uc3QgbWFya2VyTGluZXMgPSB7fTtcbiAgaWYgKGxpbmVEaWZmKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbGluZURpZmY7IGkrKykge1xuICAgICAgY29uc3QgbGluZU51bWJlciA9IGkgKyBzdGFydExpbmU7XG4gICAgICBpZiAoIXN0YXJ0Q29sdW1uKSB7XG4gICAgICAgIG1hcmtlckxpbmVzW2xpbmVOdW1iZXJdID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAoaSA9PT0gMCkge1xuICAgICAgICBjb25zdCBzb3VyY2VMZW5ndGggPSBzb3VyY2VbbGluZU51bWJlciAtIDFdLmxlbmd0aDtcbiAgICAgICAgbWFya2VyTGluZXNbbGluZU51bWJlcl0gPSBbc3RhcnRDb2x1bW4sIHNvdXJjZUxlbmd0aCAtIHN0YXJ0Q29sdW1uICsgMV07XG4gICAgICB9IGVsc2UgaWYgKGkgPT09IGxpbmVEaWZmKSB7XG4gICAgICAgIG1hcmtlckxpbmVzW2xpbmVOdW1iZXJdID0gWzAsIGVuZENvbHVtbl07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBzb3VyY2VMZW5ndGggPSBzb3VyY2VbbGluZU51bWJlciAtIGldLmxlbmd0aDtcbiAgICAgICAgbWFya2VyTGluZXNbbGluZU51bWJlcl0gPSBbMCwgc291cmNlTGVuZ3RoXTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKHN0YXJ0Q29sdW1uID09PSBlbmRDb2x1bW4pIHtcbiAgICAgIGlmIChzdGFydENvbHVtbikge1xuICAgICAgICBtYXJrZXJMaW5lc1tzdGFydExpbmVdID0gW3N0YXJ0Q29sdW1uLCAwXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1hcmtlckxpbmVzW3N0YXJ0TGluZV0gPSB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBtYXJrZXJMaW5lc1tzdGFydExpbmVdID0gW3N0YXJ0Q29sdW1uLCBlbmRDb2x1bW4gLSBzdGFydENvbHVtbl07XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgc3RhcnQsXG4gICAgZW5kLFxuICAgIG1hcmtlckxpbmVzXG4gIH07XG59XG5mdW5jdGlvbiBjb2RlRnJhbWVDb2x1bW5zKHJhd0xpbmVzLCBsb2MsIG9wdHMgPSB7fSkge1xuICBjb25zdCBoaWdobGlnaHRlZCA9IChvcHRzLmhpZ2hsaWdodENvZGUgfHwgb3B0cy5mb3JjZUNvbG9yKSAmJiAoMCwgX2hpZ2hsaWdodC5zaG91bGRIaWdobGlnaHQpKG9wdHMpO1xuICBjb25zdCBjb2xvcnMgPSBnZXRDb2xvcnMob3B0cy5mb3JjZUNvbG9yKTtcbiAgY29uc3QgZGVmcyA9IGdldERlZnMoY29sb3JzKTtcbiAgY29uc3QgbWF5YmVIaWdobGlnaHQgPSAoZm10LCBzdHJpbmcpID0+IHtcbiAgICByZXR1cm4gaGlnaGxpZ2h0ZWQgPyBmbXQoc3RyaW5nKSA6IHN0cmluZztcbiAgfTtcbiAgY29uc3QgbGluZXMgPSByYXdMaW5lcy5zcGxpdChORVdMSU5FKTtcbiAgY29uc3Qge1xuICAgIHN0YXJ0LFxuICAgIGVuZCxcbiAgICBtYXJrZXJMaW5lc1xuICB9ID0gZ2V0TWFya2VyTGluZXMobG9jLCBsaW5lcywgb3B0cyk7XG4gIGNvbnN0IGhhc0NvbHVtbnMgPSBsb2Muc3RhcnQgJiYgdHlwZW9mIGxvYy5zdGFydC5jb2x1bW4gPT09IFwibnVtYmVyXCI7XG4gIGNvbnN0IG51bWJlck1heFdpZHRoID0gU3RyaW5nKGVuZCkubGVuZ3RoO1xuICBjb25zdCBoaWdobGlnaHRlZExpbmVzID0gaGlnaGxpZ2h0ZWQgPyAoMCwgX2hpZ2hsaWdodC5kZWZhdWx0KShyYXdMaW5lcywgb3B0cykgOiByYXdMaW5lcztcbiAgbGV0IGZyYW1lID0gaGlnaGxpZ2h0ZWRMaW5lcy5zcGxpdChORVdMSU5FLCBlbmQpLnNsaWNlKHN0YXJ0LCBlbmQpLm1hcCgobGluZSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBudW1iZXIgPSBzdGFydCArIDEgKyBpbmRleDtcbiAgICBjb25zdCBwYWRkZWROdW1iZXIgPSBgICR7bnVtYmVyfWAuc2xpY2UoLW51bWJlck1heFdpZHRoKTtcbiAgICBjb25zdCBndXR0ZXIgPSBgICR7cGFkZGVkTnVtYmVyfSB8YDtcbiAgICBjb25zdCBoYXNNYXJrZXIgPSBtYXJrZXJMaW5lc1tudW1iZXJdO1xuICAgIGNvbnN0IGxhc3RNYXJrZXJMaW5lID0gIW1hcmtlckxpbmVzW251bWJlciArIDFdO1xuICAgIGlmIChoYXNNYXJrZXIpIHtcbiAgICAgIGxldCBtYXJrZXJMaW5lID0gXCJcIjtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGhhc01hcmtlcikpIHtcbiAgICAgICAgY29uc3QgbWFya2VyU3BhY2luZyA9IGxpbmUuc2xpY2UoMCwgTWF0aC5tYXgoaGFzTWFya2VyWzBdIC0gMSwgMCkpLnJlcGxhY2UoL1teXFx0XS9nLCBcIiBcIik7XG4gICAgICAgIGNvbnN0IG51bWJlck9mTWFya2VycyA9IGhhc01hcmtlclsxXSB8fCAxO1xuICAgICAgICBtYXJrZXJMaW5lID0gW1wiXFxuIFwiLCBtYXliZUhpZ2hsaWdodChkZWZzLmd1dHRlciwgZ3V0dGVyLnJlcGxhY2UoL1xcZC9nLCBcIiBcIikpLCBcIiBcIiwgbWFya2VyU3BhY2luZywgbWF5YmVIaWdobGlnaHQoZGVmcy5tYXJrZXIsIFwiXlwiKS5yZXBlYXQobnVtYmVyT2ZNYXJrZXJzKV0uam9pbihcIlwiKTtcbiAgICAgICAgaWYgKGxhc3RNYXJrZXJMaW5lICYmIG9wdHMubWVzc2FnZSkge1xuICAgICAgICAgIG1hcmtlckxpbmUgKz0gXCIgXCIgKyBtYXliZUhpZ2hsaWdodChkZWZzLm1lc3NhZ2UsIG9wdHMubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBbbWF5YmVIaWdobGlnaHQoZGVmcy5tYXJrZXIsIFwiPlwiKSwgbWF5YmVIaWdobGlnaHQoZGVmcy5ndXR0ZXIsIGd1dHRlciksIGxpbmUubGVuZ3RoID4gMCA/IGAgJHtsaW5lfWAgOiBcIlwiLCBtYXJrZXJMaW5lXS5qb2luKFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYCAke21heWJlSGlnaGxpZ2h0KGRlZnMuZ3V0dGVyLCBndXR0ZXIpfSR7bGluZS5sZW5ndGggPiAwID8gYCAke2xpbmV9YCA6IFwiXCJ9YDtcbiAgICB9XG4gIH0pLmpvaW4oXCJcXG5cIik7XG4gIGlmIChvcHRzLm1lc3NhZ2UgJiYgIWhhc0NvbHVtbnMpIHtcbiAgICBmcmFtZSA9IGAke1wiIFwiLnJlcGVhdChudW1iZXJNYXhXaWR0aCArIDEpfSR7b3B0cy5tZXNzYWdlfVxcbiR7ZnJhbWV9YDtcbiAgfVxuICBpZiAoaGlnaGxpZ2h0ZWQpIHtcbiAgICByZXR1cm4gY29sb3JzLnJlc2V0KGZyYW1lKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZnJhbWU7XG4gIH1cbn1cbmZ1bmN0aW9uIF9kZWZhdWx0KHJhd0xpbmVzLCBsaW5lTnVtYmVyLCBjb2xOdW1iZXIsIG9wdHMgPSB7fSkge1xuICBpZiAoIWRlcHJlY2F0aW9uV2FybmluZ1Nob3duKSB7XG4gICAgZGVwcmVjYXRpb25XYXJuaW5nU2hvd24gPSB0cnVlO1xuICAgIGNvbnN0IG1lc3NhZ2UgPSBcIlBhc3NpbmcgbGluZU51bWJlciBhbmQgY29sTnVtYmVyIGlzIGRlcHJlY2F0ZWQgdG8gQGJhYmVsL2NvZGUtZnJhbWUuIFBsZWFzZSB1c2UgYGNvZGVGcmFtZUNvbHVtbnNgLlwiO1xuICAgIGlmIChwcm9jZXNzLmVtaXRXYXJuaW5nKSB7XG4gICAgICBwcm9jZXNzLmVtaXRXYXJuaW5nKG1lc3NhZ2UsIFwiRGVwcmVjYXRpb25XYXJuaW5nXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBkZXByZWNhdGlvbkVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgZGVwcmVjYXRpb25FcnJvci5uYW1lID0gXCJEZXByZWNhdGlvbldhcm5pbmdcIjtcbiAgICAgIGNvbnNvbGUud2FybihuZXcgRXJyb3IobWVzc2FnZSkpO1xuICAgIH1cbiAgfVxuICBjb2xOdW1iZXIgPSBNYXRoLm1heChjb2xOdW1iZXIsIDApO1xuICBjb25zdCBsb2NhdGlvbiA9IHtcbiAgICBzdGFydDoge1xuICAgICAgY29sdW1uOiBjb2xOdW1iZXIsXG4gICAgICBsaW5lOiBsaW5lTnVtYmVyXG4gICAgfVxuICB9O1xuICByZXR1cm4gY29kZUZyYW1lQ29sdW1ucyhyYXdMaW5lcywgbG9jYXRpb24sIG9wdHMpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvZGVGcmFtZUNvbHVtbnMiLCJkZWZhdWx0IiwiX2RlZmF1bHQiLCJfaGlnaGxpZ2h0IiwicmVxdWlyZSIsIl9waWNvY29sb3JzIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJlIiwiV2Vha01hcCIsInIiLCJ0IiwiX19lc01vZHVsZSIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJjb2xvcnMiLCJwcm9jZXNzIiwiZW52IiwiRk9SQ0VfQ09MT1IiLCJjcmVhdGVDb2xvcnMiLCJjb21wb3NlIiwiZiIsImciLCJ2IiwicGNXaXRoRm9yY2VkQ29sb3IiLCJ1bmRlZmluZWQiLCJnZXRDb2xvcnMiLCJmb3JjZUNvbG9yIiwiX3BjV2l0aEZvcmNlZENvbG9yIiwiZGVwcmVjYXRpb25XYXJuaW5nU2hvd24iLCJnZXREZWZzIiwiZ3V0dGVyIiwiZ3JheSIsIm1hcmtlciIsInJlZCIsImJvbGQiLCJtZXNzYWdlIiwiTkVXTElORSIsImdldE1hcmtlckxpbmVzIiwibG9jIiwic291cmNlIiwib3B0cyIsInN0YXJ0TG9jIiwiYXNzaWduIiwiY29sdW1uIiwibGluZSIsInN0YXJ0IiwiZW5kTG9jIiwiZW5kIiwibGluZXNBYm92ZSIsImxpbmVzQmVsb3ciLCJzdGFydExpbmUiLCJzdGFydENvbHVtbiIsImVuZExpbmUiLCJlbmRDb2x1bW4iLCJNYXRoIiwibWF4IiwibWluIiwibGVuZ3RoIiwibGluZURpZmYiLCJtYXJrZXJMaW5lcyIsImxpbmVOdW1iZXIiLCJzb3VyY2VMZW5ndGgiLCJyYXdMaW5lcyIsImhpZ2hsaWdodGVkIiwiaGlnaGxpZ2h0Q29kZSIsInNob3VsZEhpZ2hsaWdodCIsImRlZnMiLCJtYXliZUhpZ2hsaWdodCIsImZtdCIsInN0cmluZyIsImxpbmVzIiwic3BsaXQiLCJoYXNDb2x1bW5zIiwibnVtYmVyTWF4V2lkdGgiLCJTdHJpbmciLCJoaWdobGlnaHRlZExpbmVzIiwiZnJhbWUiLCJzbGljZSIsIm1hcCIsImluZGV4IiwibnVtYmVyIiwicGFkZGVkTnVtYmVyIiwiaGFzTWFya2VyIiwibGFzdE1hcmtlckxpbmUiLCJtYXJrZXJMaW5lIiwiQXJyYXkiLCJpc0FycmF5IiwibWFya2VyU3BhY2luZyIsInJlcGxhY2UiLCJudW1iZXJPZk1hcmtlcnMiLCJyZXBlYXQiLCJqb2luIiwicmVzZXQiLCJjb2xOdW1iZXIiLCJlbWl0V2FybmluZyIsImRlcHJlY2F0aW9uRXJyb3IiLCJFcnJvciIsIm5hbWUiLCJjb25zb2xlIiwid2FybiIsImxvY2F0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/code-frame/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/helper-validator-identifier/lib/identifier.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/helper-validator-identifier/lib/identifier.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierName = isIdentifierName;\nexports.isIdentifierStart = isIdentifierStart;\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟊꟐꟑꟓꟕ-ꟙꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ\";\nlet nonASCIIidentifierChars = \"‌‍\\xb7̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࢘-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [\n    0,\n    11,\n    2,\n    25,\n    2,\n    18,\n    2,\n    1,\n    2,\n    14,\n    3,\n    13,\n    35,\n    122,\n    70,\n    52,\n    268,\n    28,\n    4,\n    48,\n    48,\n    31,\n    14,\n    29,\n    6,\n    37,\n    11,\n    29,\n    3,\n    35,\n    5,\n    7,\n    2,\n    4,\n    43,\n    157,\n    19,\n    35,\n    5,\n    35,\n    5,\n    39,\n    9,\n    51,\n    13,\n    10,\n    2,\n    14,\n    2,\n    6,\n    2,\n    1,\n    2,\n    10,\n    2,\n    14,\n    2,\n    6,\n    2,\n    1,\n    68,\n    310,\n    10,\n    21,\n    11,\n    7,\n    25,\n    5,\n    2,\n    41,\n    2,\n    8,\n    70,\n    5,\n    3,\n    0,\n    2,\n    43,\n    2,\n    1,\n    4,\n    0,\n    3,\n    22,\n    11,\n    22,\n    10,\n    30,\n    66,\n    18,\n    2,\n    1,\n    11,\n    21,\n    11,\n    25,\n    71,\n    55,\n    7,\n    1,\n    65,\n    0,\n    16,\n    3,\n    2,\n    2,\n    2,\n    28,\n    43,\n    28,\n    4,\n    28,\n    36,\n    7,\n    2,\n    27,\n    28,\n    53,\n    11,\n    21,\n    11,\n    18,\n    14,\n    17,\n    111,\n    72,\n    56,\n    50,\n    14,\n    50,\n    14,\n    35,\n    349,\n    41,\n    7,\n    1,\n    79,\n    28,\n    11,\n    0,\n    9,\n    21,\n    43,\n    17,\n    47,\n    20,\n    28,\n    22,\n    13,\n    52,\n    58,\n    1,\n    3,\n    0,\n    14,\n    44,\n    33,\n    24,\n    27,\n    35,\n    30,\n    0,\n    3,\n    0,\n    9,\n    34,\n    4,\n    0,\n    13,\n    47,\n    15,\n    3,\n    22,\n    0,\n    2,\n    0,\n    36,\n    17,\n    2,\n    24,\n    20,\n    1,\n    64,\n    6,\n    2,\n    0,\n    2,\n    3,\n    2,\n    14,\n    2,\n    9,\n    8,\n    46,\n    39,\n    7,\n    3,\n    1,\n    3,\n    21,\n    2,\n    6,\n    2,\n    1,\n    2,\n    4,\n    4,\n    0,\n    19,\n    0,\n    13,\n    4,\n    159,\n    52,\n    19,\n    3,\n    21,\n    2,\n    31,\n    47,\n    21,\n    1,\n    2,\n    0,\n    185,\n    46,\n    42,\n    3,\n    37,\n    47,\n    21,\n    0,\n    60,\n    42,\n    14,\n    0,\n    72,\n    26,\n    38,\n    6,\n    186,\n    43,\n    117,\n    63,\n    32,\n    7,\n    3,\n    0,\n    3,\n    7,\n    2,\n    1,\n    2,\n    23,\n    16,\n    0,\n    2,\n    0,\n    95,\n    7,\n    3,\n    38,\n    17,\n    0,\n    2,\n    0,\n    29,\n    0,\n    11,\n    39,\n    8,\n    0,\n    22,\n    0,\n    12,\n    45,\n    20,\n    0,\n    19,\n    72,\n    264,\n    8,\n    2,\n    36,\n    18,\n    0,\n    50,\n    29,\n    113,\n    6,\n    2,\n    1,\n    2,\n    37,\n    22,\n    0,\n    26,\n    5,\n    2,\n    1,\n    2,\n    31,\n    15,\n    0,\n    328,\n    18,\n    16,\n    0,\n    2,\n    12,\n    2,\n    33,\n    125,\n    0,\n    80,\n    921,\n    103,\n    110,\n    18,\n    195,\n    2637,\n    96,\n    16,\n    1071,\n    18,\n    5,\n    4026,\n    582,\n    8634,\n    568,\n    8,\n    30,\n    18,\n    78,\n    18,\n    29,\n    19,\n    47,\n    17,\n    3,\n    32,\n    20,\n    6,\n    18,\n    689,\n    63,\n    129,\n    74,\n    6,\n    0,\n    67,\n    12,\n    65,\n    1,\n    2,\n    0,\n    29,\n    6135,\n    9,\n    1237,\n    43,\n    8,\n    8936,\n    3,\n    2,\n    6,\n    2,\n    1,\n    2,\n    290,\n    16,\n    0,\n    30,\n    2,\n    3,\n    0,\n    15,\n    3,\n    9,\n    395,\n    2309,\n    106,\n    6,\n    12,\n    4,\n    8,\n    8,\n    9,\n    5991,\n    84,\n    2,\n    70,\n    2,\n    1,\n    3,\n    0,\n    3,\n    1,\n    3,\n    3,\n    2,\n    11,\n    2,\n    0,\n    2,\n    6,\n    2,\n    64,\n    2,\n    3,\n    3,\n    7,\n    2,\n    6,\n    2,\n    27,\n    2,\n    3,\n    2,\n    4,\n    2,\n    0,\n    4,\n    6,\n    2,\n    339,\n    3,\n    24,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    30,\n    2,\n    24,\n    2,\n    7,\n    1845,\n    30,\n    7,\n    5,\n    262,\n    61,\n    147,\n    44,\n    11,\n    6,\n    17,\n    0,\n    322,\n    29,\n    19,\n    43,\n    485,\n    27,\n    757,\n    6,\n    2,\n    3,\n    2,\n    1,\n    2,\n    14,\n    2,\n    196,\n    60,\n    67,\n    8,\n    0,\n    1205,\n    3,\n    2,\n    26,\n    2,\n    1,\n    2,\n    0,\n    3,\n    0,\n    2,\n    9,\n    2,\n    3,\n    2,\n    0,\n    2,\n    0,\n    7,\n    0,\n    5,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    2,\n    2,\n    1,\n    2,\n    0,\n    3,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    0,\n    2,\n    1,\n    2,\n    0,\n    3,\n    3,\n    2,\n    6,\n    2,\n    3,\n    2,\n    3,\n    2,\n    0,\n    2,\n    9,\n    2,\n    16,\n    6,\n    2,\n    2,\n    4,\n    2,\n    16,\n    4421,\n    42719,\n    33,\n    4153,\n    7,\n    221,\n    3,\n    5761,\n    15,\n    7472,\n    16,\n    621,\n    2467,\n    541,\n    1507,\n    4938,\n    6,\n    4191\n];\nconst astralIdentifierCodes = [\n    509,\n    0,\n    227,\n    0,\n    150,\n    4,\n    294,\n    9,\n    1368,\n    2,\n    2,\n    1,\n    6,\n    3,\n    41,\n    2,\n    5,\n    0,\n    166,\n    1,\n    574,\n    3,\n    9,\n    9,\n    370,\n    1,\n    81,\n    2,\n    71,\n    10,\n    50,\n    3,\n    123,\n    2,\n    54,\n    14,\n    32,\n    10,\n    3,\n    1,\n    11,\n    3,\n    46,\n    10,\n    8,\n    0,\n    46,\n    9,\n    7,\n    2,\n    37,\n    13,\n    2,\n    9,\n    6,\n    1,\n    45,\n    0,\n    13,\n    2,\n    49,\n    13,\n    9,\n    3,\n    2,\n    11,\n    83,\n    11,\n    7,\n    0,\n    3,\n    0,\n    158,\n    11,\n    6,\n    9,\n    7,\n    3,\n    56,\n    1,\n    2,\n    6,\n    3,\n    1,\n    3,\n    2,\n    10,\n    0,\n    11,\n    1,\n    3,\n    6,\n    4,\n    4,\n    193,\n    17,\n    10,\n    9,\n    5,\n    0,\n    82,\n    19,\n    13,\n    9,\n    214,\n    6,\n    3,\n    8,\n    28,\n    1,\n    83,\n    16,\n    16,\n    9,\n    82,\n    12,\n    9,\n    9,\n    84,\n    14,\n    5,\n    9,\n    243,\n    14,\n    166,\n    9,\n    71,\n    5,\n    2,\n    1,\n    3,\n    3,\n    2,\n    0,\n    2,\n    1,\n    13,\n    9,\n    120,\n    6,\n    3,\n    6,\n    4,\n    0,\n    29,\n    9,\n    41,\n    6,\n    2,\n    3,\n    9,\n    0,\n    10,\n    10,\n    47,\n    15,\n    406,\n    7,\n    2,\n    7,\n    17,\n    9,\n    57,\n    21,\n    2,\n    13,\n    123,\n    5,\n    4,\n    0,\n    2,\n    1,\n    2,\n    6,\n    2,\n    0,\n    9,\n    9,\n    49,\n    4,\n    2,\n    1,\n    2,\n    4,\n    9,\n    9,\n    330,\n    3,\n    10,\n    1,\n    2,\n    0,\n    49,\n    6,\n    4,\n    4,\n    14,\n    9,\n    5351,\n    0,\n    7,\n    14,\n    13835,\n    9,\n    87,\n    9,\n    39,\n    4,\n    60,\n    6,\n    26,\n    9,\n    1014,\n    0,\n    2,\n    54,\n    8,\n    3,\n    82,\n    0,\n    12,\n    1,\n    19628,\n    1,\n    4706,\n    45,\n    3,\n    22,\n    543,\n    4,\n    4,\n    5,\n    9,\n    7,\n    3,\n    6,\n    31,\n    3,\n    149,\n    2,\n    1418,\n    49,\n    513,\n    54,\n    5,\n    49,\n    9,\n    0,\n    15,\n    0,\n    23,\n    4,\n    2,\n    14,\n    1361,\n    6,\n    2,\n    16,\n    3,\n    6,\n    2,\n    1,\n    2,\n    4,\n    101,\n    0,\n    161,\n    6,\n    10,\n    9,\n    357,\n    0,\n    62,\n    13,\n    499,\n    13,\n    983,\n    6,\n    110,\n    6,\n    6,\n    9,\n    4759,\n    9,\n    787719,\n    239\n];\nfunction isInAstralSet(code, set) {\n    let pos = 0x10000;\n    for(let i = 0, length = set.length; i < length; i += 2){\n        pos += set[i];\n        if (pos > code) return false;\n        pos += set[i + 1];\n        if (pos >= code) return true;\n    }\n    return false;\n}\nfunction isIdentifierStart(code) {\n    if (code < 65) return code === 36;\n    if (code <= 90) return true;\n    if (code < 97) return code === 95;\n    if (code <= 122) return true;\n    if (code <= 0xffff) {\n        return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n    }\n    return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code <= 90) return true;\n    if (code < 97) return code === 95;\n    if (code <= 122) return true;\n    if (code <= 0xffff) {\n        return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n    }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nfunction isIdentifierName(name) {\n    let isFirst = true;\n    for(let i = 0; i < name.length; i++){\n        let cp = name.charCodeAt(i);\n        if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n            const trail = name.charCodeAt(++i);\n            if ((trail & 0xfc00) === 0xdc00) {\n                cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n            }\n        }\n        if (isFirst) {\n            isFirst = false;\n            if (!isIdentifierStart(cp)) {\n                return false;\n            }\n        } else if (!isIdentifierChar(cp)) {\n            return false;\n        }\n    }\n    return !isFirst;\n} //# sourceMappingURL=identifier.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/helper-validator-identifier/lib/identifier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/helper-validator-identifier/lib/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/helper-validator-identifier/lib/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isIdentifierChar\", ({\n    enumerable: true,\n    get: function() {\n        return _identifier.isIdentifierChar;\n    }\n}));\nObject.defineProperty(exports, \"isIdentifierName\", ({\n    enumerable: true,\n    get: function() {\n        return _identifier.isIdentifierName;\n    }\n}));\nObject.defineProperty(exports, \"isIdentifierStart\", ({\n    enumerable: true,\n    get: function() {\n        return _identifier.isIdentifierStart;\n    }\n}));\nObject.defineProperty(exports, \"isKeyword\", ({\n    enumerable: true,\n    get: function() {\n        return _keyword.isKeyword;\n    }\n}));\nObject.defineProperty(exports, \"isReservedWord\", ({\n    enumerable: true,\n    get: function() {\n        return _keyword.isReservedWord;\n    }\n}));\nObject.defineProperty(exports, \"isStrictBindOnlyReservedWord\", ({\n    enumerable: true,\n    get: function() {\n        return _keyword.isStrictBindOnlyReservedWord;\n    }\n}));\nObject.defineProperty(exports, \"isStrictBindReservedWord\", ({\n    enumerable: true,\n    get: function() {\n        return _keyword.isStrictBindReservedWord;\n    }\n}));\nObject.defineProperty(exports, \"isStrictReservedWord\", ({\n    enumerable: true,\n    get: function() {\n        return _keyword.isStrictReservedWord;\n    }\n}));\nvar _identifier = __webpack_require__(/*! ./identifier.js */ \"(ssr)/./node_modules/@babel/helper-validator-identifier/lib/identifier.js\");\nvar _keyword = __webpack_require__(/*! ./keyword.js */ \"(ssr)/./node_modules/@babel/helper-validator-identifier/lib/keyword.js\"); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hlbHBlci12YWxpZGF0b3ItaWRlbnRpZmllci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZILG9EQUFtRDtJQUNqREksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0MsWUFBWUMsZ0JBQWdCO0lBQ3JDO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLG9EQUFtRDtJQUNqREksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0MsWUFBWUUsZ0JBQWdCO0lBQ3JDO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZSLHFEQUFvRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0MsWUFBWUcsaUJBQWlCO0lBQ3RDO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZULDZDQUE0QztJQUMxQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0ssU0FBU0MsU0FBUztJQUMzQjtBQUNGLENBQUMsRUFBQztBQUNGWCxrREFBaUQ7SUFDL0NJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9LLFNBQVNFLGNBQWM7SUFDaEM7QUFDRixDQUFDLEVBQUM7QUFDRlosZ0VBQStEO0lBQzdESSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPSyxTQUFTRyw0QkFBNEI7SUFDOUM7QUFDRixDQUFDLEVBQUM7QUFDRmIsNERBQTJEO0lBQ3pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPSyxTQUFTSSx3QkFBd0I7SUFDMUM7QUFDRixDQUFDLEVBQUM7QUFDRmQsd0RBQXVEO0lBQ3JESSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPSyxTQUFTSyxvQkFBb0I7SUFDdEM7QUFDRixDQUFDLEVBQUM7QUFDRixJQUFJVCxjQUFjVSxtQkFBT0EsQ0FBQyxrR0FBaUI7QUFDM0MsSUFBSU4sV0FBV00sbUJBQU9BLENBQUMsNEZBQWMsR0FFckMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaXB0LXczLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9oZWxwZXItdmFsaWRhdG9yLWlkZW50aWZpZXIvbGliL2luZGV4LmpzPzlhOTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0lkZW50aWZpZXJDaGFyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9pZGVudGlmaWVyLmlzSWRlbnRpZmllckNoYXI7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNJZGVudGlmaWVyTmFtZVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfaWRlbnRpZmllci5pc0lkZW50aWZpZXJOYW1lO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzSWRlbnRpZmllclN0YXJ0XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9pZGVudGlmaWVyLmlzSWRlbnRpZmllclN0YXJ0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzS2V5d29yZFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfa2V5d29yZC5pc0tleXdvcmQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNSZXNlcnZlZFdvcmRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX2tleXdvcmQuaXNSZXNlcnZlZFdvcmQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNTdHJpY3RCaW5kT25seVJlc2VydmVkV29yZFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfa2V5d29yZC5pc1N0cmljdEJpbmRPbmx5UmVzZXJ2ZWRXb3JkO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzU3RyaWN0QmluZFJlc2VydmVkV29yZFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfa2V5d29yZC5pc1N0cmljdEJpbmRSZXNlcnZlZFdvcmQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNTdHJpY3RSZXNlcnZlZFdvcmRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX2tleXdvcmQuaXNTdHJpY3RSZXNlcnZlZFdvcmQ7XG4gIH1cbn0pO1xudmFyIF9pZGVudGlmaWVyID0gcmVxdWlyZShcIi4vaWRlbnRpZmllci5qc1wiKTtcbnZhciBfa2V5d29yZCA9IHJlcXVpcmUoXCIuL2tleXdvcmQuanNcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9pZGVudGlmaWVyIiwiaXNJZGVudGlmaWVyQ2hhciIsImlzSWRlbnRpZmllck5hbWUiLCJpc0lkZW50aWZpZXJTdGFydCIsIl9rZXl3b3JkIiwiaXNLZXl3b3JkIiwiaXNSZXNlcnZlZFdvcmQiLCJpc1N0cmljdEJpbmRPbmx5UmVzZXJ2ZWRXb3JkIiwiaXNTdHJpY3RCaW5kUmVzZXJ2ZWRXb3JkIiwiaXNTdHJpY3RSZXNlcnZlZFdvcmQiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/helper-validator-identifier/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/helper-validator-identifier/lib/keyword.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/helper-validator-identifier/lib/keyword.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isKeyword = isKeyword;\nexports.isReservedWord = isReservedWord;\nexports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;\nexports.isStrictBindReservedWord = isStrictBindReservedWord;\nexports.isStrictReservedWord = isStrictReservedWord;\nconst reservedWords = {\n    keyword: [\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"continue\",\n        \"debugger\",\n        \"default\",\n        \"do\",\n        \"else\",\n        \"finally\",\n        \"for\",\n        \"function\",\n        \"if\",\n        \"return\",\n        \"switch\",\n        \"throw\",\n        \"try\",\n        \"var\",\n        \"const\",\n        \"while\",\n        \"with\",\n        \"new\",\n        \"this\",\n        \"super\",\n        \"class\",\n        \"extends\",\n        \"export\",\n        \"import\",\n        \"null\",\n        \"true\",\n        \"false\",\n        \"in\",\n        \"instanceof\",\n        \"typeof\",\n        \"void\",\n        \"delete\"\n    ],\n    strict: [\n        \"implements\",\n        \"interface\",\n        \"let\",\n        \"package\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"static\",\n        \"yield\"\n    ],\n    strictBind: [\n        \"eval\",\n        \"arguments\"\n    ]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n    return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n    return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n    return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n    return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n    return keywords.has(word);\n} //# sourceMappingURL=keyword.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hlbHBlci12YWxpZGF0b3ItaWRlbnRpZmllci9saWIva2V5d29yZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsaUJBQWlCLEdBQUdFO0FBQ3BCRixzQkFBc0IsR0FBR0c7QUFDekJILG9DQUFvQyxHQUFHSTtBQUN2Q0osZ0NBQWdDLEdBQUdLO0FBQ25DTCw0QkFBNEIsR0FBR007QUFDL0IsTUFBTUMsZ0JBQWdCO0lBQ3BCQyxTQUFTO1FBQUM7UUFBUztRQUFRO1FBQVM7UUFBWTtRQUFZO1FBQVc7UUFBTTtRQUFRO1FBQVc7UUFBTztRQUFZO1FBQU07UUFBVTtRQUFVO1FBQVM7UUFBTztRQUFPO1FBQVM7UUFBUztRQUFRO1FBQU87UUFBUTtRQUFTO1FBQVM7UUFBVztRQUFVO1FBQVU7UUFBUTtRQUFRO1FBQVM7UUFBTTtRQUFjO1FBQVU7UUFBUTtLQUFTO0lBQ3RVQyxRQUFRO1FBQUM7UUFBYztRQUFhO1FBQU87UUFBVztRQUFXO1FBQWE7UUFBVTtRQUFVO0tBQVE7SUFDMUdDLFlBQVk7UUFBQztRQUFRO0tBQVk7QUFDbkM7QUFDQSxNQUFNQyxXQUFXLElBQUlDLElBQUlMLGNBQWNDLE9BQU87QUFDOUMsTUFBTUsseUJBQXlCLElBQUlELElBQUlMLGNBQWNFLE1BQU07QUFDM0QsTUFBTUssNkJBQTZCLElBQUlGLElBQUlMLGNBQWNHLFVBQVU7QUFDbkUsU0FBU1AsZUFBZVksSUFBSSxFQUFFQyxRQUFRO0lBQ3BDLE9BQU9BLFlBQVlELFNBQVMsV0FBV0EsU0FBUztBQUNsRDtBQUNBLFNBQVNULHFCQUFxQlMsSUFBSSxFQUFFQyxRQUFRO0lBQzFDLE9BQU9iLGVBQWVZLE1BQU1DLGFBQWFILHVCQUF1QkksR0FBRyxDQUFDRjtBQUN0RTtBQUNBLFNBQVNYLDZCQUE2QlcsSUFBSTtJQUN4QyxPQUFPRCwyQkFBMkJHLEdBQUcsQ0FBQ0Y7QUFDeEM7QUFDQSxTQUFTVix5QkFBeUJVLElBQUksRUFBRUMsUUFBUTtJQUM5QyxPQUFPVixxQkFBcUJTLE1BQU1DLGFBQWFaLDZCQUE2Qlc7QUFDOUU7QUFDQSxTQUFTYixVQUFVYSxJQUFJO0lBQ3JCLE9BQU9KLFNBQVNNLEdBQUcsQ0FBQ0Y7QUFDdEIsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pcHQtdzMvLi9ub2RlX21vZHVsZXMvQGJhYmVsL2hlbHBlci12YWxpZGF0b3ItaWRlbnRpZmllci9saWIva2V5d29yZC5qcz80NzgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5pc0tleXdvcmQgPSBpc0tleXdvcmQ7XG5leHBvcnRzLmlzUmVzZXJ2ZWRXb3JkID0gaXNSZXNlcnZlZFdvcmQ7XG5leHBvcnRzLmlzU3RyaWN0QmluZE9ubHlSZXNlcnZlZFdvcmQgPSBpc1N0cmljdEJpbmRPbmx5UmVzZXJ2ZWRXb3JkO1xuZXhwb3J0cy5pc1N0cmljdEJpbmRSZXNlcnZlZFdvcmQgPSBpc1N0cmljdEJpbmRSZXNlcnZlZFdvcmQ7XG5leHBvcnRzLmlzU3RyaWN0UmVzZXJ2ZWRXb3JkID0gaXNTdHJpY3RSZXNlcnZlZFdvcmQ7XG5jb25zdCByZXNlcnZlZFdvcmRzID0ge1xuICBrZXl3b3JkOiBbXCJicmVha1wiLCBcImNhc2VcIiwgXCJjYXRjaFwiLCBcImNvbnRpbnVlXCIsIFwiZGVidWdnZXJcIiwgXCJkZWZhdWx0XCIsIFwiZG9cIiwgXCJlbHNlXCIsIFwiZmluYWxseVwiLCBcImZvclwiLCBcImZ1bmN0aW9uXCIsIFwiaWZcIiwgXCJyZXR1cm5cIiwgXCJzd2l0Y2hcIiwgXCJ0aHJvd1wiLCBcInRyeVwiLCBcInZhclwiLCBcImNvbnN0XCIsIFwid2hpbGVcIiwgXCJ3aXRoXCIsIFwibmV3XCIsIFwidGhpc1wiLCBcInN1cGVyXCIsIFwiY2xhc3NcIiwgXCJleHRlbmRzXCIsIFwiZXhwb3J0XCIsIFwiaW1wb3J0XCIsIFwibnVsbFwiLCBcInRydWVcIiwgXCJmYWxzZVwiLCBcImluXCIsIFwiaW5zdGFuY2VvZlwiLCBcInR5cGVvZlwiLCBcInZvaWRcIiwgXCJkZWxldGVcIl0sXG4gIHN0cmljdDogW1wiaW1wbGVtZW50c1wiLCBcImludGVyZmFjZVwiLCBcImxldFwiLCBcInBhY2thZ2VcIiwgXCJwcml2YXRlXCIsIFwicHJvdGVjdGVkXCIsIFwicHVibGljXCIsIFwic3RhdGljXCIsIFwieWllbGRcIl0sXG4gIHN0cmljdEJpbmQ6IFtcImV2YWxcIiwgXCJhcmd1bWVudHNcIl1cbn07XG5jb25zdCBrZXl3b3JkcyA9IG5ldyBTZXQocmVzZXJ2ZWRXb3Jkcy5rZXl3b3JkKTtcbmNvbnN0IHJlc2VydmVkV29yZHNTdHJpY3RTZXQgPSBuZXcgU2V0KHJlc2VydmVkV29yZHMuc3RyaWN0KTtcbmNvbnN0IHJlc2VydmVkV29yZHNTdHJpY3RCaW5kU2V0ID0gbmV3IFNldChyZXNlcnZlZFdvcmRzLnN0cmljdEJpbmQpO1xuZnVuY3Rpb24gaXNSZXNlcnZlZFdvcmQod29yZCwgaW5Nb2R1bGUpIHtcbiAgcmV0dXJuIGluTW9kdWxlICYmIHdvcmQgPT09IFwiYXdhaXRcIiB8fCB3b3JkID09PSBcImVudW1cIjtcbn1cbmZ1bmN0aW9uIGlzU3RyaWN0UmVzZXJ2ZWRXb3JkKHdvcmQsIGluTW9kdWxlKSB7XG4gIHJldHVybiBpc1Jlc2VydmVkV29yZCh3b3JkLCBpbk1vZHVsZSkgfHwgcmVzZXJ2ZWRXb3Jkc1N0cmljdFNldC5oYXMod29yZCk7XG59XG5mdW5jdGlvbiBpc1N0cmljdEJpbmRPbmx5UmVzZXJ2ZWRXb3JkKHdvcmQpIHtcbiAgcmV0dXJuIHJlc2VydmVkV29yZHNTdHJpY3RCaW5kU2V0Lmhhcyh3b3JkKTtcbn1cbmZ1bmN0aW9uIGlzU3RyaWN0QmluZFJlc2VydmVkV29yZCh3b3JkLCBpbk1vZHVsZSkge1xuICByZXR1cm4gaXNTdHJpY3RSZXNlcnZlZFdvcmQod29yZCwgaW5Nb2R1bGUpIHx8IGlzU3RyaWN0QmluZE9ubHlSZXNlcnZlZFdvcmQod29yZCk7XG59XG5mdW5jdGlvbiBpc0tleXdvcmQod29yZCkge1xuICByZXR1cm4ga2V5d29yZHMuaGFzKHdvcmQpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXl3b3JkLmpzLm1hcFxuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNLZXl3b3JkIiwiaXNSZXNlcnZlZFdvcmQiLCJpc1N0cmljdEJpbmRPbmx5UmVzZXJ2ZWRXb3JkIiwiaXNTdHJpY3RCaW5kUmVzZXJ2ZWRXb3JkIiwiaXNTdHJpY3RSZXNlcnZlZFdvcmQiLCJyZXNlcnZlZFdvcmRzIiwia2V5d29yZCIsInN0cmljdCIsInN0cmljdEJpbmQiLCJrZXl3b3JkcyIsIlNldCIsInJlc2VydmVkV29yZHNTdHJpY3RTZXQiLCJyZXNlcnZlZFdvcmRzU3RyaWN0QmluZFNldCIsIndvcmQiLCJpbk1vZHVsZSIsImhhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/helper-validator-identifier/lib/keyword.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@babel/highlight/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@babel/highlight/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = highlight;\nexports.shouldHighlight = shouldHighlight;\nvar _jsTokens = __webpack_require__(/*! js-tokens */ \"(ssr)/./node_modules/js-tokens/index.js\");\nvar _helperValidatorIdentifier = __webpack_require__(/*! @babel/helper-validator-identifier */ \"(ssr)/./node_modules/@babel/helper-validator-identifier/lib/index.js\");\nvar _picocolors = _interopRequireWildcard(__webpack_require__(/*! picocolors */ \"(ssr)/./node_modules/picocolors/picocolors.js\"), true);\nfunction _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(), t = new WeakMap();\n    return (_getRequireWildcardCache = function(e) {\n        return e ? t : r;\n    })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n        default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var u in e)if (\"default\" !== u && ({}).hasOwnProperty.call(e, u)) {\n        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n}\nconst colors = typeof process === \"object\" && (process.env.FORCE_COLOR === \"0\" || process.env.FORCE_COLOR === \"false\") ? (0, _picocolors.createColors)(false) : _picocolors.default;\nconst compose = (f, g)=>(v)=>f(g(v));\nconst sometimesKeywords = new Set([\n    \"as\",\n    \"async\",\n    \"from\",\n    \"get\",\n    \"of\",\n    \"set\"\n]);\nfunction getDefs(colors) {\n    return {\n        keyword: colors.cyan,\n        capitalized: colors.yellow,\n        jsxIdentifier: colors.yellow,\n        punctuator: colors.yellow,\n        number: colors.magenta,\n        string: colors.green,\n        regex: colors.magenta,\n        comment: colors.gray,\n        invalid: compose(compose(colors.white, colors.bgRed), colors.bold)\n    };\n}\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n    const JSX_TAG = /^[a-z][\\w-]*$/i;\n    const getTokenType = function(token, offset, text) {\n        if (token.type === \"name\") {\n            if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n                return \"keyword\";\n            }\n            if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.slice(offset - 2, offset) === \"</\")) {\n                return \"jsxIdentifier\";\n            }\n            if (token.value[0] !== token.value[0].toLowerCase()) {\n                return \"capitalized\";\n            }\n        }\n        if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n            return \"bracket\";\n        }\n        if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n            return \"punctuator\";\n        }\n        return token.type;\n    };\n    tokenize = function*(text) {\n        let match;\n        while(match = _jsTokens.default.exec(text)){\n            const token = _jsTokens.matchToToken(match);\n            yield {\n                type: getTokenType(token, match.index, text),\n                value: token.value\n            };\n        }\n    };\n}function highlightTokens(defs, text) {\n    let highlighted = \"\";\n    for (const { type, value } of tokenize(text)){\n        const colorize = defs[type];\n        if (colorize) {\n            highlighted += value.split(NEWLINE).map((str)=>colorize(str)).join(\"\\n\");\n        } else {\n            highlighted += value;\n        }\n    }\n    return highlighted;\n}\nfunction shouldHighlight(options) {\n    return colors.isColorSupported || options.forceColor;\n}\nlet pcWithForcedColor = undefined;\nfunction getColors(forceColor) {\n    if (forceColor) {\n        var _pcWithForcedColor;\n        (_pcWithForcedColor = pcWithForcedColor) != null ? _pcWithForcedColor : pcWithForcedColor = (0, _picocolors.createColors)(true);\n        return pcWithForcedColor;\n    }\n    return colors;\n}\nfunction highlight(code, options = {}) {\n    if (code !== \"\" && shouldHighlight(options)) {\n        const defs = getDefs(getColors(options.forceColor));\n        return highlightTokens(defs, code);\n    } else {\n        return code;\n    }\n}\n{\n    let chalk, chalkWithForcedColor;\n    exports.getChalk = ({ forceColor })=>{\n        var _chalk;\n        (_chalk = chalk) != null ? _chalk : chalk = __webpack_require__(/*! chalk */ \"(ssr)/./node_modules/@babel/highlight/node_modules/chalk/index.js\");\n        if (forceColor) {\n            var _chalkWithForcedColor;\n            (_chalkWithForcedColor = chalkWithForcedColor) != null ? _chalkWithForcedColor : chalkWithForcedColor = new chalk.constructor({\n                enabled: true,\n                level: 1\n            });\n            return chalkWithForcedColor;\n        }\n        return chalk;\n    };\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@babel/highlight/lib/index.js\n");

/***/ })

};
;